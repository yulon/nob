#pragma once

#include "base.hpp"
#include "consts.hpp"

namespace nob {
	namespace ntv {
		namespace STATS {
			extern typed_lazy_func_t<void(const char* p0, Any p1, Any p2)> _0x11FF1C80276097ED;
			extern typed_lazy_func_t<bool()> _0x5EAD2BF6484852E4;
			extern typed_lazy_func_t<void(Any p0)> _0xA8733668D1047B51;
			extern typed_lazy_func_t<bool(Hash statHash, bool* outValue, Any p2)> STAT_GET_BOOL;
			extern typed_lazy_func_t<bool()> _0x5A556B229A169402;
			extern typed_lazy_func_t<void(Any* p0, Any p1, Any p2, bool p3)> PLAYSTATS_MISSION_STARTED;
			extern typed_lazy_func_t<void(Hash scaleformHash, int p1)> PLAYSTATS_WEBSITE_VISITED;
			extern typed_lazy_func_t<bool(int p0)> STAT_LOAD;
			extern typed_lazy_func_t<bool(Hash statName, Any* value, int numFields, bool save)> STAT_SET_DATE;
			extern typed_lazy_func_t<void(Any* p0, Any p1, Any p2, Any p3)> _0x71862B1D855F32E1;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6)> PLAYSTATS_MATCH_STARTED;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xF4FF020A08BC8863;
			extern typed_lazy_func_t<void(Any p0, float p1, Any p2)> _0x30A6614C1F7799B8;
			extern typed_lazy_func_t<void(Any p0)> _0xDAC073C7901F9E15;
			extern typed_lazy_func_t<bool(Hash statName, const char* str)> STAT_SET_LICENSE_PLATE;
			extern typed_lazy_func_t<void(Any p0)> PLAYSTATS_RANK_UP;
			extern typed_lazy_func_t<Any()> LEADERBOARDS_READ_CLEAR_ALL;
			extern typed_lazy_func_t<bool(Any* p0, Any p1, Any* p2)> LEADERBOARDS2_READ_BY_RADIUS;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any* p2)> _0xC38DC1E90D22547C;
			extern typed_lazy_func_t<Any()> _0x4FEF53183C3C6414;
			extern typed_lazy_func_t<bool(Hash statName, bool p1)> STAT_SET_CURRENT_POSIX_TIME;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, float p3)> _0x121FB4DDDC2D5291;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2)> LEADERBOARDS_GET_COLUMN_ID;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x0D01D20616FC73FB;
			extern typed_lazy_func_t<void()> _0x047CBED6F6F8B63C;
			extern typed_lazy_func_t<void()> _0x098760C7461724CD;
			extern typed_lazy_func_t<void(float p0, float p1, float p2)> _PLAYSTATS_AMBIENT_MISSION_CRATE_CREATED;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0x2B69F5074C894811;
			extern typed_lazy_func_t<bool(Any p0)> STAT_LOAD_PENDING;
			extern typed_lazy_func_t<bool(Hash statName, bool value, bool save)> STAT_SET_BOOL;
			extern typed_lazy_func_t<bool(Hash statName, const char* value, bool save)> STAT_SET_STRING;
			extern typed_lazy_func_t<void(Hash statName, float value)> STAT_INCREMENT;
			extern typed_lazy_func_t<void(const char* p0, Any p1)> _0x5009DFD741329729;
			extern typed_lazy_func_t<void()> _0x98E2BC1CA26287C3;
			extern typed_lazy_func_t<void()> _0x6F361B8889A792A3;
			extern typed_lazy_func_t<Any()> STAT_SAVE_PENDING;
			extern typed_lazy_func_t<bool(Hash statHash, Any* p1, Any p2, Any p3)> STAT_GET_DATE;
			extern typed_lazy_func_t<void(int p0)> _0xA78B8FA58200DA56;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2)> LEADERBOARDS_GET_CACHE_DATA_ROW;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x723C1CE13FBFDB67;
			extern typed_lazy_func_t<Any()> _0x567384DFA67029E6;
			extern typed_lazy_func_t<void(Any p0)> _0xF6792800AC95350D;
			extern typed_lazy_func_t<Any(Any p0)> STAT_DELETE_SLOT;
			extern typed_lazy_func_t<void(int p0, const char* p1)> _0x90D0622866E80445;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x88578F6EC36B4A3A;
			extern typed_lazy_func_t<Any()> _0xB3DA2606774A8E2D;
			extern typed_lazy_func_t<bool(Hash statName, float x, float y, float z, bool save)> STAT_SET_POS;
			extern typed_lazy_func_t<Any()> _0xA31FD15197B192BD;
			extern typed_lazy_func_t<Any()> _0x4C89FE2BDEB3F169;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any* p2)> _0x3270F67EED31FBC1;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2)> LEADERBOARDS_READ_PENDING;
			extern typed_lazy_func_t<void()> LEADERBOARDS_CLEAR_CACHE_DATA;
			extern typed_lazy_func_t<Any(Any p0)> LEADERBOARDS_GET_CACHE_TIME;
			extern typed_lazy_func_t<Any()> _0xC70DDCE56D0D3A99;
			extern typed_lazy_func_t<Any()> STAT_SAVE_PENDING_OR_REQUESTED;
			extern typed_lazy_func_t<void(bool p0)> _0xF434A10BA01C37D0;
			extern typed_lazy_func_t<bool(Hash statName, float value, bool save)> STAT_SET_FLOAT;
			extern typed_lazy_func_t<void(Any* p0, Any* p1, Any* p2, Any* p3)> _0xA736CF7FB7C5BFF4;
			extern typed_lazy_func_t<bool(Hash statName, const char* value, bool save)> STAT_SET_USER_ID;
			extern typed_lazy_func_t<void(Any* p0, Any* p1, Any* p2, Any* p3)> _0x14E0B2D1AD1044E0;
			extern typed_lazy_func_t<void(int value)> _0x38BAAA5DD4C9D19F;
			extern typed_lazy_func_t<void()> _0x9B4BD21D69B1E609;
			extern typed_lazy_func_t<Any()> _0xC0E0D686DDFC6EAE;
			extern typed_lazy_func_t<const char*(Hash statHash, int p1)> STAT_GET_STRING;
			extern typed_lazy_func_t<Hash(int index, bool spStat, bool charStat, int character)> _GET_TUPSTAT_BOOL_HASH;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> PLAYSTATS_ODDJOB_DONE;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0xE95C8A1875A02CA4;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any p2, bool p3, Any p4, Any p5)> LEADERBOARDS2_READ_FRIENDS_BY_ROW;
			extern typed_lazy_func_t<void()> _0xB475F27C6A994D65;
			extern typed_lazy_func_t<bool(Any* p0)> _0xA5C80D8E768A9E66;
			extern typed_lazy_func_t<void(Any* p0, Any p1, Any p2, bool p3, bool p4, bool p5)> PLAYSTATS_MISSION_OVER;
			extern typed_lazy_func_t<void(Any* p0, Any p1, Any p2, Any p3)> PLAYSTATS_MISSION_CHECKPOINT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9)> _0xADDD1C754E2E2914;
			extern typed_lazy_func_t<Any(Any p0)> _0x58A651CD201D89AD;
			extern typed_lazy_func_t<Any()> _0x9A62EC95AE10E011;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> _0x34770B9CE0E03B91;
			extern typed_lazy_func_t<float(Any p0, Any p1)> _0x38491439B6BA7F7D;
			extern typed_lazy_func_t<bool(Any p0)> LEADERBOARDS_GET_CACHE_EXISTS;
			extern typed_lazy_func_t<bool(Any p0)> _0x7E6946F68A38B74F;
			extern typed_lazy_func_t<bool()> _0xB1D2BB1E1631F5B1;
			extern typed_lazy_func_t<Hash(int index, bool spStat, bool charStat, int character, const char* section)> _GET_NGSTAT_BOOL_HASH;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> PLAYSTATS_RACE_CHECKPOINT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> PLAYSTATS_CLOTH_CHANGE;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2)> LEADERBOARDS_READ_CLEAR;
			extern typed_lazy_func_t<bool(Any* p0)> LEADERBOARDS_CACHE_DATA_ROW;
			extern typed_lazy_func_t<void(Any p0)> _0x5688585E6D563CD8;
			extern typed_lazy_func_t<bool(Any p0)> STAT_SLOT_IS_LOADED;
			extern typed_lazy_func_t<bool(Hash statName, Any p1, Any p2, int p3, bool save)> STAT_SET_MASKED_INT;
			extern typed_lazy_func_t<int(Hash statName)> STAT_GET_NUMBER_OF_DAYS;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xA071E0ED98F91286;
			extern typed_lazy_func_t<Any(Any p0, Any* p1)> _0xDEAAF77EB3687E97;
			extern typed_lazy_func_t<Any(Any p0)> _0xE496A53BA5F50A56;
			extern typed_lazy_func_t<bool()> _0xECB41AC6AB754401;
			extern typed_lazy_func_t<void(Any p0, Any p1)> PLAYSTATS_FRIEND_ACTIVITY;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> PLAYSTATS_PROP_CHANGE;
			extern typed_lazy_func_t<void(Any* p0)> _0x46326E13DA4E0546;
			extern typed_lazy_func_t<bool(Any* p0, Any p1, Any p2)> LEADERBOARDS2_READ_BY_RANK;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2)> _0x0BCA1D2C47B0D269;
			extern typed_lazy_func_t<void(int value)> _0x55384438FC55AD8E;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any* p2, Any* p3, Any p4)> STAT_GET_POS;
			extern typed_lazy_func_t<int(Hash statName)> STAT_GET_NUMBER_OF_MINUTES;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> _0xC5BE134EC7BA96A0;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2)> LEADERBOARDS_GET_COLUMN_TYPE;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> LEADERBOARDS2_READ_BY_HANDLE;
			extern typed_lazy_func_t<bool(Hash statName, int value, bool save)> STAT_SET_INT;
			extern typed_lazy_func_t<void(int p0)> _0x26D7399B9587FE89;
			extern typed_lazy_func_t<int(int p0)> _0xF4D8E7AC2A27758C;
			extern typed_lazy_func_t<void(Any* p0, Any* p1, Any* p2, Any* p3)> _0xF8C54A461C3E11DC;
			extern typed_lazy_func_t<bool(Any* p0)> LEADERBOARDS2_WRITE_DATA;
			extern typed_lazy_func_t<void()> _0x71B008056E5692D6;
			extern typed_lazy_func_t<Any(Any p0)> _0x5BD5F255321C4AAF;
			extern typed_lazy_func_t<bool(int p0, bool p1, int p2)> STAT_SAVE;
			extern typed_lazy_func_t<bool(Hash statName, const char* value, bool save)> STAT_SET_GXT_LABEL;
			extern typed_lazy_func_t<const char*(Hash statName)> STAT_GET_LICENSE_PLATE;
			extern typed_lazy_func_t<int(Hash statName)> STAT_GET_NUMBER_OF_HOURS;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any* p2)> _0xF1AE5DCDBFCA2721;
			extern typed_lazy_func_t<const char*(Any p0)> STAT_GET_USER_ID;
			extern typed_lazy_func_t<void(int time)> _0x5DA3A8DE8CB6226F;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any* p3)> _0x6483C25849031C4F;
			extern typed_lazy_func_t<void(Hash statName, float value)> _LEADERBOARDS_DEATHS;
			extern typed_lazy_func_t<Any()> _0xC6E0E2616A7576BB;
			extern typed_lazy_func_t<bool(Any* p0)> _0xA0F93D5465B3094D;
			extern typed_lazy_func_t<Any(Any* p0)> _0x886913BBEACA68C1;
			extern typed_lazy_func_t<void(int profileSetting, int value)> _STAT_SET_PROFILE_SETTING;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> PLAYSTATS_SHOP_ITEM;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0xCB00196B31C39EB1;
			extern typed_lazy_func_t<void(Any p0)> _0x79AB33F0FBFAC40C;
			extern typed_lazy_func_t<void(const char* cheat)> PLAYSTATS_CHEAT_APPLIED;
			extern typed_lazy_func_t<Any(int statSlot)> STAT_CLEAR_SLOT_FOR_RELOAD;
			extern typed_lazy_func_t<Hash(int index, bool spStat, bool charStat, int character)> _GET_PSTAT_BOOL_HASH;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> _0x1CAE5D2E3F9A07F0;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> LEADERBOARDS_GET_NUMBER_OF_COLUMNS;
			extern typed_lazy_func_t<Any(Any* p0)> _0xCE5AA445ABA8DEE0;
			extern typed_lazy_func_t<Hash(int index, bool spStat, bool charStat, int character)> _GET_PSTAT_INT_HASH;
			extern typed_lazy_func_t<Hash(int index, bool spStat, bool charStat, int character)> _GET_TUPSTAT_INT_HASH;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> _0xC980E62E33DF1D5C;
			extern typed_lazy_func_t<void(int value)> _0xF1A1803D3476F215;
			extern typed_lazy_func_t<void()> _0x629526ABA383BCAA;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any p2, Any p3, Any p4)> STAT_GET_MASKED_INT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0x7EEC2A316C250073;
			extern typed_lazy_func_t<bool(Any* p0, float p1, Any p2)> LEADERBOARDS2_READ_BY_SCORE_FLOAT;
			extern typed_lazy_func_t<void()> _0xC141B8917E0017EC;
			extern typed_lazy_func_t<void(Any p0)> _0x8EC74CEB042E7CFF;
			extern typed_lazy_func_t<void()> _0xC847B43F369AC0B5;
			extern typed_lazy_func_t<bool(Hash statHash, float* outValue, Any p2)> STAT_GET_FLOAT;
			extern typed_lazy_func_t<bool(Hash statName, int mask, int p2)> STAT_GET_BOOL_MASKED;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> PLAYSTATS_AWARD_XP;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2)> LEADERBOARDS_READ_SUCCESSFUL;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any p2, Any* p3, Any p4, Any* p5, Any p6)> LEADERBOARDS2_READ_BY_ROW;
			extern typed_lazy_func_t<int(Hash statName)> STAT_GET_NUMBER_OF_SECONDS;
			extern typed_lazy_func_t<bool(Hash statName, int p1, float* outValue)> _0xBED9F5693F34ED17;
			extern typed_lazy_func_t<int(int p0)> _0x94F12ABF9C79E339;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> _0x6DEE77AFF8C21BD1;
			extern typed_lazy_func_t<void(Any* p0, Any* p1, Any* p2, Any* p3)> _0xF5BB8DAC426A52C0;
			extern typed_lazy_func_t<void(bool p0)> _0xD1032E482629049E;
			extern typed_lazy_func_t<bool(Any* p0, Any p1, Any p2)> LEADERBOARDS2_READ_BY_SCORE_INT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0x2E65248609523599;
			extern typed_lazy_func_t<bool(Any p0)> _0x7F2C4CDF2E82DF4C;
			extern typed_lazy_func_t<bool(Hash statHash, int* outValue, int p2)> STAT_GET_INT;
			extern typed_lazy_func_t<Hash(int index, bool spStat, bool charStat, int character, const char* section)> _GET_NGSTAT_INT_HASH;
			extern typed_lazy_func_t<bool(Hash statName, bool value, int mask, bool save)> STAT_SET_BOOL_MASKED;
			extern typed_lazy_func_t<void(Any* p0)> PLAYSTATS_NPC_INVITE;
		} /* STATS */
		namespace SOCIALCLUB {
			extern typed_lazy_func_t<bool(const char* string, int* taskHandle)> _SC_START_CHECK_STRING_TASK;
			extern typed_lazy_func_t<Any()> _0xD8122C407663B995;
			extern typed_lazy_func_t<Any(Any p0)> _0x85535ACF97FC0969;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x1D4446A62D35B0D0;
			extern typed_lazy_func_t<Any(Any p0)> _0x8147FFF6A718E1AD;
			extern typed_lazy_func_t<bool(const char* playerName)> _0x6AFD2CD753FEEF83;
			extern typed_lazy_func_t<void(bool p0)> _0xBFA0A56A817C6C7D;
			extern typed_lazy_func_t<bool(Any p0, float p1)> _0x487912FD248EFDDF;
			extern typed_lazy_func_t<bool(Any p0, Any p1)> _0x1F1E9682483697C7;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any* p2)> _0x1989C6E6F67E76A8;
			extern typed_lazy_func_t<bool(Any p0, Any p1)> _0xFE4C1D0D3B9CC17E;
			extern typed_lazy_func_t<Entity()> _SC_GET_NICKNAME;
			extern typed_lazy_func_t<Hash(int p0)> _SC_INBOX_MESSAGE_INIT;
			extern typed_lazy_func_t<void(int* networkHandle)> _0xDA024BDBD600F44A;
			extern typed_lazy_func_t<void(const char* p0)> _0xA68D3D229F4F3B06;
			extern typed_lazy_func_t<bool(const char* p0, int* p1)> _0xF6BAAAF762E1BF40;
			extern typed_lazy_func_t<bool(int p0, const char* context, int* out)> SC_INBOX_MESSAGE_GET_DATA_INT;
			extern typed_lazy_func_t<bool(int p0)> _SC_INBOX_MESSAGE_PUSH;
			extern typed_lazy_func_t<void(Player* player)> SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST;
			extern typed_lazy_func_t<bool(int* p0)> _0x225798743970412B;
			extern typed_lazy_func_t<Any(Any p0)> _0x5C4EBFFA98BDB41C;
			extern typed_lazy_func_t<bool(const char* p0, int* p1)> _0x92DA6E70EF249BD1;
			extern typed_lazy_func_t<bool(int p0)> _0x418DC16FAE452C1C;
			extern typed_lazy_func_t<bool(int p0, Any* p1)> _0x4737980E8A283806;
			extern typed_lazy_func_t<void(const char* p0)> _0x116FB94DC4B79F17;
			extern typed_lazy_func_t<Any()> _0xBC1CC91205EC8D6E;
			extern typed_lazy_func_t<Any(Any p0)> _0x9237E334F6E43156;
			extern typed_lazy_func_t<Any(Any p0)> _0x07C61676E5BB52CD;
			extern typed_lazy_func_t<bool(int p0, const char* p1, Any* p2)> _0x8CC469AB4D349B7C;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any* p2)> _0xD0EE05FE193646EA;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> _0x19853B5B17D77BCA;
			extern typed_lazy_func_t<bool(Any p0)> _0x6BFB12CE158E3DD4;
			extern typed_lazy_func_t<void()> _0x675721C9F644D161;
			extern typed_lazy_func_t<bool(int p0)> _SC_INBOX_MESSAGE_POP;
			extern typed_lazy_func_t<bool(int p0, const char* p1)> _SC_INBOX_MESSAGE_GET_DATA_BOOL;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> _0x287F1F75D2803595;
			extern typed_lazy_func_t<Any()> _0x16DA8172459434AA;
			extern typed_lazy_func_t<bool(const char* p0)> _0x8416FE4E4629D7D7;
			extern typed_lazy_func_t<bool(Any* p0, int* p1)> _0x0F73393BAC7E6730;
			extern typed_lazy_func_t<bool(int p0, const char* context, const char* out)> SC_INBOX_MESSAGE_GET_DATA_STRING;
			extern typed_lazy_func_t<bool(int taskHandle)> _SC_HAS_CHECK_STRING_TASK_COMPLETED;
			extern typed_lazy_func_t<Any(Any* p0)> _0x4A7D6E727F941747;
			extern typed_lazy_func_t<Any()> _0xDF649C4E9AFDD788;
			extern typed_lazy_func_t<bool(int p0, const char* p1, Any* p2)> _0x699E4A5C8C893A18;
			extern typed_lazy_func_t<bool(Any p0)> _0xF22CA0FD74B80E7A;
			extern typed_lazy_func_t<Any(Any p0)> _0x700569DBA175A77C;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> SC_INBOX_MESSAGE_GET_UGCDATA;
			extern typed_lazy_func_t<bool(Any p0, int* p1)> _0x87E0052F08BD64E6;
			extern typed_lazy_func_t<int(Any p0)> _0x930DE22F07B1CCE3;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x2E89990DDFF670C3;
			extern typed_lazy_func_t<bool()> _0x3001BEF2FECA3680;
			extern typed_lazy_func_t<int()> _GET_TOTAL_SC_INBOX_IDS;
			extern typed_lazy_func_t<const char*(int p0)> _SC_INBOX_MESSAGE_GET_STRING;
			extern typed_lazy_func_t<void(Any* p0, Any p1)> _0x44ACA259D67651DB;
			extern typed_lazy_func_t<void(int offset, int limit)> _SC_INBOX_GET_EMAILS;
			extern typed_lazy_func_t<void()> SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST;
			extern typed_lazy_func_t<Any()> _0xFF8F3A92B75ED67A;
			extern typed_lazy_func_t<bool(int p0)> _IS_SC_INBOX_VALID;
			extern typed_lazy_func_t<int(int taskHandle)> _SC_GET_CHECK_STRING_STATUS;
			extern typed_lazy_func_t<Any(Any p0)> _0xD302E99EDF0449CF;
		} /* SOCIALCLUB */
		namespace AI {
			extern typed_lazy_func_t<Any(Object* taskSequence)> OPEN_SEQUENCE_TASK;
			extern typed_lazy_func_t<void(Ped driver, Entity targetEnt)> TASK_VEHICLE_CHASE;
			extern typed_lazy_func_t<void(Any p0, float p1)> SET_DRIVE_TASK_MAX_CRUISE_SPEED;
			extern typed_lazy_func_t<bool(const char* name, float x, float y, float z, int* point)> WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT;
			extern typed_lazy_func_t<int(Ped ped)> GET_SEQUENCE_PROGRESS;
			extern typed_lazy_func_t<void(Ped ped, Ped meleeTarget, float p2, float p3, float p4, bool p5)> TASK_PUT_PED_DIRECTLY_INTO_MELEE;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, float p4, float p5, Any p6)> TASK_GUARD_ASSIGNED_DEFENSIVE_AREA;
			extern typed_lazy_func_t<void(Ped ped, int duration, Ped facingPed, int p3, bool p4)> TASK_HANDS_UP;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float heading)> TASK_PLANT_BOMB;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float speed, int timeout, float stoppingRange, bool persistFollowing, float unk)> TASK_FOLLOW_NAV_MESH_TO_COORD;
			extern typed_lazy_func_t<void(Ped ped, Any* p1, Any* p2, Any* p3, float p4, float p5)> TASK_SCRIPTED_ANIMATION;
			extern typed_lazy_func_t<Any(Ped ped, Object taskSequence)> TASK_PERFORM_SEQUENCE;
			extern typed_lazy_func_t<void(const char* route)> ASSISTED_MOVEMENT_REQUEST_ROUTE;
			extern typed_lazy_func_t<void(Any p0, float p1)> VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED;
			extern typed_lazy_func_t<void(Any p0, Ped ped, int p2, Any p3)> TASK_COMBAT_PED_TIMED;
			extern typed_lazy_func_t<bool(const char* scenarioType)> IS_SCENARIO_TYPE_ENABLED;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_WRITHE;
			extern typed_lazy_func_t<void(Ped ped, const char* p1, Any p2, bool p3, bool p4)> TASK_PATROL;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, Any p4, float p5, bool p6, float p7, float p8, bool p9, Any p10, bool p11, Any p12, Any p13)> TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> TASK_PARACHUTE;
			extern typed_lazy_func_t<void(Ped driver, Vehicle vehicle, int action, int time)> TASK_VEHICLE_TEMP_ACTION;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, bool p4, Any p5)> WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD;
			extern typed_lazy_func_t<bool(Ped ped)> IS_MOVE_BLEND_RATIO_RUNNING;
			extern typed_lazy_func_t<void(Any p0, Any p1, bool p2)> WAYPOINT_PLAYBACK_START_AIMING_AT_PED;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, bool p4)> WAYPOINT_PLAYBACK_START_AIMING_AT_COORD;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0xAB13A5565480B6D9;
			extern typed_lazy_func_t<void(Ped ped, float thrust)> SET_PARACHUTE_TASK_THRUST;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int driveMode, float stopRange)> TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, int time, bool p5, bool p6)> TASK_AIM_GUN_AT_COORD;
			extern typed_lazy_func_t<void(Ped pilot, Vehicle plane, float runwayStartX, float runwayStartY, float runwayStartZ, float runwayEndX, float runwayEndY, float runwayEndZ)> TASK_PLANE_LAND;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> TASK_SWAP_WEAPON;
			extern typed_lazy_func_t<bool(Ped ped, const char* p1)> _0xA7FFBA498E4AAF67;
			extern typed_lazy_func_t<void(Ped ped, bool mayEnterWater)> SET_PED_PATHS_WIDTH_PLANT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> TASK_FOLLOW_WAYPOINT_RECORDING;
			extern typed_lazy_func_t<void(Ped ped, const char* p1, float p2)> _0xD5BB4025AE449A4E;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, int duration, Hash firingPattern)> TASK_SHOOT_AT_COORD;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, int seat)> TASK_WARP_PED_INTO_VEHICLE;
			extern typed_lazy_func_t<float(Ped ped)> GET_PED_DESIRED_MOVE_BLEND_RATIO;
			extern typed_lazy_func_t<void(Ped p0, float p1, float p2, float p3, float p4, float p5, Any p6, float p7, float p8, float p9, float p10)> TASK_GUARD_SPHERE_DEFENSIVE_AREA;
			extern typed_lazy_func_t<void(Any p0, float p1, bool p2)> WAYPOINT_PLAYBACK_OVERRIDE_SPEED;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float speed, int timeout, float targetHeading, float distanceToSlide)> TASK_GO_STRAIGHT_TO_COORD;
			extern typed_lazy_func_t<void(Ped ped, float heading, int timeout)> TASK_ACHIEVE_HEADING;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PLAYING_PHONE_GESTURE_ANIM;
			extern typed_lazy_func_t<bool(float x, float y, float z)> DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float distance, int duration)> TASK_USE_NEAREST_SCENARIO_TO_COORD;
			extern typed_lazy_func_t<void(Ped ped, const char* p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8, float p9, bool p10, const char* animDict, int flags)> _TASK_MOVE_NETWORK_ADVANCED;
			extern typed_lazy_func_t<void(Ped ped, const char* animDictionary, const char* animationName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, bool lockX, bool lockY, bool lockZ)> TASK_PLAY_ANIM;
			extern typed_lazy_func_t<void(Entity entity, float x, float y, float z, float duration, Any p5, Any p6)> TASK_LOOK_AT_COORD;
			extern typed_lazy_func_t<void(Any p0, Any p1)> ADD_PATROL_ROUTE_LINK;
			extern typed_lazy_func_t<void(float dist)> ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME;
			extern typed_lazy_func_t<void(Ped ped, Ped target)> TASK_ARREST_PED;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float speed, int timeout, float unkFloat, int unkInt, float unkX, float unkY, float unkZ, float unk_40000f)> TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED;
			extern typed_lazy_func_t<void(Ped ped, Entity entity, int duration, bool p3)> TASK_AIM_GUN_AT_ENTITY;
			extern typed_lazy_func_t<void(Ped p0, Hash p1)> TASK_SET_DECISION_MAKER;
			extern typed_lazy_func_t<bool(Ped ped)> _0x621C6E4729388E41;
			extern typed_lazy_func_t<void(Ped ped, int scene, const char* animDictionary, const char* animationName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9)> TASK_SYNCHRONIZED_SCENE;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_TASKS_IMMEDIATELY;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float heading, const char* scenarioName)> TASK_STAND_GUARD;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS;
			extern typed_lazy_func_t<int(Ped ped)> GET_NAVMESH_ROUTE_RESULT;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float speed, Any p5, bool p6, int walkingStyle, float p8, Any p9, Any p10, Any p11, Any p12)> TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED;
			extern typed_lazy_func_t<Any(Object taskSequence)> CLOSE_SEQUENCE_TASK;
			extern typed_lazy_func_t<void(Object taskSequence, bool repeat)> SET_SEQUENCE_TO_REPEAT;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK;
			extern typed_lazy_func_t<void(Ped ped, int duration)> UPDATE_TASK_HANDS_UP_DURATION;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float radius, float minimalLength, float timeBetweenWalks)> TASK_WANDER_IN_AREA;
			extern typed_lazy_func_t<float(Ped ped)> GET_PHONE_GESTURE_ANIM_TOTAL_TIME;
			extern typed_lazy_func_t<void(Ped ped, Ped target, int duration, bool p3)> TASK_SEEK_COVER_FROM_PED;
			extern typed_lazy_func_t<void(Ped ped, bool Toggle)> SET_PED_PATH_CAN_DROP_FROM_HEIGHT;
			extern typed_lazy_func_t<void(Ped ped, Any p1, Any p2, float x, float y, float z, int duration)> TASK_GOTO_ENTITY_OFFSET;
			extern typed_lazy_func_t<void(Ped ped, float p1)> SET_PED_DESIRED_MOVE_BLEND_RATIO;
			extern typed_lazy_func_t<void(int ped, float x, float y, float z)> TASK_THROW_PROJECTILE;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, int flag, Any p6)> TASK_ENTER_VEHICLE;
			extern typed_lazy_func_t<void(Entity entity, Entity target, int duration, Hash firingPattern)> TASK_SHOOT_AT_ENTITY;
			extern typed_lazy_func_t<void(Ped ped, const char* animDict, const char* animName)> PLAY_ANIM_ON_RUNNING_SCENARIO;
			extern typed_lazy_func_t<const char*(int p0)> GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK;
			extern typed_lazy_func_t<void(Any p0, float p1, Any p2, Any p3)> TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED;
			extern typed_lazy_func_t<void()> CLOSE_PATROL_ROUTE;
			extern typed_lazy_func_t<bool(const char* name)> GET_IS_WAYPOINT_RECORDING_LOADED;
			extern typed_lazy_func_t<bool(Any p0)> WAYPOINT_PLAYBACK_GET_IS_PAUSED;
			extern typed_lazy_func_t<Any(Ped ped, const char* p1)> _0xD01015C7316AE176;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle)> TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT;
			extern typed_lazy_func_t<void(Ped ped, int p1)> TASK_USE_MOBILE_PHONE;
			extern typed_lazy_func_t<bool(const char* scenarioGroup)> IS_SCENARIO_GROUP_ENABLED;
			extern typed_lazy_func_t<void(Any p0)> WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED;
			extern typed_lazy_func_t<void(Ped ped, Hash state, bool p2)> TASK_FORCE_MOTION_STATE;
			extern typed_lazy_func_t<void(Ped ped)> _TASK_STOP_PHONE_GESTURE_ANIMATION;
			extern typed_lazy_func_t<void(Ped ped)> TASK_STAY_IN_COVER;
			extern typed_lazy_func_t<bool(Ped ped)> IS_MOVE_BLEND_RATIO_STILL;
			extern typed_lazy_func_t<bool(Ped ped)> PED_HAS_USE_SCENARIO_TASK;
			extern typed_lazy_func_t<bool(Any p0)> IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3)> UPDATE_TASK_SWEEP_AIM_POSITION;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_RUNNING_ARREST_TASK;
			extern typed_lazy_func_t<void(Ped ped)> TASK_SKY_DIVE;
			extern typed_lazy_func_t<void()> TASK_FLUSH_ROUTE;
			extern typed_lazy_func_t<bool(Ped ped)> _0x3E38E28A1D80DDF6;
			extern typed_lazy_func_t<bool(Ped ped, int taskNumber)> GET_IS_TASK_ACTIVE;
			extern typed_lazy_func_t<void(Ped driverPed, Ped targetPed, Vehicle targetVehicle, float targetX, float targetY, float targetZ, float distanceToShoot, int pedAccuracy, bool p8, Hash firingPattern)> TASK_DRIVE_BY;
			extern typed_lazy_func_t<bool(Ped ped)> IS_MOVE_BLEND_RATIO_SPRINTING;
			extern typed_lazy_func_t<void(Ped ped, const char* anim, const char* p2, const char* p3, const char* p4, int p5, Vehicle vehicle, float p7, float p8)> TASK_SWEEP_AIM_ENTITY;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_CUFFED;
			extern typed_lazy_func_t<void(Ped ped, bool unused, bool flag1, bool flag2)> TASK_JUMP;
			extern typed_lazy_func_t<Any(Ped ped, bool Toggle)> SET_PED_PATH_CAN_USE_CLIMBOVERS;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, Any* p3, float p4, bool p5)> DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float aimAtX, float aimAtY, float aimAtZ, float moveSpeed, bool p8, float p9, float p10, bool p11, Any flags, bool p13, Hash firingPattern)> TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_WAYPOINT_PROGRESS;
			extern typed_lazy_func_t<void(Any p0, bool p1, Any p2, Any p3)> WAYPOINT_PLAYBACK_RESUME;
			extern typed_lazy_func_t<void(Ped ped, int unused)> TASK_RAPPEL_FROM_HELI;
			extern typed_lazy_func_t<void(Ped p0, Ped p1, float p2, float p3, float p4, bool p5)> UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET;
			extern typed_lazy_func_t<void(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z)> SET_DRIVEBY_TASK_TARGET;
			extern typed_lazy_func_t<bool(const char* scenarioGroup)> DOES_SCENARIO_GROUP_EXIST;
			extern typed_lazy_func_t<void(int p0, const char* p1, float x1, float y1, float z1, float x2, float y2, float z2, int p8)> ADD_PATROL_ROUTE_NODE;
			extern typed_lazy_func_t<void(Ped ped, float p1)> _0x88E32DB8C1A4AA4B;
			extern typed_lazy_func_t<void(Any p0, bool p1, Any p2, bool p3)> SET_ANIM_LOOPED;
			extern typed_lazy_func_t<void(Ped ped, Entity entity, int duration)> TASK_TURN_PED_TO_FACE_ENTITY;
			extern typed_lazy_func_t<void(Ped p0, float p1, float p2, bool p3)> TASK_GUARD_CURRENT_POSITION;
			extern typed_lazy_func_t<void(Ped ped, int eventHandle)> TASK_SHOCKING_EVENT_REACT;
			extern typed_lazy_func_t<float(Any p0)> GET_PED_WAYPOINT_DISTANCE;
			extern typed_lazy_func_t<void(Ped ped, Ped target)> TASK_VEHICLE_AIM_AT_PED;
			extern typed_lazy_func_t<void(Ped ped, bool avoidWater)> SET_PED_PATH_PREFER_TO_AVOID_WATER;
			extern typed_lazy_func_t<void(Any p0, float p1, Any p2, bool p3)> SET_ANIM_RATE;
			extern typed_lazy_func_t<void(Ped ped, Entity target, float distanceToStopAt, float StartAimingDist)> TASK_GOTO_ENTITY_AIMING;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, int duration, bool p5)> TASK_SEEK_COVER_FROM_POS;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float radius, Any p5)> TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, Any p6, Hash vehicleModel, int drivingMode, float stopRange, float p10)> TASK_VEHICLE_DRIVE_TO_COORD;
			extern typed_lazy_func_t<ScrHandle(float p0, float p1, float p2, float p3, Any p4, Any p5, Any p6, bool p7)> ADD_COVER_POINT;
			extern typed_lazy_func_t<void(Ped ped, const char* scenarioName, float x, float y, float z, float heading, int duration, bool sittingScenario, bool teleport)> TASK_START_SCENARIO_AT_POSITION;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2, float p3, float p4, float p5, bool p6, float p7, float p8, bool p9, bool p10, Any p11)> TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD;
			extern typed_lazy_func_t<bool(Ped ped)> IS_MOVE_BLEND_RATIO_WALKING;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2, float p3, float p4, Any p5, bool p6, bool p7)> TASK_AIM_GUN_SCRIPTED_WITH_TARGET;
			extern typed_lazy_func_t<void(Ped ped, const char* scenarioName, int unkDelay, bool playEnterAnim)> TASK_START_SCENARIO_IN_PLACE;
			extern typed_lazy_func_t<void(const char* patrolRoute)> OPEN_PATROL_ROUTE;
			extern typed_lazy_func_t<void(Ped ped, const char* p1, bool p2)> _0xB0A6CFD2C69C1088;
			extern typed_lazy_func_t<void(const char* patrolRoute)> DELETE_PATROL_ROUTE;
			extern typed_lazy_func_t<bool(Any p0)> IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED;
			extern typed_lazy_func_t<void(float x, float y, float z)> TASK_EXTEND_ROUTE;
			extern typed_lazy_func_t<void(Ped ped, Ped target, Any p2, float p3, float p4, float p5, float p6, float p7)> TASK_CHAT_TO_PED;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float heading, float duration)> TASK_PED_SLIDE_TO_COORD;
			extern typed_lazy_func_t<Vector3(ScrHandle coverpoint)> GET_SCRIPTED_COVER_POINT_COORDS;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_GETTING_UP;
			extern typed_lazy_func_t<void(Ped ped, Ped target, float p2)> TASK_VEHICLE_SHOOT_AT_PED;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, int flags)> TASK_LEAVE_VEHICLE;
			extern typed_lazy_func_t<void(Entity entity, Entity target, int duration, float distance, float speed, float p5, int p6)> TASK_GO_TO_ENTITY;
			extern typed_lazy_func_t<void(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, Any p7, bool p8)> TASK_SEEK_COVER_TO_COORDS;
			extern typed_lazy_func_t<void(Ped pilot, Entity entityToFollow, float x, float y, float z)> TASK_PLANE_CHASE;
			extern typed_lazy_func_t<void(Ped ped)> UNCUFF_PED;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, int timeOut, int doorIndex, float speed)> TASK_OPEN_VEHICLE_DOOR;
			extern typed_lazy_func_t<void(Ped ped, Ped fleeTarget)> TASK_REACT_AND_FLEE_PED;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius, bool b)> DOES_SCENARIO_EXIST_IN_AREA;
			extern typed_lazy_func_t<void()> CREATE_PATROL_ROUTE;
			extern typed_lazy_func_t<void(const char* route)> ASSISTED_MOVEMENT_REMOVE_ROUTE;
			extern typed_lazy_func_t<void(Ped ped, Ped ped2)> ADD_VEHICLE_SUBTASK_ATTACK_PED;
			extern typed_lazy_func_t<bool(Any p0)> _0x30ED88D5E0C56A37;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_RUNNING;
			extern typed_lazy_func_t<void(Ped ped, float p1, int p2)> TASK_WANDER_STANDARD;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float speed, Any p5, bool p6, int walkingStyle, float p8)> TASK_GO_TO_COORD_ANY_MEANS;
			extern typed_lazy_func_t<void(Ped ped)> TASK_CLEAR_LOOK_AT;
			extern typed_lazy_func_t<void(Ped pedDriver, Vehicle boat, Any p2, Any p3, float x, float y, float z, Any p7, float maxSpeed, int drivingStyle, float p10, Any p11)> TASK_BOAT_MISSION;
			extern typed_lazy_func_t<void(float p0)> SET_NEXT_DESIRED_MOVE_STATE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_STRAFING;
			extern typed_lazy_func_t<void(Ped ped, int duration)> TASK_COWER;
			extern typed_lazy_func_t<void(Entity entity1, Entity entity2, float p2, float p3, float p4, float p5, Any p6)> TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, Any timeout, bool p5, float p6, bool p7, bool p8, Any p9, bool p10)> TASK_PUT_PED_DIRECTLY_INTO_COVER;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float p4)> TASK_VEHICLE_SHOOT_AT_COORD;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, const char* WPRecording, int p3, int p4, int p5, int p6, float p7, bool p8, float p9)> TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING;
			extern typed_lazy_func_t<void()> RESET_SCENARIO_GROUPS_ENABLED;
			extern typed_lazy_func_t<void(Ped ped, Ped target, int time, int p3)> TASK_WRITHE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_STILL;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float speed, Any p5, bool p6, int walkingStyle, float p8, Any p9, Any p10, Any p11)> TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> TASK_PERFORM_SEQUENCE_FROM_PROGRESS;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2, float p3, float p4)> TASK_EXIT_COVER;
			extern typed_lazy_func_t<void(const char* scenarioType, bool toggle)> SET_SCENARIO_TYPE_ENABLED;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> WAYPOINT_PLAYBACK_PAUSE;
			extern typed_lazy_func_t<void(Ped ped, Hash scriptTask, bool p2, bool p3)> TASK_AIM_GUN_SCRIPTED;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2, float p3, float p4, Any p5, bool p6)> TASK_SEEK_COVER_TO_COVER_POINT;
			extern typed_lazy_func_t<void(Ped ped, Entity entity)> UPDATE_TASK_SWEEP_AIM_ENTITY;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_SPRINTING;
			extern typed_lazy_func_t<int(Ped targetPed, Hash taskHash)> GET_SCRIPT_TASK_STATUS;
			extern typed_lazy_func_t<bool(Ped ped)> CONTROL_MOUNTED_WEAPON;
			extern typed_lazy_func_t<void(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z)> SET_MOUNTED_WEAPON_TARGET;
			extern typed_lazy_func_t<void(const char* name)> REMOVE_WAYPOINT_RECORDING;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> SET_PED_WAYPOINT_ROUTE_OFFSET;
			extern typed_lazy_func_t<void(Ped ped, const char* animDict, const char* animName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float speed, float speedMultiplier, int duration, Any flag, float animTime, Any p14, Any p15)> TASK_PLAY_ANIM_ADVANCED;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int behaviorFlag, float stoppingRange)> TASK_VEHICLE_GOTO_NAVMESH;
			extern typed_lazy_func_t<void(Ped ped, Entity entityToWalkTo, Entity entityToAimAt, float speed, bool shootatEntity, float p5, float p6, bool p7, bool p8, Hash firingPattern)> TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_BEING_ARRESTED;
			extern typed_lazy_func_t<void(Ped ped, float speed, int unknown)> TASK_FOLLOW_POINT_ROUTE;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z)> TASK_VEHICLE_AIM_AT_COORD;
			extern typed_lazy_func_t<int(Ped ped, float* distRemaining, bool* isPathReady)> GET_NAVMESH_ROUTE_DISTANCE_REMAINING;
			extern typed_lazy_func_t<void(Vehicle vehicle, const char* animation_set, const char* animation_name)> TASK_VEHICLE_PLAY_ANIM;
			extern typed_lazy_func_t<void(Ped ped, Ped fleeTarget, float distance, Any fleeTime, bool p4, bool p5)> TASK_SMART_FLEE_PED;
			extern typed_lazy_func_t<void(Any p0)> VEHICLE_WAYPOINT_PLAYBACK_PAUSE;
			extern typed_lazy_func_t<float(Ped ped)> GET_PHONE_GESTURE_ANIM_CURRENT_TIME;
			extern typed_lazy_func_t<void(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float angularDrag, float unk, float targetHeading, float maxZ, float minZ)> TASK_PLANE_MISSION;
			extern typed_lazy_func_t<void(ScrHandle coverpoint)> REMOVE_COVER_POINT;
			extern typed_lazy_func_t<void(float playerX, float playerY, float playerZ, float radiusX, float radiusY, float radiusZ, bool p6, bool p7, bool p8, bool p9)> ADD_COVER_BLOCKING_AREA;
			extern typed_lazy_func_t<bool(Ped ped, const char* p1)> _0xB4F47213DF45A64C;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, float speed, int drivingStyle)> TASK_VEHICLE_DRIVE_WANDER;
			extern typed_lazy_func_t<void(Ped ped, int flag, bool set)> SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, float p4, Any p5)> TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD;
			extern typed_lazy_func_t<void(const char* scenarioGroup, bool p1)> SET_SCENARIO_GROUP_ENABLED;
			extern typed_lazy_func_t<void(Any* p0, bool p1, float p2, float p3)> USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z)> SET_PARACHUTE_TASK_TARGET;
			extern typed_lazy_func_t<void(float height)> SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT;
			extern typed_lazy_func_t<void(Ped ped, Entity lookAt, int duration, int unknown1, int unknown2)> TASK_LOOK_AT_ENTITY;
			extern typed_lazy_func_t<void(Ped ped, Entity entity, float offsetX, float offsetY, float offsetZ, float movementSpeed, int timeout, float stoppingRange, bool persistFollowing)> TASK_FOLLOW_TO_OFFSET_OF_ENTITY;
			extern typed_lazy_func_t<int(Vehicle veh)> GET_ACTIVE_VEHICLE_MISSION_TYPE;
			extern typed_lazy_func_t<void(Ped ped, int p1, int p2)> TASK_LEAVE_ANY_VEHICLE;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, bool p4)> IS_SCENARIO_OCCUPIED;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2, Any* p3, Any* p4, Any p5, float p6, float p7, float p8, float p9, float p10)> TASK_SWEEP_AIM_POSITION;
			extern typed_lazy_func_t<void(Ped ped, int ms)> TASK_PAUSE;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, float x, float y, float z, int p5, int p6, int p7, float p8, float p9, bool p10)> TASK_VEHICLE_MISSION_COORS_TARGET;
			extern typed_lazy_func_t<void(Any p0)> TASK_CLEAR_DEFENSIVE_AREA;
			extern typed_lazy_func_t<Any(Any p0)> GET_VEHICLE_WAYPOINT_TARGET_POINT;
			extern typed_lazy_func_t<void(Any p0)> VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED;
			extern typed_lazy_func_t<void(Ped ped, Vehicle boat)> _TASK_GET_OFF_BOAT;
			extern typed_lazy_func_t<void(Ped ped, float distance)> SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE;
			extern typed_lazy_func_t<void(Ped ped, Ped targetPed, int p2, int p3)> TASK_COMBAT_PED;
			extern typed_lazy_func_t<bool(const char* name, int point, Vector3* coord)> WAYPOINT_RECORDING_GET_COORD;
			extern typed_lazy_func_t<bool(int PlayerID)> _0x921CE12C489C4C41;
			extern typed_lazy_func_t<float(const char* p0, int p1)> GET_WAYPOINT_DISTANCE_ALONG_ROUTE;
			extern typed_lazy_func_t<void(Ped killer, Ped target, Hash actionType, float p3, Any p4)> TASK_STEALTH_KILL;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2, Any* p3, float p4, float p5)> PLAY_ENTITY_SCRIPTED_ANIM;
			extern typed_lazy_func_t<void(Vehicle vehicle)> TASK_EVERYONE_LEAVE_VEHICLE;
			extern typed_lazy_func_t<void(Ped driver, Vehicle vehicle, Entity targetEntity, int drivingStyle, float speed, int minDistance)> _TASK_VEHICLE_FOLLOW;
			extern typed_lazy_func_t<bool(Ped ped)> IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK;
			extern typed_lazy_func_t<void(Any p0)> VEHICLE_WAYPOINT_PLAYBACK_RESUME;
			extern typed_lazy_func_t<void()> RESET_EXCLUSIVE_SCENARIO_GROUP;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_ACTIVE_IN_SCENARIO;
			extern typed_lazy_func_t<void(int p0, int p1, Vehicle veh, Any p3, float p4, Any p5, float p6, float p7, bool p8)> TASK_VEHICLE_MISSION;
			extern typed_lazy_func_t<void(Ped pilot, Vehicle vehicle, Entity entityToFollow, float targetSpeed, int p4, float radius, int altitude, int p7)> TASK_VEHICLE_HELI_PROTECT;
			extern typed_lazy_func_t<bool(const char* name, int* points)> WAYPOINT_RECORDING_GET_NUM_POINTS;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_WALKING;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, float x, float y, float z, float heading, int mode, float radius, bool keepEngineOn)> TASK_VEHICLE_PARK;
			extern typed_lazy_func_t<void(Ped ped, Entity entity, int duration, float xOffset, float yOffset, float zOffset, float moveBlendRatio, bool useNavmesh)> TASK_GOTO_ENTITY_OFFSET_XY;
			extern typed_lazy_func_t<void(Ped ped, int drivingStyle)> SET_DRIVE_TASK_DRIVING_STYLE;
			extern typed_lazy_func_t<void()> REMOVE_ALL_COVER_BLOCKING_AREAS;
			extern typed_lazy_func_t<void(Any p0, Any p1, bool p2, Any p3)> _0xE70BA7B90F8390DC;
			extern typed_lazy_func_t<const char*(Ped ped)> _0x717E4D1F2048376D;
			extern typed_lazy_func_t<void(Ped ped, int time)> TASK_STAND_STILL;
			extern typed_lazy_func_t<void(Ped ped, bool avoidFire)> SET_PED_PATH_AVOID_FIRE;
			extern typed_lazy_func_t<void(Ped ped, int p1, bool p2)> STOP_ANIM_PLAYBACK;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, Ped pedTarget, int mode, float maxSpeed, int drivingStyle, float minDistance, float p7, bool p8)> TASK_VEHICLE_MISSION_PED_TARGET;
			extern typed_lazy_func_t<bool(const char* route)> ASSISTED_MOVEMENT_IS_ROUTE_LOADED;
			extern typed_lazy_func_t<Any(Ped ped, bool Toggle)> SET_PED_PATH_CAN_USE_LADDERS;
			extern typed_lazy_func_t<void(Ped ped, const char* animDictionary, const char* animationName, float p3)> STOP_ANIM_TASK;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float heading, float p5, float p6)> TASK_PED_SLIDE_TO_COORD_HDG_RATE;
			extern typed_lazy_func_t<void(Ped ped, Any p1, Any p2, Any p3)> SET_HIGH_FALL_TASK;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float radius, Any p5)> TASK_COMBAT_HATED_TARGETS_IN_AREA;
			extern typed_lazy_func_t<void(const char* route, int props)> ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z)> TASK_PARACHUTE_TO_TARGET;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float distance, int time, bool p6, bool p7)> TASK_SMART_FLEE_COORD;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, float p4)> TASK_SET_SPHERE_DEFENSIVE_AREA;
			extern typed_lazy_func_t<void(bool p0, bool p1)> TASK_TOGGLE_DUCK;
			extern typed_lazy_func_t<void(const char* scenarioGroup)> SET_EXCLUSIVE_SCENARIO_GROUP;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_TASKS;
			extern typed_lazy_func_t<void(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float maxSpeed, float landingRadius, float targetHeading, int unk1, int unk2, Hash unk3, int landingFlags)> TASK_HELI_MISSION;
			extern typed_lazy_func_t<void(Ped ped, int p1)> TASK_CLIMB_LADDER;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, float p4, Any p5)> TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int drivingStyle, float minDistance, int p7, float noRoadsDistance)> TASK_VEHICLE_ESCORT;
			extern typed_lazy_func_t<void(Ped ped, float radius, int p2)> TASK_COMBAT_HATED_TARGETS_AROUND_PED;
			extern typed_lazy_func_t<float(const char* name, int point)> WAYPOINT_RECORDING_GET_SPEED_AT_POINT;
			extern typed_lazy_func_t<Any(Object* taskSequence)> CLEAR_SEQUENCE_TASK;
			extern typed_lazy_func_t<void(Ped ped, bool unused)> TASK_RELOAD_WEAPON;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z)> ADD_VEHICLE_SUBTASK_ATTACK_COORD;
			extern typed_lazy_func_t<void(Any p0)> WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING;
			extern typed_lazy_func_t<void(Ped ped, const char* animDict, const char* animation, const char* boneMaskType, float p4, float p5, bool p6, bool p7)> TASK_PLAY_PHONE_GESTURE_ANIMATION;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, int duration)> TASK_TURN_PED_TO_FACE_COORD;
			extern typed_lazy_func_t<void(Ped pilot, Entity entityToFollow, float x, float y, float z)> TASK_HELI_CHASE;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_SECONDARY_TASK;
			extern typed_lazy_func_t<void(Ped ped, bool unused)> TASK_CLIMB;
			extern typed_lazy_func_t<void(Ped ped, bool p1, bool p2)> _0x8FD89A6240813FD0;
			extern typed_lazy_func_t<void(const char* name)> REQUEST_WAYPOINT_RECORDING;
			extern typed_lazy_func_t<void(Ped ped, const char* task, float multiplier, bool p3, const char* animDict, int flags)> _TASK_MOVE_NETWORK;
			extern typed_lazy_func_t<bool(Ped ped)> IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK;
			extern typed_lazy_func_t<void(Ped ped, int duration)> TASK_USE_MOBILE_PHONE_TIMED;
			extern typed_lazy_func_t<void()> RESET_SCENARIO_TYPES_ENABLED;
			extern typed_lazy_func_t<void(Any p0, float p1, Any p2, Any p3, bool p4)> SET_ANIM_WEIGHT;
			extern typed_lazy_func_t<void(Ped driver, float cruiseSpeed)> SET_DRIVE_TASK_CRUISE_SPEED;
			extern typed_lazy_func_t<void(Ped pedHandle, float goToLocationX, float goToLocationY, float goToLocationZ, float focusLocationX, float focusLocationY, float focusLocationZ, float speed, bool shootAtEnemies, float distanceToStopAt, float noRoadsDistance, bool unkTrue, int unkFlag, int aimingFlag, Hash firingPattern)> TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_WAYPOINT_PROGRESS;
		} /* AI */
		namespace SCRIPT {
			extern typed_lazy_func_t<bool(Hash scriptHash)> HAS_SCRIPT_WITH_NAME_HASH_LOADED;
			extern typed_lazy_func_t<bool(Hash scriptHash)> _DOES_SCRIPT_WITH_NAME_HASH_EXIST;
			extern typed_lazy_func_t<int()> _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION;
			extern typed_lazy_func_t<int(int eventGroup, int eventIndex)> GET_EVENT_AT_INDEX;
			extern typed_lazy_func_t<bool(int eventGroup, int eventIndex, int* argStruct, int argStructSize)> GET_EVENT_DATA;
			extern typed_lazy_func_t<void(const char* scriptName)> SET_SCRIPT_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<bool(int eventGroup, int eventIndex)> GET_EVENT_EXISTS;
			extern typed_lazy_func_t<void()> SHUTDOWN_LOADING_SCREEN;
			extern typed_lazy_func_t<void(const char* scriptName)> REQUEST_SCRIPT;
			extern typed_lazy_func_t<int(Hash scriptHash)> _GET_NUMBER_OF_INSTANCES_OF_SCRIPT_WITH_NAME_HASH;
			extern typed_lazy_func_t<int(int eventGroup)> GET_NUMBER_OF_EVENTS;
			extern typed_lazy_func_t<bool()> _GET_NO_LOADING_SCREEN;
			extern typed_lazy_func_t<bool(const char* scriptName)> DOES_SCRIPT_EXIST;
			extern typed_lazy_func_t<Hash()> GET_HASH_OF_THIS_SCRIPT_NAME;
			extern typed_lazy_func_t<void(Hash scriptHash)> REQUEST_SCRIPT_WITH_NAME_HASH;
			extern typed_lazy_func_t<void(int eventGroup, int* args, int argCount, int bit)> TRIGGER_SCRIPT_EVENT;
			extern typed_lazy_func_t<void()> _0xB1577667C3708F9B;
			extern typed_lazy_func_t<void(Hash scriptHash)> SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<bool(int threadId)> IS_THREAD_ACTIVE;
			extern typed_lazy_func_t<void()> _BEGIN_ENUMERATING_THREADS;
			extern typed_lazy_func_t<void(int threadId)> TERMINATE_THREAD;
			extern typed_lazy_func_t<const char*(int threadId)> _GET_NAME_OF_THREAD;
			extern typed_lazy_func_t<bool(const char* scriptName)> HAS_SCRIPT_LOADED;
			extern typed_lazy_func_t<int()> GET_ID_OF_THIS_THREAD;
			extern typed_lazy_func_t<void()> TERMINATE_THIS_THREAD;
			extern typed_lazy_func_t<const char*()> GET_THIS_SCRIPT_NAME;
			extern typed_lazy_func_t<void(bool toggle)> SET_NO_LOADING_SCREEN;
		} /* SCRIPT */
		namespace MOBILE {
			extern typed_lazy_func_t<void(float p0)> _0x1B0B4AEED5B9B41C;
			extern typed_lazy_func_t<void(float p0)> _0x466DA42C89865553;
			extern typed_lazy_func_t<void(int p3)> CREATE_MOBILE_PHONE;
			extern typed_lazy_func_t<void()> DESTROY_MOBILE_PHONE;
			extern typed_lazy_func_t<void(float posX, float posY, float posZ)> SET_MOBILE_PHONE_POSITION;
			extern typed_lazy_func_t<void(int direction)> _MOVE_FINGER;
			extern typed_lazy_func_t<void(bool p0, bool p1)> CELL_CAM_ACTIVATE;
			extern typed_lazy_func_t<void(bool toggle)> _DISABLE_PHONE_THIS_FRAME;
			extern typed_lazy_func_t<void(Vector3* position)> GET_MOBILE_PHONE_POSITION;
			extern typed_lazy_func_t<void(bool toggle)> SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN;
			extern typed_lazy_func_t<void(float p0)> _0xD6ADE981781FCA09;
			extern typed_lazy_func_t<bool(const char* name)> _NETWORK_SHOP_DOES_ITEM_EXIST;
			extern typed_lazy_func_t<void(float p0)> _0xF1E22DC13F5EEBAD;
			extern typed_lazy_func_t<bool(Entity entity)> CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK;
			extern typed_lazy_func_t<void(Vector3* rotation, Vehicle p1)> GET_MOBILE_PHONE_ROTATION;
			extern typed_lazy_func_t<void(bool Toggle)> _SET_PHONE_LEAN;
			extern typed_lazy_func_t<void(int* toggle)> _0xA2CCBE62CD4C91A4;
			extern typed_lazy_func_t<void(float p0)> _0x53F4892D18EC90A4;
			extern typed_lazy_func_t<void(float p0)> _0x3117D84EFA60F77B;
			extern typed_lazy_func_t<void(float p0)> _0xAC2890471901861C;
			extern typed_lazy_func_t<void(float scale)> SET_MOBILE_PHONE_SCALE;
			extern typed_lazy_func_t<void(float rotX, float rotY, float rotZ, Any p3)> SET_MOBILE_PHONE_ROTATION;
			extern typed_lazy_func_t<bool()> CAN_PHONE_BE_SEEN_ON_SCREEN;
			extern typed_lazy_func_t<void(float p0)> _0x15E69E2802C24B8D;
			extern typed_lazy_func_t<void(int* renderId)> GET_MOBILE_PHONE_RENDER_ID;
			extern typed_lazy_func_t<bool(Hash hash)> _NETWORK_SHOP_DOES_ITEM_EXIST_HASH;
		} /* MOBILE */
		namespace DECORATOR {
			extern typed_lazy_func_t<bool(Entity entity, const char* propertyName, int timestamp)> DECOR_SET_TIME;
			extern typed_lazy_func_t<bool(Entity entity, const char* propertyName, float value)> _DECOR_SET_FLOAT;
			extern typed_lazy_func_t<bool(Entity entity, const char* propertyName, int value)> DECOR_SET_INT;
			extern typed_lazy_func_t<int(Entity entity, const char* propertyName)> DECOR_GET_INT;
			extern typed_lazy_func_t<bool(Entity entity, const char* propertyName)> DECOR_REMOVE;
			extern typed_lazy_func_t<void(const char* propertyName, int type)> DECOR_REGISTER;
			extern typed_lazy_func_t<void()> DECOR_REGISTER_LOCK;
			extern typed_lazy_func_t<bool(Entity entity, const char* propertyName, bool value)> DECOR_SET_BOOL;
			extern typed_lazy_func_t<bool(Entity entity, const char* propertyName)> DECOR_GET_BOOL;
			extern typed_lazy_func_t<float(Entity entity, const char* propertyName)> _DECOR_GET_FLOAT;
			extern typed_lazy_func_t<bool(Entity entity, const char* propertyName)> DECOR_EXIST_ON;
			extern typed_lazy_func_t<bool(const char* propertyName, int type)> DECOR_IS_REGISTERED_AS_TYPE;
			extern typed_lazy_func_t<bool()> _0x241FCA5B1AA14F75;
		} /* DECORATOR */
		namespace UNK2 {
			extern typed_lazy_func_t<void(const char* p0, bool p1)> _0x7E2BD3EF6C205F09;
			extern typed_lazy_func_t<bool()> _IS_INTERIOR_RENDERING_DISABLED;
			extern typed_lazy_func_t<void()> _0x5AD3932DAEB1E5D3;
			extern typed_lazy_func_t<void(bool p0)> _0xE058175F8EAFE79A;
			extern typed_lazy_func_t<void()> _RESET_EDITOR_VALUES;
			extern typed_lazy_func_t<void()> _ACTIVATE_ROCKSTAR_EDITOR;
		} /* UNK2 */
		namespace CAM {
			extern typed_lazy_func_t<bool(Cam cam)> IS_CAM_INTERPOLATING;
			extern typed_lazy_func_t<void(Cam cam, int ped, int boneIndex, float x, float y, float z, bool p6)> POINT_CAM_AT_PED_BONE;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3)> _0xC91C6C55199308CA;
			extern typed_lazy_func_t<Vector3()> _GET_GAMEPLAY_CAM_COORDS;
			extern typed_lazy_func_t<void(Cam cam, Entity entity, float p2, float p3, float p4, bool p5)> POINT_CAM_AT_ENTITY;
			extern typed_lazy_func_t<bool(Any p0, Any p1, const char* animName, const char* animDictionary)> PLAY_SYNCHRONIZED_CAM_ANIM;
			extern typed_lazy_func_t<void(float minAngle, float maxAngle)> _SET_FIRST_PERSON_CAM_PITCH_RANGE;
			extern typed_lazy_func_t<float(Any p0)> _0x5F35F6732C3FBBA0;
			extern typed_lazy_func_t<bool()> IS_GAMEPLAY_HINT_ACTIVE;
			extern typed_lazy_func_t<float(Cam cam)> GET_CAM_SPLINE_NODE_PHASE;
			extern typed_lazy_func_t<void(Cam cam, int p1, float p2, float p3)> OVERRIDE_CAM_SPLINE_VELOCITY;
			extern typed_lazy_func_t<void(int viewMode)> SET_FOLLOW_PED_CAM_VIEW_MODE;
			extern typed_lazy_func_t<void(Cam cam, bool active)> SET_CAM_ACTIVE;
			extern typed_lazy_func_t<bool()> IS_FIRST_PERSON_AIM_CAM_ACTIVE;
			extern typed_lazy_func_t<float(Cam cam)> GET_CAM_FAR_CLIP;
			extern typed_lazy_func_t<void(Cam cam, float strength)> SET_CAM_MOTION_BLUR_STRENGTH;
			extern typed_lazy_func_t<void(Cam cam, float p1)> SET_CAM_SPLINE_PHASE;
			extern typed_lazy_func_t<Any(float p0)> _0x70894BD0915C5BCA;
			extern typed_lazy_func_t<void(Cam cam, float fieldOfView)> SET_CAM_FOV;
			extern typed_lazy_func_t<void(Cam cam, Ped ped, int boneIndex, float x, float y, float z, bool heading)> ATTACH_CAM_TO_PED_BONE;
			extern typed_lazy_func_t<void(const char* p0, float p1)> _0xF4C8CF9E353AFECA;
			extern typed_lazy_func_t<void(float yaw)> _SET_GAMEPLAY_CAM_RAW_YAW;
			extern typed_lazy_func_t<bool(Cam cam)> IS_CAM_RENDERING;
			extern typed_lazy_func_t<void(bool p0)> STOP_SCRIPT_GLOBAL_SHAKING;
			extern typed_lazy_func_t<Any(bool p0, int p1)> SET_WIDESCREEN_BORDERS;
			extern typed_lazy_func_t<void()> _0x59424BD75174C9B1;
			extern typed_lazy_func_t<void(bool p0)> _0xCCD078C2665D2973;
			extern typed_lazy_func_t<void(Cam cam, bool toggle)> SET_CAM_AFFECTS_AIMING;
			extern typed_lazy_func_t<bool()> IS_GAMEPLAY_CAM_RENDERING;
			extern typed_lazy_func_t<void()> _ENABLE_CROSSHAIR_THIS_FRAME;
			extern typed_lazy_func_t<void(bool p0)> SET_CINEMATIC_MODE_ACTIVE;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xD1B0F412F109EA5D;
			extern typed_lazy_func_t<void(bool p0, bool p1)> _0x271401846BD26E92;
			extern typed_lazy_func_t<float()> _GET_GAMEPLAY_CAM_FAR_DOF;
			extern typed_lazy_func_t<bool()> _0xCA9D2AA3E326D720;
			extern typed_lazy_func_t<Vector3(Cam cam)> GET_CAM_COORD;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0x0FB82563989CF4FB;
			extern typed_lazy_func_t<void(float x, float Value2)> SET_GAMEPLAY_CAM_RELATIVE_PITCH;
			extern typed_lazy_func_t<bool()> IS_CINEMATIC_CAM_SHAKING;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0xF55E4046F6F831DC;
			extern typed_lazy_func_t<float()> GET_GAMEPLAY_CAM_FOV;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, float p3)> _0x83B8201ED82A9A2D;
			extern typed_lazy_func_t<void(Cam camera, float p1)> _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0x609278246A29CA34;
			extern typed_lazy_func_t<bool(Cam cam)> IS_CAM_SHAKING;
			extern typed_lazy_func_t<void(Cam cam, float posX, float posY, float posZ)> SET_CAM_COORD;
			extern typed_lazy_func_t<void(Cam cam, float farClip)> SET_CAM_FAR_CLIP;
			extern typed_lazy_func_t<void(Any p0)> _0xFD3151CD37EA2245;
			extern typed_lazy_func_t<void()> DISABLE_AIM_CAM_THIS_UPDATE;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, bool p4, Any p5, Any p6, Any p7)> SET_GAMEPLAY_VEHICLE_HINT;
			extern typed_lazy_func_t<Cam(const char* Gippo, bool p1)> CREATE_CAM;
			extern typed_lazy_func_t<bool()> _IS_IN_VEHICLE_CAM_DISABLED;
			extern typed_lazy_func_t<void(float p0)> _0xD1F8363DFAD03848;
			extern typed_lazy_func_t<bool()> IS_GAMEPLAY_CAM_LOOKING_BEHIND;
			extern typed_lazy_func_t<Vector3(int rotationOrder)> GET_GAMEPLAY_CAM_ROT;
			extern typed_lazy_func_t<void(float x, float y, float z, int duration, int blendOutDuration, int blendInDuration, int unk)> SET_GAMEPLAY_COORD_HINT;
			extern typed_lazy_func_t<float(Cam cam)> GET_CAM_FOV;
			extern typed_lazy_func_t<Any()> _0x17FCA7199A530203;
			extern typed_lazy_func_t<void(Cam cam, bool thisScriptCheck)> DESTROY_CAM;
			extern typed_lazy_func_t<Vector3(Cam cam, int rotationOrder)> GET_CAM_ROT;
			extern typed_lazy_func_t<void(Cam cam, bool toggle)> SET_CAM_USE_SHALLOW_DOF_MODE;
			extern typed_lazy_func_t<bool(Cam cam, const char* animName, const char* animDictionary, float x, float y, float z, float xRot, float yRot, float zRot, bool p9, int p10)> PLAY_CAM_ANIM;
			extern typed_lazy_func_t<bool()> _0x3044240D2E0FA842;
			extern typed_lazy_func_t<void(Any p0)> _0x11FA5D3479C7DD47;
			extern typed_lazy_func_t<void(bool render, bool ease, int easeTime, bool p3, bool p4)> RENDER_SCRIPT_CAMS;
			extern typed_lazy_func_t<void(Cam cam, float range)> _SET_CAMERA_RANGE;
			extern typed_lazy_func_t<void(bool p0)> _0x469F2ECDEC046337;
			extern typed_lazy_func_t<void(int viewMode)> SET_FOLLOW_VEHICLE_CAM_VIEW_MODE;
			extern typed_lazy_func_t<void()> _0x62ECFCFDEE7885D6;
			extern typed_lazy_func_t<bool(Cam cam)> DOES_CAM_EXIST;
			extern typed_lazy_func_t<void(bool p0)> _0x91EF6EE6419E5B97;
			extern typed_lazy_func_t<void()> _0x5A43C76F7FC7BA5F;
			extern typed_lazy_func_t<void(bool thisScriptCheck)> DESTROY_ALL_CAMS;
			extern typed_lazy_func_t<Cam(Hash camHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, bool p8, Any p9)> CREATE_CAMERA_WITH_PARAMS;
			extern typed_lazy_func_t<void(Cam camera, float p1)> _SET_CAM_DOF_FOCUS_DISTANCE_BIAS;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x661B5C8654ADD825;
			extern typed_lazy_func_t<bool(Cam cam, const char* animName, const char* animDictionary)> IS_CAM_PLAYING_ANIM;
			extern typed_lazy_func_t<int()> GET_FOLLOW_PED_CAM_ZOOM_LEVEL;
			extern typed_lazy_func_t<Cam(const char* camName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, bool p8, int p9)> CREATE_CAM_WITH_PARAMS;
			extern typed_lazy_func_t<void(const char* p0, const char* p1, const char* p2, float p3)> _0xC2EAE3FB8CDBED31;
			extern typed_lazy_func_t<void(Cam cam, Entity entity, float xOffset, float yOffset, float zOffset, bool isRelative)> ATTACH_CAM_TO_ENTITY;
			extern typed_lazy_func_t<bool()> IS_SCREEN_FADED_IN;
			extern typed_lazy_func_t<bool()> IS_SCREEN_FADING_IN;
			extern typed_lazy_func_t<void(float FOV)> SET_GAMEPLAY_HINT_FOV;
			extern typed_lazy_func_t<void(Cam cam, const char* p1, const char* p2, const char* p3, float amplitude)> ANIMATED_SHAKE_CAM;
			extern typed_lazy_func_t<bool(Cam cam)> GET_CAM_SPLINE_NODE_INDEX;
			extern typed_lazy_func_t<void()> _0xC8391C309684595A;
			extern typed_lazy_func_t<void(bool p0)> STOP_GAMEPLAY_HINT;
			extern typed_lazy_func_t<void(const char* vehicleName)> _0x21E253A7F8DA5DFB;
			extern typed_lazy_func_t<void(Cam cam, float dofStrength)> SET_CAM_DOF_STRENGTH;
			extern typed_lazy_func_t<bool()> IS_SCRIPT_GLOBAL_SHAKING;
			extern typed_lazy_func_t<float()> GET_GAMEPLAY_CAM_RELATIVE_HEADING;
			extern typed_lazy_func_t<void(Cam cam, float phase)> SET_CAM_ANIM_CURRENT_PHASE;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius)> IS_SPHERE_VISIBLE;
			extern typed_lazy_func_t<void(bool p0)> SET_CINEMATIC_BUTTON_ACTIVE;
			extern typed_lazy_func_t<Any()> _0x1F2300CB7FA7B7F6;
			extern typed_lazy_func_t<void(float p0)> SET_CINEMATIC_CAM_SHAKE_AMPLITUDE;
			extern typed_lazy_func_t<void(Cam cam, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fieldOfView, Any p8, int p9, int p10, int p11)> SET_CAM_PARAMS;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, bool p4, Any p5, Any p6, Any p7)> SET_GAMEPLAY_OBJECT_HINT;
			extern typed_lazy_func_t<void(float p0)> _0xF8BDBF3D573049A1;
			extern typed_lazy_func_t<void(float p0)> _0xC92717EF615B6704;
			extern typed_lazy_func_t<void()> _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME;
			extern typed_lazy_func_t<void(Cam cam, float nearDOF)> SET_CAM_NEAR_DOF;
			extern typed_lazy_func_t<void(int duration)> DO_SCREEN_FADE_IN;
			extern typed_lazy_func_t<Cam()> GET_RENDERING_CAM;
			extern typed_lazy_func_t<void(bool p0)> _0xDB90C6CCA48940F1;
			extern typed_lazy_func_t<int()> GET_FOLLOW_PED_CAM_VIEW_MODE;
			extern typed_lazy_func_t<int(Any p0, Any p1)> _0x26903D9CD1175F2C;
			extern typed_lazy_func_t<bool(Cam cam)> IS_CAM_ACTIVE;
			extern typed_lazy_func_t<void()> _0x9E4CFFF989258472;
			extern typed_lazy_func_t<void(Cam p0)> _0xC8B5C4A79CC18B94;
			extern typed_lazy_func_t<void(Any p0)> _0x8BBACBF51DA047A8;
			extern typed_lazy_func_t<bool()> _0x74BD83EA840F6BC9;
			extern typed_lazy_func_t<void(float p0, float p1)> _0x2F7F2B26DD3F18EE;
			extern typed_lazy_func_t<void(Cam cam, float p1, float p2, float p3, float p4)> SET_CAM_DOF_PLANES;
			extern typed_lazy_func_t<void(int cam, int timeDuration)> SET_CAM_SPLINE_DURATION;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2)> _0xA6385DEB180F319F;
			extern typed_lazy_func_t<void(bool p0)> _0xA41BCD7213805AAC;
			extern typed_lazy_func_t<Any()> _0x8BFCEB5EA1B161B6;
			extern typed_lazy_func_t<void(Cam camera, float p1)> _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL;
			extern typed_lazy_func_t<bool()> IS_SCREEN_FADED_OUT;
			extern typed_lazy_func_t<bool()> IS_FOLLOW_PED_CAM_ACTIVE;
			extern typed_lazy_func_t<float(Cam cam)> GET_CAM_ANIM_CURRENT_PHASE;
			extern typed_lazy_func_t<bool(Any p0)> _0x5C48A1D6E3B33179;
			extern typed_lazy_func_t<float()> _0x80EC114669DAEFF4;
			extern typed_lazy_func_t<float()> _0x162F9D995753DC19;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0xE111A7C0D200CBC5;
			extern typed_lazy_func_t<void(Entity entity)> _0x49482F9FCD825AAA;
			extern typed_lazy_func_t<float(Cam cam)> GET_CAM_FAR_DOF;
			extern typed_lazy_func_t<void(int zoomLevel)> SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL;
			extern typed_lazy_func_t<void(bool render, float p1, int p2)> _RENDER_FIRST_PERSON_CAM;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x2A2173E46DAECD12;
			extern typed_lazy_func_t<bool()> IS_AIM_CAM_ACTIVE;
			extern typed_lazy_func_t<void(float pitch)> _SET_GAMEPLAY_CAM_RAW_PITCH;
			extern typed_lazy_func_t<void()> _DISABLE_FIRST_PERSON_CAM_THIS_FRAME;
			extern typed_lazy_func_t<void(bool p0)> STOP_CINEMATIC_CAM_SHAKING;
			extern typed_lazy_func_t<Any(Vehicle p0, int p1)> _0xE9EA16D6E54CDCA4;
			extern typed_lazy_func_t<void()> _0xDD79DF9F4D26E1C9;
			extern typed_lazy_func_t<Vector3()> GET_GAMEPLAY_CAM_COORD;
			extern typed_lazy_func_t<float()> _0xD0082607100D7193;
			extern typed_lazy_func_t<void(const char* shakeName, float intensity)> SHAKE_GAMEPLAY_CAM;
			extern typed_lazy_func_t<void(Cam cam, int p1, float p2, float p3)> OVERRIDE_CAM_SPLINE_MOTION_BLUR;
			extern typed_lazy_func_t<bool()> IS_GAMEPLAY_CAM_SHAKING;
			extern typed_lazy_func_t<void(float p0, float distance)> _ANIMATE_GAMEPLAY_CAM_ZOOM;
			extern typed_lazy_func_t<int()> GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3)> _0x503F5920162365B2;
			extern typed_lazy_func_t<void(int duration)> DO_SCREEN_FADE_OUT;
			extern typed_lazy_func_t<void(Ped p0, float x1, float y1, float z1, bool p4, Any p5, Any p6, Any p7)> SET_GAMEPLAY_PED_HINT;
			extern typed_lazy_func_t<Any()> _0xBF72910D0F26F025;
			extern typed_lazy_func_t<void(Cam camera, float x, float y, float z, float xRot, float yRot, float zRot, int length, int p8, int p9)> ADD_CAM_SPLINE_NODE;
			extern typed_lazy_func_t<void(float p0, float p1)> _0xCED08CBE8EBB97C7;
			extern typed_lazy_func_t<Vector3(int rotationOrder)> _GET_GAMEPLAY_CAM_ROT;
			extern typed_lazy_func_t<Any(float minimum, float maximum)> _CLAMP_GAMEPLAY_CAM_YAW;
			extern typed_lazy_func_t<void(Any p0)> STOP_CINEMATIC_SHOT;
			extern typed_lazy_func_t<void(float p0)> _0x12DED8CA53D47EA5;
			extern typed_lazy_func_t<Cam(Hash camHash, bool p1)> CREATE_CAMERA;
			extern typed_lazy_func_t<void(Cam camera, const char* name)> SET_CAM_DEBUG_NAME;
			extern typed_lazy_func_t<void(Cam cam, const char* type, float amplitude)> SHAKE_CAM;
			extern typed_lazy_func_t<void(Cam cam)> STOP_CAM_POINTING;
			extern typed_lazy_func_t<bool(Any p0)> IS_CAM_SPLINE_PAUSED;
			extern typed_lazy_func_t<void(float amplitude)> SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE;
			extern typed_lazy_func_t<bool(Any p0)> IS_CINEMATIC_SHOT_ACTIVE;
			extern typed_lazy_func_t<void(int p0)> _SET_CAM_EFFECT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0x0A9F2A468B328E74;
			extern typed_lazy_func_t<void(Cam cam, float nearClip)> SET_CAM_NEAR_CLIP;
			extern typed_lazy_func_t<bool()> _0x705A276EBFF3133D;
			extern typed_lazy_func_t<int()> GET_FOLLOW_VEHICLE_CAM_VIEW_MODE;
			extern typed_lazy_func_t<float()> _GET_GAMEPLAY_CAM_FAR_CLIP;
			extern typed_lazy_func_t<void(Any p0)> _0x5C41E6BABC9E2112;
			extern typed_lazy_func_t<float(Cam cam)> GET_CAM_NEAR_CLIP;
			extern typed_lazy_func_t<void(float p0)> CUSTOM_MENU_COORDINATES;
			extern typed_lazy_func_t<void(bool p0)> _0x4008EDF7D6E48175;
			extern typed_lazy_func_t<void()> STOP_CUTSCENE_CAM_SHAKING;
			extern typed_lazy_func_t<void(Cam cam, float farDOF)> SET_CAM_FAR_DOF;
			extern typed_lazy_func_t<void(bool p0, bool p1)> SET_TIME_IDLE_DROP;
			extern typed_lazy_func_t<bool()> IS_CINEMATIC_CAM_RENDERING;
			extern typed_lazy_func_t<void(Cam cam, float x, float y, float z)> POINT_CAM_AT_COORD;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x271017B9BA825366;
			extern typed_lazy_func_t<Any(float minimum, float maximum)> _CLAMP_GAMEPLAY_CAM_PITCH;
			extern typed_lazy_func_t<void()> _0xDC9DA9E8789F5246;
			extern typed_lazy_func_t<bool(const char* p0, int p1)> SET_FOLLOW_PED_CAM_CUTSCENE_CHAT;
			extern typed_lazy_func_t<void(Cam cam, bool p1)> STOP_CAM_SHAKING;
			extern typed_lazy_func_t<float()> GET_GAMEPLAY_CAM_RELATIVE_PITCH;
			extern typed_lazy_func_t<void(float distance)> _SET_FIRST_PERSON_CAM_NEAR_CLIP;
			extern typed_lazy_func_t<void(Cam camera, float p1)> _SET_CAM_DOF_FNUMBER_OF_LENS;
			extern typed_lazy_func_t<bool()> IS_SCREEN_FADING_OUT;
			extern typed_lazy_func_t<bool()> IS_FOLLOW_VEHICLE_CAM_ACTIVE;
			extern typed_lazy_func_t<float()> _GET_GAMEPLAY_CAM_NEAR_DOF;
			extern typed_lazy_func_t<Entity(float p0, int p1, float p2, float p3, float p4, float p5, float p6, int p7, int p8)> _0x89215EC747DF244A;
			extern typed_lazy_func_t<void(Cam cam, bool p1)> SET_CAM_INHERIT_ROLL_VEHICLE;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0x7BF1A54AE67AC070;
			extern typed_lazy_func_t<void()> _0xF4F2C0D4EE209E20;
			extern typed_lazy_func_t<void(Cam cam)> DETACH_CAM;
			extern typed_lazy_func_t<void(Entity entity, float xOffset, float yOffset, float zOffset, bool p4, int p5, int p6, int p7, Any p8)> SET_GAMEPLAY_ENTITY_HINT;
			extern typed_lazy_func_t<Any(Any p0)> _0xEE778F8C7E1142E2;
			extern typed_lazy_func_t<void(float heading)> SET_GAMEPLAY_CAM_RELATIVE_HEADING;
			extern typed_lazy_func_t<void(bool p0)> STOP_GAMEPLAY_CAM_SHAKING;
			extern typed_lazy_func_t<void(Entity entity)> _0x2AED6301F67007D5;
			extern typed_lazy_func_t<void(bool p0)> _0x247ACBC4ABBC9D1C;
			extern typed_lazy_func_t<Any()> _0xEAF0FA793D05C592;
			extern typed_lazy_func_t<void(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation)> SET_CAM_ACTIVE_WITH_INTERP;
			extern typed_lazy_func_t<void(bool p0)> GET_IS_MULTIPLAYER_BRIEF;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xA2767257A320FC82;
			extern typed_lazy_func_t<float(Cam cam)> GET_CAM_SPLINE_PHASE;
			extern typed_lazy_func_t<void(float p0)> _0x0225778816FDC28C;
			extern typed_lazy_func_t<float()> _GET_GAMEPLAY_CAM_ZOOM;
			extern typed_lazy_func_t<void(float distance)> _SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP;
			extern typed_lazy_func_t<void(Cam cam, float rotX, float rotY, float rotZ, int rotationOrder)> SET_CAM_ROT;
			extern typed_lazy_func_t<void()> SET_USE_HI_DOF;
			extern typed_lazy_func_t<void(Cam cam, float amplitude)> SET_CAM_SHAKE_AMPLITUDE;
			extern typed_lazy_func_t<Any()> _0x19CAFA3C87F7C2FF;
			extern typed_lazy_func_t<void(const char* p0, float p1)> SHAKE_CINEMATIC_CAM;
			extern typed_lazy_func_t<void(Any p0, int p1, Any p2, Entity entity)> CREATE_CINEMATIC_SHOT;
			extern typed_lazy_func_t<void(float p0)> _0x5D7B620DAE436138;
		} /* CAM */
		namespace STREAMING {
			extern typed_lazy_func_t<void(const char* animSet)> REQUEST_ANIM_SET;
			extern typed_lazy_func_t<void(bool toggle)> SET_GAME_PAUSES_FOR_STREAMING;
			extern typed_lazy_func_t<void()> _0x43D1680C6D19A8E9;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3)> _0xBED8CA5FF5E04113;
			extern typed_lazy_func_t<void()> _LOAD_MISSION_CREATOR_DATA;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_FOCUS;
			extern typed_lazy_func_t<void(Any p0)> _0x4E52E752C76E7E7A;
			extern typed_lazy_func_t<void(int p0)> _0x5F2013F8BC24EE69;
			extern typed_lazy_func_t<void()> _0x8E2A065ABDAE6994;
			extern typed_lazy_func_t<bool(Hash model)> IS_MODEL_A_VEHICLE;
			extern typed_lazy_func_t<void()> CLEAR_HD_AREA;
			extern typed_lazy_func_t<void(float x, float y, float z)> REQUEST_ADDITIONAL_COLLISION_AT_COORD;
			extern typed_lazy_func_t<bool()> IS_PLAYER_SWITCH_IN_PROGRESS;
			extern typed_lazy_func_t<Any()> _0x5B48A06DD0E792A5;
			extern typed_lazy_func_t<Any()> _0x78C0D93253149435;
			extern typed_lazy_func_t<void()> _0x03F1A106BDA7DD3E;
			extern typed_lazy_func_t<void(float x, float y, float z)> LOAD_SCENE;
			extern typed_lazy_func_t<void(Any p0)> _0x1EE7D8DF4425F053;
			extern typed_lazy_func_t<void(const char* animSet)> REMOVE_ANIM_SET;
			extern typed_lazy_func_t<bool(const char* assetName)> HAS_NAMED_PTFX_ASSET_LOADED;
			extern typed_lazy_func_t<void()> _0x1E9057A74FD73E23;
			extern typed_lazy_func_t<Vector3*()> NETWORK_UPDATE_LOAD_SCENE;
			extern typed_lazy_func_t<void(int interiorID, const char* roomName)> _REQUEST_INTERIOR_ROOM_BY_NAME;
			extern typed_lazy_func_t<void(Ped from, Ped to, int flags, int switchType)> START_PLAYER_SWITCH;
			extern typed_lazy_func_t<Any()> _0x3D3D8B3BE5A83D35;
			extern typed_lazy_func_t<void(bool toggle)> SET_STREAMING;
			extern typed_lazy_func_t<void(const char* clipSet)> REQUEST_CLIP_SET;
			extern typed_lazy_func_t<void()> CLEAR_FOCUS;
			extern typed_lazy_func_t<Any()> _0xFB199266061F820A;
			extern typed_lazy_func_t<void()> SHUTDOWN_CREATOR_BUDGET;
			extern typed_lazy_func_t<bool(const char* animDict)> DOES_ANIM_DICT_EXIST;
			extern typed_lazy_func_t<void(const char* iplName)> REMOVE_IPL;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius, Any p4)> NEW_LOAD_SCENE_START_SPHERE;
			extern typed_lazy_func_t<void()> NEW_LOAD_SCENE_STOP;
			extern typed_lazy_func_t<void(Any p0)> _0xD8295AF639FD9CB8;
			extern typed_lazy_func_t<bool(const char* animDict)> HAS_ANIM_DICT_LOADED;
			extern typed_lazy_func_t<void(const char* clipSet)> REMOVE_CLIP_SET;
			extern typed_lazy_func_t<int()> GET_NUMBER_OF_STREAMING_REQUESTS;
			extern typed_lazy_func_t<void(int p0)> SET_PED_POPULATION_BUDGET;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5, Any p6)> _0x0AD9710CEE2F590F;
			extern typed_lazy_func_t<void(Hash model)> REQUEST_COLLISION_FOR_MODEL;
			extern typed_lazy_func_t<void(const char* animDict)> REMOVE_ANIM_DICT;
			extern typed_lazy_func_t<Any()> REQUEST_PTFX_ASSET;
			extern typed_lazy_func_t<void(Entity entity)> SET_FOCUS_ENTITY;
			extern typed_lazy_func_t<bool(Hash model)> HAS_MODEL_LOADED;
			extern typed_lazy_func_t<void(Entity p0)> _0x0811381EF5062FEC;
			extern typed_lazy_func_t<int(float x1, float y1, float z1, float x2, float y2, float z2)> GET_IDEAL_PLAYER_SWITCH_TYPE;
			extern typed_lazy_func_t<void()> NETWORK_STOP_LOAD_SCENE;
			extern typed_lazy_func_t<bool()> IS_NEW_LOAD_SCENE_LOADED;
			extern typed_lazy_func_t<void()> _0xD4793DFF3AF2ABCD;
			extern typed_lazy_func_t<void()> LOAD_ALL_OBJECTS_NOW;
			extern typed_lazy_func_t<Any(float x, float y, float z)> REQUEST_COLLISION_AT_COORD;
			extern typed_lazy_func_t<void()> _0xBD605B8E0E18B3BB;
			extern typed_lazy_func_t<Any()> _0x0C15B0E443B2349D;
			extern typed_lazy_func_t<bool()> IS_SRL_LOADED;
			extern typed_lazy_func_t<void(int p0)> SET_VEHICLE_POPULATION_BUDGET;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7)> NEW_LOAD_SCENE_START;
			extern typed_lazy_func_t<int()> SET_PLAYER_INVERTED_UP;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius)> SET_HD_AREA;
			extern typed_lazy_func_t<bool()> IS_NETWORK_LOADING_SCENE;
			extern typed_lazy_func_t<bool(Hash model)> IS_MODEL_IN_CDIMAGE;
			extern typed_lazy_func_t<void(bool toggle)> SET_REDUCE_VEHICLE_MODEL_BUDGET;
			extern typed_lazy_func_t<int()> GET_PLAYER_SWITCH_TYPE;
			extern typed_lazy_func_t<Any()> _0xDFA80CB25D0A19B3;
			extern typed_lazy_func_t<void(const char* srl)> PREFETCH_SRL;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0xBEB2D9A1D9A8F55A;
			extern typed_lazy_func_t<void(const char* animDict)> REQUEST_ANIM_DICT;
			extern typed_lazy_func_t<bool(const char* clipSet)> HAS_CLIP_SET_LOADED;
			extern typed_lazy_func_t<void()> REMOVE_PTFX_ASSET;
			extern typed_lazy_func_t<void(const char* assetName)> REQUEST_NAMED_PTFX_ASSET;
			extern typed_lazy_func_t<Any()> _0x933BBEEB8C61B5F4;
			extern typed_lazy_func_t<void(float p0)> SET_SRL_TIME;
			extern typed_lazy_func_t<bool(Hash model)> IS_MODEL_VALID;
			extern typed_lazy_func_t<void(float x, float y, float z, float offsetX, float offsetY, float offsetZ)> _SET_FOCUS_AREA;
			extern typed_lazy_func_t<Any()> _0x71E7B2E657449AAD;
			extern typed_lazy_func_t<void()> _0x63EB2B972A218CAC;
			extern typed_lazy_func_t<void(Hash model)> REQUEST_MENU_PED_MODEL;
			extern typed_lazy_func_t<Any()> DESTROY_PLAYER_IN_PAUSE_MENU;
			extern typed_lazy_func_t<void(float p0)> _0xA76359FC80B2438E;
			extern typed_lazy_func_t<void(bool p0)> _0x40AEFD1A244741F2;
			extern typed_lazy_func_t<bool(const char* iplName)> IS_IPL_ACTIVE;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, Any p8)> _0x1F3F018BC3AFA77C;
			extern typed_lazy_func_t<void()> STOP_PLAYER_SWITCH;
			extern typed_lazy_func_t<void()> BEGIN_SRL;
			extern typed_lazy_func_t<void(const char* assetName)> _REMOVE_NAMED_PTFX_ASSET;
			extern typed_lazy_func_t<void(const char* p0, bool p1)> _0xAF12610C644A35C9;
			extern typed_lazy_func_t<Any(float x, float y, float z, float rad, Any p4, Any p5)> FORMAT_FOCUS_HEADING;
			extern typed_lazy_func_t<Any(Any p0)> _0x07C313F94746702C;
			extern typed_lazy_func_t<int()> GET_PLAYER_SHORT_SWITCH_STATE;
			extern typed_lazy_func_t<bool(Hash modelHash)> _0x0BC3144DEB678666;
			extern typed_lazy_func_t<void()> _0x74DE2E8739086740;
			extern typed_lazy_func_t<void(Ped ped, int flags, int unknown)> _SWITCH_OUT_PLAYER;
			extern typed_lazy_func_t<void()> END_SRL;
			extern typed_lazy_func_t<void(Any p0)> _0xF086AD9354FAC3A3;
			extern typed_lazy_func_t<int()> GET_PLAYER_SWITCH_STATE;
			extern typed_lazy_func_t<void(int interiorID, bool toggle)> SET_INTERIOR_ACTIVE;
			extern typed_lazy_func_t<bool(Hash model)> HAS_COLLISION_FOR_MODEL_LOADED;
			extern typed_lazy_func_t<bool(const char* animSet)> HAS_ANIM_SET_LOADED;
			extern typed_lazy_func_t<void(const char* iplName)> REQUEST_IPL;
			extern typed_lazy_func_t<bool()> HAS_PTFX_ASSET_LOADED;
			extern typed_lazy_func_t<Any(Any p0)> _0x7D41E9D2D17C5B2D;
			extern typed_lazy_func_t<bool()> IS_NEW_LOAD_SCENE_ACTIVE;
			extern typed_lazy_func_t<void(bool toggle)> SET_DITCH_POLICE_MODELS;
			extern typed_lazy_func_t<void()> _0x472397322E92A856;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> _0xEF39EE20C537E98C;
			extern typed_lazy_func_t<void(bool p0)> _0x20C6C7E4EB082A7F;
			extern typed_lazy_func_t<void(Hash model)> REQUEST_MODEL;
			extern typed_lazy_func_t<void(Hash model)> SET_MODEL_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<void()> _0xAD5FDF34B81BFE79;
			extern typed_lazy_func_t<Any()> _0xBC9823AB80A3DCAC;
			extern typed_lazy_func_t<void(Any* p0)> _0x0FDE9DBFC0A6BC65;
			extern typed_lazy_func_t<void(Any* p0, Any* p1)> _0x95A7DABDDBB78AE7;
			extern typed_lazy_func_t<void(bool toggle)> SET_REDUCE_PED_MODEL_BUDGET;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8)> SET_PLAYER_SWITCH_OUTRO;
			extern typed_lazy_func_t<void()> _0xF4A0DADB70F57FA6;
			extern typed_lazy_func_t<Any()> _0x5068F488DDB54DD8;
			extern typed_lazy_func_t<void(Any p0)> _0xF8155A7F03DDFC8E;
		} /* STREAMING */
		namespace BRAIN {
			extern typed_lazy_func_t<bool()> IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE;
			extern typed_lazy_func_t<void()> _0x4D953DF78EBF8158;
			extern typed_lazy_func_t<void(const char* action)> _0x6D6840CEE8845831;
			extern typed_lazy_func_t<void(const char* action)> _0x6E91B04E08773030;
			extern typed_lazy_func_t<void(const char* name, Hash model, float p2, float p3)> ADD_SCRIPT_TO_RANDOM_PED;
			extern typed_lazy_func_t<void(const char* scriptName, Hash objectName, int p2, float p3, int p4, int p5)> REGISTER_OBJECT_SCRIPT_BRAIN;
			extern typed_lazy_func_t<bool(Object object)> IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE;
			extern typed_lazy_func_t<void(Any* p0, float p1, Any p2)> REGISTER_WORLD_POINT_SCRIPT_BRAIN;
			extern typed_lazy_func_t<void(int brainSet)> ENABLE_SCRIPT_BRAIN_SET;
			extern typed_lazy_func_t<void(int brainSet)> DISABLE_SCRIPT_BRAIN_SET;
			extern typed_lazy_func_t<void()> _0x0B40ED49D7D6FF84;
		} /* BRAIN */
		namespace DATAFILE {
			extern typed_lazy_func_t<void(Any* arrayData, const char* value)> _ARRAY_VALUE_ADD_STRING;
			extern typed_lazy_func_t<Any*(Any* arrayData, int arrayIndex)> _ARRAY_VALUE_GET_OBJECT;
			extern typed_lazy_func_t<bool(Any p0)> _0x15FF52B809DB2353;
			extern typed_lazy_func_t<int(Any* arrayData, int arrayIndex)> _ARRAY_VALUE_GET_TYPE;
			extern typed_lazy_func_t<bool(const char* p0, const char* p1, const char* p2, const char* p3, const char* type)> _0x4645DE9980999E93;
			extern typed_lazy_func_t<void(Any* arrayData, float value)> _ARRAY_VALUE_ADD_FLOAT;
			extern typed_lazy_func_t<Any*(Any* arrayData)> _ARRAY_VALUE_ADD_OBJECT;
			extern typed_lazy_func_t<bool(const char* p0, Any* p1, bool p2, Any* p3, Any* p4, Any* p5, const char* type)> _0x648E7A5434AF7969;
			extern typed_lazy_func_t<bool(bool* p0)> _0x4DFDD9EB705F8140;
			extern typed_lazy_func_t<void(Any* arrayData, float valueX, float valueY, float valueZ)> _ARRAY_VALUE_ADD_VECTOR3;
			extern typed_lazy_func_t<void()> _0x2ED61456317B8178;
			extern typed_lazy_func_t<const char*()> DATAFILE_GET_FILE_DICT;
			extern typed_lazy_func_t<int(Any* objectData, const char* key)> _OBJECT_VALUE_GET_TYPE;
			extern typed_lazy_func_t<float(Any* arrayData, int arrayIndex)> _ARRAY_VALUE_GET_FLOAT;
			extern typed_lazy_func_t<void(Any* objectData, const char* key, float valueX, float valueY, float valueZ)> _OBJECT_VALUE_ADD_VECTOR3;
			extern typed_lazy_func_t<bool(const char* filename)> _LOAD_UGC_FILE;
			extern typed_lazy_func_t<bool(Any p0)> _0x8F5EA1C01D65A100;
			extern typed_lazy_func_t<bool(const char* p0, float p1, const char* type)> _0x692D808C34A82143;
			extern typed_lazy_func_t<Vector3(Any* objectData, const char* key)> _OBJECT_VALUE_GET_VECTOR3;
			extern typed_lazy_func_t<int(Any* arrayData)> _ARRAY_VALUE_GET_SIZE;
			extern typed_lazy_func_t<void()> _0xC55854C7D7274882;
			extern typed_lazy_func_t<void(Any* objectData, const char* key, bool value)> _OBJECT_VALUE_ADD_BOOLEAN;
			extern typed_lazy_func_t<float(Any* objectData, const char* key)> _OBJECT_VALUE_GET_FLOAT;
			extern typed_lazy_func_t<bool()> DATAFILE_IS_SAVE_PENDING;
			extern typed_lazy_func_t<void(Any* objectData, const char* key, const char* value)> _OBJECT_VALUE_ADD_STRING;
			extern typed_lazy_func_t<Any*(Any* objectData, const char* key)> _OBJECT_VALUE_ADD_OBJECT;
			extern typed_lazy_func_t<void()> _0x6CC86E78358D5119;
			extern typed_lazy_func_t<bool(Any p0)> _0x22DA66936E0FFF37;
			extern typed_lazy_func_t<int(Any* objectData, const char* key)> _OBJECT_VALUE_GET_INTEGER;
			extern typed_lazy_func_t<Any*(Any* objectData, const char* key)> _OBJECT_VALUE_GET_ARRAY;
			extern typed_lazy_func_t<Vector3(Any* arrayData, int arrayIndex)> _ARRAY_VALUE_GET_VECTOR3;
			extern typed_lazy_func_t<bool(const char* p0, const char* p1, const char* p2, const char* p3, bool p4)> _0xA5EFC3E847D60507;
			extern typed_lazy_func_t<bool(int p0)> _0xA69AC4ADE82B57A4;
			extern typed_lazy_func_t<void(Any* objectData, const char* key, float value)> _OBJECT_VALUE_ADD_FLOAT;
			extern typed_lazy_func_t<int(Any* arrayData, int arrayIndex)> _ARRAY_VALUE_GET_INTEGER;
			extern typed_lazy_func_t<bool(const char* filename)> _0x83BCCE3224735F05;
			extern typed_lazy_func_t<bool(Any* arrayData, int arrayIndex)> _ARRAY_VALUE_GET_BOOLEAN;
			extern typed_lazy_func_t<bool(Any* objectData, const char* key)> _OBJECT_VALUE_GET_BOOLEAN;
			extern typed_lazy_func_t<void(Any* arrayData, bool value)> _ARRAY_VALUE_ADD_BOOLEAN;
			extern typed_lazy_func_t<const char*(Any* arrayData, int arrayIndex)> _ARRAY_VALUE_GET_STRING;
			extern typed_lazy_func_t<void(Blip x)> _0xAD6875BBC0FC899C;
			extern typed_lazy_func_t<bool(const char* p0, bool p1, const char* p2, Any* p3, Any* p4, const char* type, bool p6)> _0xC84527E235FCA219;
			extern typed_lazy_func_t<bool(int p0)> _0x01095C95CD46B624;
			extern typed_lazy_func_t<const char*(Any* objectData, const char* key)> _OBJECT_VALUE_GET_STRING;
			extern typed_lazy_func_t<Any*(Any* objectData, const char* key)> _OBJECT_VALUE_GET_OBJECT;
			extern typed_lazy_func_t<bool(int p0, bool p1)> _0x9CB0BFA7A9342C3D;
			extern typed_lazy_func_t<bool(Any p0)> _0xFCCAE5B92A830878;
			extern typed_lazy_func_t<void()> DATAFILE_CREATE;
			extern typed_lazy_func_t<void(Any* arrayData, int value)> _ARRAY_VALUE_ADD_INTEGER;
			extern typed_lazy_func_t<void(Any* objectData, const char* key, int value)> _OBJECT_VALUE_ADD_INTEGER;
			extern typed_lazy_func_t<Any*(Any* objectData, const char* key)> _OBJECT_VALUE_ADD_ARRAY;
			extern typed_lazy_func_t<bool(Any p0)> _0xF8CC1EBE0B62E29F;
			extern typed_lazy_func_t<bool(int p0)> _0x52818819057F2B40;
			extern typed_lazy_func_t<void()> DATAFILE_DELETE;
		} /* DATAFILE */
		namespace ZONE {
			extern typed_lazy_func_t<void(int zoneId, bool toggle)> SET_ZONE_ENABLED;
			extern typed_lazy_func_t<void(int scheduleId)> CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL;
			extern typed_lazy_func_t<Hash(float x, float y, float z)> GET_HASH_OF_MAP_AREA_AT_COORDS;
			extern typed_lazy_func_t<const char*(float x, float y, float z)> GET_NAME_OF_ZONE;
			extern typed_lazy_func_t<int(const char* zoneName)> GET_ZONE_FROM_NAME_ID;
			extern typed_lazy_func_t<int(int zoneId)> GET_ZONE_POPSCHEDULE;
			extern typed_lazy_func_t<int(int zoneId)> GET_ZONE_SCUMMINESS;
			extern typed_lazy_func_t<void(int scheduleId, Hash vehicleHash)> OVERRIDE_POPSCHEDULE_VEHICLE_MODEL;
			extern typed_lazy_func_t<int(float x, float y, float z)> GET_ZONE_AT_COORDS;
		} /* ZONE */
		namespace WATER {
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* result)> TEST_PROBE_AGAINST_WATER;
			extern typed_lazy_func_t<void(float x, float y, float radius, float height)> MODIFY_WATER;
			extern typed_lazy_func_t<float()> _GET_CURRENT_INTENSITY;
			extern typed_lazy_func_t<int(float xLow, float yLow, float xHigh, float yHigh, float height)> _ADD_CURRENT_RISE;
			extern typed_lazy_func_t<void(int p0)> _REMOVE_CURRENT_RISE;
			extern typed_lazy_func_t<void(float intensity)> _SET_CURRENT_INTENSITY;
			extern typed_lazy_func_t<void()> _RESET_CURRENT_INTENSITY;
			extern typed_lazy_func_t<bool(float x, float y, float z, float height)> GET_WATER_HEIGHT;
			extern typed_lazy_func_t<bool(float x, float y, float z, float* height)> GET_WATER_HEIGHT_NO_WAVES;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7)> TEST_PROBE_AGAINST_ALL_WATER;
			extern typed_lazy_func_t<bool(float x, float y, float z, Any p3, float* height)> TEST_VERTICAL_PROBE_AGAINST_ALL_WATER;
		} /* WATER */
		namespace WORLDPROBE {
			extern typed_lazy_func_t<int(Entity entity, int flags1, int flags2)> START_SHAPE_TEST_BOUND;
			extern typed_lazy_func_t<int(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, int flag2)> _START_SHAPE_TEST_SURROUNDING_COORDS;
			extern typed_lazy_func_t<int(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity ent, int p8)> START_SHAPE_TEST_LOS_PROBE;
			extern typed_lazy_func_t<int(Entity entity, int flags1, int flags2)> START_SHAPE_TEST_BOUNDING_BOX;
			extern typed_lazy_func_t<int(float x, float y, float z, float x1, float y2, float z2, float rotX, float rotY, float rotZ, Any p9, Any p10, Any entity, Any p12)> START_SHAPE_TEST_BOX;
			extern typed_lazy_func_t<int(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, int p9)> START_SHAPE_TEST_CAPSULE;
			extern typed_lazy_func_t<int(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, Any p9)> _START_SHAPE_TEST_CAPSULE_2;
			extern typed_lazy_func_t<int(int rayHandle, bool* hit, Vector3* endCoords, Vector3* surfaceNormal, Entity* entityHit)> GET_SHAPE_TEST_RESULT;
			extern typed_lazy_func_t<int(int rayHandle, bool* hit, Vector3* endCoords, Vector3* surfaceNormal, Hash* materialHash, Entity* entityHit)> _GET_SHAPE_TEST_RESULT_EX;
			extern typed_lazy_func_t<void(Entity entityHit)> _SHAPE_TEST_RESULT_ENTITY;
			extern typed_lazy_func_t<int(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8)> _START_SHAPE_TEST_RAY;
		} /* WORLDPROBE */
		namespace PLAYER {
			extern typed_lazy_func_t<void(Player player, int r, int g, int b)> SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR;
			extern typed_lazy_func_t<int(Player player)> GET_PLAYER_GROUP;
			extern typed_lazy_func_t<void(Player player)> RESET_PLAYER_ARREST_STATE;
			extern typed_lazy_func_t<bool()> IS_SYSTEM_UI_BEING_DISPLAYED;
			extern typed_lazy_func_t<void(int targetMode)> SET_PLAYER_TARGETING_MODE;
			extern typed_lazy_func_t<void()> STOP_PLAYER_TELEPORT;
			extern typed_lazy_func_t<void(Player player, Player position, Vehicle p2, Ped* p3)> SET_PLAYER_WANTED_CENTRE_POSITION;
			extern typed_lazy_func_t<void(Player control, float amount, int gaitType, float speed, bool p4, bool p5)> SIMULATE_PLAYER_INPUT_GAIT;
			extern typed_lazy_func_t<void(int index)> SET_PLAYER_CLOTH_PACKAGE_INDEX;
			extern typed_lazy_func_t<bool(Player player)> HAS_PLAYER_LEFT_THE_WORLD;
			extern typed_lazy_func_t<bool(Player player)> IS_SPECIAL_ABILITY_ENABLED;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_ALL_RANDOM_PEDS_FLEE;
			extern typed_lazy_func_t<void(Player player)> _0xBC9490CA15AEA8FB;
			extern typed_lazy_func_t<int(Player player)> GET_TIME_SINCE_PLAYER_HIT_VEHICLE;
			extern typed_lazy_func_t<bool(int cleanupFlags)> HAS_FORCE_CLEANUP_OCCURRED;
			extern typed_lazy_func_t<void(Player player, int* r, int* g, int* b)> GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR;
			extern typed_lazy_func_t<void(Player player, bool p1, bool p2)> SPECIAL_ABILITY_CHARGE_MEDIUM;
			extern typed_lazy_func_t<Ped(Player Player)> GET_PLAYER_PED_SCRIPT_INDEX;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_CLIMBING;
			extern typed_lazy_func_t<void(Player player, float damageAmount)> SET_PLAYER_VEHICLE_DAMAGE_MODIFIER;
			extern typed_lazy_func_t<void(Player player)> CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE;
			extern typed_lazy_func_t<Vehicle()> GET_PLAYERS_LAST_VEHICLE;
			extern typed_lazy_func_t<void(bool unk)> DISPLAY_SYSTEM_SIGNIN_UI;
			extern typed_lazy_func_t<void(int duration)> START_FIRING_AMNESTY;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_CONTROL_ON;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7)> PLAYER_ATTACH_VIRTUAL_BOUND;
			extern typed_lazy_func_t<void()> _0xB885852C39CC265D;
			extern typed_lazy_func_t<void(bool toggle)> SET_POLICE_RADAR_BLIPS;
			extern typed_lazy_func_t<void(bool p0, ScrHandle p1)> _0x5DC40A8869C22141;
			extern typed_lazy_func_t<void(Player player, bool p1)> SET_PLAYER_WANTED_LEVEL_NOW;
			extern typed_lazy_func_t<bool(Player player)> ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP;
			extern typed_lazy_func_t<void(Player player)> SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE;
			extern typed_lazy_func_t<void(Player player, bool p1, bool p2)> SPECIAL_ABILITY_CHARGE_SMALL;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_CAN_BE_HASSLED_BY_GANGS;
			extern typed_lazy_func_t<bool()> _IS_PLAYER_CAM_CONTROL_DISABLED;
			extern typed_lazy_func_t<int(Player player)> GET_TIME_SINCE_PLAYER_HIT_PED;
			extern typed_lazy_func_t<Ped()> PLAYER_PED_ID;
			extern typed_lazy_func_t<Any(Player player)> _0xAD73CE5A09E42D12;
			extern typed_lazy_func_t<int(int achId)> _GET_ACHIEVEMENT_PROGRESSION;
			extern typed_lazy_func_t<void(Player player, int p1)> _SWITCH_CRIME_TYPE;
			extern typed_lazy_func_t<void()> ASSISTED_MOVEMENT_FLUSH_ROUTE;
			extern typed_lazy_func_t<Any(Player player)> GET_WANTED_LEVEL_RADIUS;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_PLAYING;
			extern typed_lazy_func_t<int()> GET_MAX_WANTED_LEVEL;
			extern typed_lazy_func_t<void(Player player, Hash model)> SET_PLAYER_PARACHUTE_MODEL_OVERRIDE;
			extern typed_lazy_func_t<Vector3(Player player)> GET_PLAYER_WANTED_CENTRE_POSITION;
			extern typed_lazy_func_t<void(Player player, Vehicle vehicle)> SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE;
			extern typed_lazy_func_t<void(Player player, float regenRate)> SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER;
			extern typed_lazy_func_t<void(Player player, float multiplier)> SET_SWIM_MULTIPLIER_FOR_PLAYER;
			extern typed_lazy_func_t<void(Player player, float x, float y, float z, float heading, bool p5, bool p6, bool p7)> START_PLAYER_TELEPORT;
			extern typed_lazy_func_t<void(Player player, float value)> SET_PLAYER_STEALTH_PERCEPTION_MODIFIER;
			extern typed_lazy_func_t<void(Player player, Hash model)> SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE;
			extern typed_lazy_func_t<int(Player player)> GET_PLAYER_TEAM;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_PRESSING_HORN;
			extern typed_lazy_func_t<void(Player player, int crimeType, int wantedLvlThresh)> REPORT_CRIME;
			extern typed_lazy_func_t<bool(int achId, int progression)> _SET_ACHIEVEMENT_PROGRESSION;
			extern typed_lazy_func_t<void(Player player)> CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED;
			extern typed_lazy_func_t<void(Player player, int wantedLevel, bool p2)> SET_PLAYER_WANTED_LEVEL_NO_DROP;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_POLICE_IGNORE_PLAYER;
			extern typed_lazy_func_t<void(const char* name, int cleanupFlags)> FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_CLOTH_PIN_FRAMES;
			extern typed_lazy_func_t<bool(Player player)> _0x38D28DA81E4E9BF9;
			extern typed_lazy_func_t<bool(Player player)> ARE_PLAYER_STARS_GREYED_OUT;
			extern typed_lazy_func_t<void(Player player)> _0xC9A763D8FE87436A;
			extern typed_lazy_func_t<void(Player player, bool p1, bool p2)> SPECIAL_ABILITY_CHARGE_LARGE;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_SIMULATE_AIMING;
			extern typed_lazy_func_t<void()> ASSISTED_MOVEMENT_CLOSE_ROUTE;
			extern typed_lazy_func_t<void(Player Player, int* r, int* g, int* b)> GET_PLAYER_RGB_COLOUR;
			extern typed_lazy_func_t<int()> NETWORK_PLAYER_ID_TO_INT;
			extern typed_lazy_func_t<void(Player player, float multiplier)> SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE;
			extern typed_lazy_func_t<Vehicle()> GET_NUMBER_OF_PLAYERS;
			extern typed_lazy_func_t<void(float p0)> _0xB45EFF719D8427A6;
			extern typed_lazy_func_t<void(Player player, int index)> SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX;
			extern typed_lazy_func_t<void(Player player, Hash model)> SET_PLAYER_MODEL;
			extern typed_lazy_func_t<int(int value)> INT_TO_PARTICIPANTINDEX;
			extern typed_lazy_func_t<bool()> IS_PLAYER_ONLINE;
			extern typed_lazy_func_t<bool(Player player)> IS_SPECIAL_ABILITY_ACTIVE;
			extern typed_lazy_func_t<void(Player player, float modifier)> SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER;
			extern typed_lazy_func_t<void(Player player, bool p1)> _0xD2B315B6689D537D;
			extern typed_lazy_func_t<float(Player player)> GET_PLAYER_UNDERWATER_TIME_REMAINING;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_SCRIPT_CONTROL_ON;
			extern typed_lazy_func_t<Any(int achId)> GIVE_ACHIEVEMENT_TO_PLAYER;
			extern typed_lazy_func_t<void(Hash playerModel)> SPECIAL_ABILITY_UNLOCK;
			extern typed_lazy_func_t<bool(Player player)> HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE;
			extern typed_lazy_func_t<void()> _0x0032A6DBA562C518;
			extern typed_lazy_func_t<void(Player player, float multiplier)> SET_PLAYER_SNEAKING_NOISE_MULTIPLIER;
			extern typed_lazy_func_t<Player(int* p0)> _0x56105E599CAB0EFA;
			extern typed_lazy_func_t<bool(Player player, Ped ped)> CAN_PED_HEAR_PLAYER;
			extern typed_lazy_func_t<void(Player player, bool p1)> _0xFF300C7649724A0B;
			extern typed_lazy_func_t<const char*(Player player)> GET_PLAYER_NAME;
			extern typed_lazy_func_t<bool(Player player, Entity entity)> IS_PLAYER_FREE_AIMING_AT_ENTITY;
			extern typed_lazy_func_t<Player(int value)> INT_TO_PLAYERINDEX;
			extern typed_lazy_func_t<bool(int achievement)> HAS_ACHIEVEMENT_BEEN_PASSED;
			extern typed_lazy_func_t<Player()> PLAYER_ID;
			extern typed_lazy_func_t<void(Player player, Ped p2)> SPECIAL_ABILITY_CHARGE_CONTINUOUS;
			extern typed_lazy_func_t<void(Player player, int* tintIndex)> GET_PLAYER_PARACHUTE_PACK_TINT_INDEX;
			extern typed_lazy_func_t<void(Player player)> SET_PLAYER_HAS_RESERVE_PARACHUTE;
			extern typed_lazy_func_t<void(Player player, bool enabled)> SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL;
			extern typed_lazy_func_t<void(Player player, int team)> SET_PLAYER_TEAM;
			extern typed_lazy_func_t<void(Player player)> RESET_PLAYER_STAMINA;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_FORCED_AIM;
			extern typed_lazy_func_t<void(Player player)> SPECIAL_ABILITY_DEACTIVATE_FAST;
			extern typed_lazy_func_t<bool(Player player)> CAN_PLAYER_START_MISSION;
			extern typed_lazy_func_t<void(int id, int cleanupFlags)> FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID;
			extern typed_lazy_func_t<void(Player player)> CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE;
			extern typed_lazy_func_t<void(Player player, bool p1)> _0xCAC57395B151135F;
			extern typed_lazy_func_t<void(Player player, bool toggle)> GIVE_PLAYER_RAGDOLL_CONTROL;
			extern typed_lazy_func_t<void(Player player, float normalizedValue, bool p2)> SPECIAL_ABILITY_CHARGE_NORMALIZED;
			extern typed_lazy_func_t<bool(Player player, float p1)> _0xDD2620B7B9D16FF1;
			extern typed_lazy_func_t<bool(Player p0)> _0x65FAEE425DE637B0;
			extern typed_lazy_func_t<void(Player player)> SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME;
			extern typed_lazy_func_t<void(Player player)> _0x36F1B38855F2A8DF;
			extern typed_lazy_func_t<bool(Player player)> GET_PLAYER_INVINCIBLE;
			extern typed_lazy_func_t<void(Player player, int tintIndex)> SET_PLAYER_PARACHUTE_TINT_INDEX;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS;
			extern typed_lazy_func_t<void(Player player, float range)> SET_PLAYER_LOCKON_RANGE_OVERRIDE;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_CAN_DO_DRIVE_BY;
			extern typed_lazy_func_t<void(Player player, float p1)> RESTORE_PLAYER_STAMINA;
			extern typed_lazy_func_t<void(int cleanupFlags)> FORCE_CLEANUP;
			extern typed_lazy_func_t<void(Player player, ScrHandle modifier)> SET_PLAYER_WEAPON_DEFENSE_MODIFIER;
			extern typed_lazy_func_t<bool(Player player, int wantedLevel)> IS_PLAYER_WANTED_LEVEL_GREATER;
			extern typed_lazy_func_t<int(Player player)> GET_PLAYER_WANTED_LEVEL;
			extern typed_lazy_func_t<bool(Player player, Entity* entity)> GET_ENTITY_PLAYER_IS_FREE_AIMING_AT;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_FORCED_ZOOM;
			extern typed_lazy_func_t<bool(Player player, int p1, bool p2)> _0xBC0753C9CA14B506;
			extern typed_lazy_func_t<Any(Player player)> _0x4669B3ED80F24B4E;
			extern typed_lazy_func_t<int(Player player)> GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC;
			extern typed_lazy_func_t<float(Player player)> GET_PLAYER_CURRENT_STEALTH_NOISE;
			extern typed_lazy_func_t<void(Player player)> DISABLE_PLAYER_VEHICLE_REWARDS;
			extern typed_lazy_func_t<void(Player player, float modifier)> SET_PLAYER_VEHICLE_DEFENSE_MODIFIER;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_FREE_AIMING;
			extern typed_lazy_func_t<bool(Player player)> GET_PLAYER_HAS_RESERVE_PARACHUTE;
			extern typed_lazy_func_t<float(Player player)> GET_PLAYER_SPRINT_TIME_REMAINING;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_DISABLE_AMBIENT_MELEE_MOVE;
			extern typed_lazy_func_t<void(Player player)> _0xC3376F42B1FACCC6;
			extern typed_lazy_func_t<void(Player player, float difficulty)> SET_WANTED_LEVEL_DIFFICULTY;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_READY_FOR_CUTSCENE;
			extern typed_lazy_func_t<bool(Player player)> HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED;
			extern typed_lazy_func_t<void(Player player)> _0xFFEE8FA29AB9A18E;
			extern typed_lazy_func_t<bool(Player player)> _HAS_PLAYER_TELEPORT_FINISHED;
			extern typed_lazy_func_t<void(Player player)> RESET_PLAYER_INPUT_GAIT;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_DISPATCH_COPS_FOR_PLAYER;
			extern typed_lazy_func_t<bool(Player player, Entity entity)> IS_PLAYER_TARGETTING_ENTITY;
			extern typed_lazy_func_t<bool(Player player)> IS_SPECIAL_ABILITY_METER_FULL;
			extern typed_lazy_func_t<int()> GET_TIME_SINCE_LAST_DEATH;
			extern typed_lazy_func_t<void(Hash playerModel)> SPECIAL_ABILITY_LOCK;
			extern typed_lazy_func_t<void(float multiplier)> SET_SPECIAL_ABILITY_MULTIPLIER;
			extern typed_lazy_func_t<void(Player player, float damageAmount)> SET_PLAYER_WEAPON_DAMAGE_MODIFIER;
			extern typed_lazy_func_t<void(int maxWantedLevel)> SET_MAX_WANTED_LEVEL;
			extern typed_lazy_func_t<void(Player player, int flags)> SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS;
			extern typed_lazy_func_t<void(Player player)> _0xDC64D2C53493ED12;
			extern typed_lazy_func_t<void(Player player, bool toggle)> ENABLE_SPECIAL_ABILITY;
			extern typed_lazy_func_t<void(Player player, int* index)> GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX;
			extern typed_lazy_func_t<void(Player player, int wantedLevel, bool disableNoMission)> SET_PLAYER_WANTED_LEVEL;
			extern typed_lazy_func_t<void(Player player)> RESET_WANTED_LEVEL_DIFFICULTY;
			extern typed_lazy_func_t<bool(Player player)> HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED;
			extern typed_lazy_func_t<void(Player player, int p1, bool p2)> SPECIAL_ABILITY_CHARGE_ABSOLUTE;
			extern typed_lazy_func_t<void(Player player, int* tintIndex)> GET_PLAYER_PARACHUTE_TINT_INDEX;
			extern typed_lazy_func_t<void(Player player)> _0x9EDD76E87D5D51BA;
			extern typed_lazy_func_t<Any(Player player, bool p2)> REMOVE_PLAYER_HELMET;
			extern typed_lazy_func_t<void(Player player, float multiplier)> SET_PLAYER_NOISE_MULTIPLIER;
			extern typed_lazy_func_t<bool()> IS_PLAYER_LOGGING_IN_NP;
			extern typed_lazy_func_t<void(int value)> SET_PLAYER_CLOTH_LOCK_COUNTER;
			extern typed_lazy_func_t<void(Player player, bool toggle)> _0xDE45D1A1EF45EE61;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_TARGETTING_ANYTHING;
			extern typed_lazy_func_t<void(Player player, float modifier)> SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER;
			extern typed_lazy_func_t<void()> PLAYER_DETACH_VIRTUAL_BOUND;
			extern typed_lazy_func_t<Ped(Player playerid)> GET_PLAYER_PED;
			extern typed_lazy_func_t<void(Player player, bool toggle, int flags)> SET_PLAYER_CONTROL;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_FREE_FOR_AMBIENT_TASK;
			extern typed_lazy_func_t<int(int wantedLevel)> GET_WANTED_LEVEL_THRESHOLD;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_DEAD;
			extern typed_lazy_func_t<Any(Player player, bool toggle)> SET_PLAYER_CAN_USE_COVER;
			extern typed_lazy_func_t<void(Player player, float multiplier)> SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER;
			extern typed_lazy_func_t<bool(Player player)> _0x5FC472C501CCADB3;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_RIDING_TRAIN;
			extern typed_lazy_func_t<int(Player player)> GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE;
			extern typed_lazy_func_t<void(float x, float y, float z)> _EXPAND_WORLD_LIMITS;
			extern typed_lazy_func_t<void(int p0)> _0x5702B917B99DB1CD;
			extern typed_lazy_func_t<void(Player player, int value)> SET_PLAYER_MAX_ARMOUR;
			extern typed_lazy_func_t<bool(Ped p0)> _0x690A61A6D13583F6;
			extern typed_lazy_func_t<void(bool p0)> _0x2F7CEB6520288061;
			extern typed_lazy_func_t<void(Player p0)> _0x5501B7A5CDB79D37;
			extern typed_lazy_func_t<bool(Player player, Entity* entity)> GET_PLAYER_TARGET_ENTITY;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_SPRINT;
			extern typed_lazy_func_t<int()> GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP;
			extern typed_lazy_func_t<void(Player player, int tintIndex)> SET_PLAYER_PARACHUTE_PACK_TINT_INDEX;
			extern typed_lazy_func_t<bool(Player player, bool atArresting)> IS_PLAYER_BEING_ARRESTED;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_INVINCIBLE;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_EVERYONE_IGNORE_PLAYER;
			extern typed_lazy_func_t<void(float multiplier)> SET_WANTED_LEVEL_MULTIPLIER;
			extern typed_lazy_func_t<void(Player player)> SPECIAL_ABILITY_RESET;
			extern typed_lazy_func_t<bool()> IS_PLAYER_TELEPORT_ACTIVE;
			extern typed_lazy_func_t<int(Player player)> GET_PLAYER_MAX_ARMOUR;
			extern typed_lazy_func_t<int()> GET_TIME_SINCE_LAST_ARREST;
			extern typed_lazy_func_t<void(Player player, bool p1)> SPECIAL_ABILITY_FILL_METER;
			extern typed_lazy_func_t<bool(Hash playerModel)> IS_SPECIAL_ABILITY_UNLOCKED;
			extern typed_lazy_func_t<bool(Player player, int p1)> _0xF10B44FD479D69F3;
			extern typed_lazy_func_t<Player()> GET_PLAYER_INDEX;
			extern typed_lazy_func_t<void(Player player)> CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED;
			extern typed_lazy_func_t<void(Player player, bool p1)> SPECIAL_ABILITY_DEPLETE_METER;
			extern typed_lazy_func_t<void(Player player)> CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE;
			extern typed_lazy_func_t<void(Player Player, Ped ped, bool b2, bool b3)> CHANGE_PLAYER_PED;
			extern typed_lazy_func_t<void(Player player)> CLEAR_PLAYER_WANTED_LEVEL;
			extern typed_lazy_func_t<float(Player player)> GET_PLAYER_SPRINT_STAMINA_REMAINING;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_LOCKON;
			extern typed_lazy_func_t<void(Player player)> SPECIAL_ABILITY_DEACTIVATE;
			extern typed_lazy_func_t<bool()> _0xB9CF1F793A9F1BF1;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_FORCE_SKIP_AIM_INTRO;
			extern typed_lazy_func_t<void(Player player, bool toggle)> DISABLE_PLAYER_FIRING;
			extern typed_lazy_func_t<void(Player player, int p1, Any p2, Any p3, bool p4)> SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE;
		} /* PLAYER */
		namespace AUDIO {
			extern typed_lazy_func_t<bool()> IS_MOBILE_PHONE_CALL_ONGOING;
			extern typed_lazy_func_t<void()> PLAY_STREAM_FRONTEND;
			extern typed_lazy_func_t<void(Any* p0)> OVERRIDE_TREVOR_RAGE;
			extern typed_lazy_func_t<void(int newsStory)> UNLOCK_MISSION_NEWS_STORY;
			extern typed_lazy_func_t<void(Any p0)> _0xA5F377B175A699C5;
			extern typed_lazy_func_t<Any()> _0x5B50ABB1FE3746F4;
			extern typed_lazy_func_t<void(bool p0, bool p1, bool p2, bool p3)> START_SCRIPT_CONVERSATION;
			extern typed_lazy_func_t<void(Ped ped, const char* speechName, const char* speechParam)> _PLAY_AMBIENT_SPEECH1;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _SOUND_VEHICLE_HORN_THIS_FRAME;
			extern typed_lazy_func_t<void(bool stop)> STOP_ALL_ALARMS;
			extern typed_lazy_func_t<bool(Ped ped)> IS_ANY_SPEECH_PLAYING;
			extern typed_lazy_func_t<int()> GET_AUDIBLE_MUSIC_TRACK_TEXT_ID;
			extern typed_lazy_func_t<void(const char* radioStation, const char* p1)> _0x031ACB6ABA18C729;
			extern typed_lazy_func_t<void(const char* alarmName, bool toggle)> STOP_ALARM;
			extern typed_lazy_func_t<void(const char* ringtoneName, Ped ped, bool p2)> PLAY_PED_RINGTONE;
			extern typed_lazy_func_t<bool()> IS_MISSION_COMPLETE_PLAYING;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> HINT_SCRIPT_AUDIO_BANK;
			extern typed_lazy_func_t<void(Ped p0, const char* speechName, const char* voiceName, const char* speechParam, bool p4)> _PLAY_AMBIENT_SPEECH_WITH_VOICE;
			extern typed_lazy_func_t<int()> _MAX_RADIO_STATION_INDEX;
			extern typed_lazy_func_t<void(bool toggle)> SET_AGGRESSIVE_HORNS;
			extern typed_lazy_func_t<void(Ped ped)> PLAY_STREAM_FROM_PED;
			extern typed_lazy_func_t<bool(const char* eventName)> TRIGGER_MUSIC_EVENT;
			extern typed_lazy_func_t<void()> CLEAR_ALL_BROKEN_GLASS;
			extern typed_lazy_func_t<void(const char* p0, const char* soundset)> _0xCADA5A0D0702381E;
			extern typed_lazy_func_t<void(const char* emitterName, const char* radioStation)> SET_EMITTER_RADIO_STATION;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _0x5DB8010EE71FDEF2;
			extern typed_lazy_func_t<void(Any p0, Any ped, const char* p2)> ADD_PED_TO_CONVERSATION;
			extern typed_lazy_func_t<void(const char* name, float p1)> _0x733ADF241531E5C2;
			extern typed_lazy_func_t<void()> SKIP_RADIO_FORWARD;
			extern typed_lazy_func_t<void(Vehicle vehicle)> BLIP_SIREN;
			extern typed_lazy_func_t<void(bool active)> SET_GPS_ACTIVE;
			extern typed_lazy_func_t<Any()> _0xC8B1B2425604CDD0;
			extern typed_lazy_func_t<int(int netId)> GET_SOUND_ID_FROM_NETWORK_ID;
			extern typed_lazy_func_t<void(bool active)> SET_FRONTEND_RADIO_ACTIVE;
			extern typed_lazy_func_t<bool(const char* alarmName)> IS_ALARM_PLAYING;
			extern typed_lazy_func_t<Any()> _0x3A48AB4445D499BE;
			extern typed_lazy_func_t<void(bool p0, bool p1)> START_SCRIPT_PHONE_CONVERSATION;
			extern typed_lazy_func_t<bool(const char* p0, bool p1)> REQUEST_SCRIPT_AUDIO_BANK;
			extern typed_lazy_func_t<void(const char* p0)> _0xD01005D2BA2EB778;
			extern typed_lazy_func_t<void(const char* radioStation)> UNFREEZE_RADIO_STATION;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> DISABLE_PED_PAIN_AUDIO;
			extern typed_lazy_func_t<Any()> GET_MUSIC_PLAYTIME;
			extern typed_lazy_func_t<void(bool p0, bool p1)> _0x58BB377BEC7CD5F4;
			extern typed_lazy_func_t<void(float p0, float p1)> _0x149AEE66F0CB3A99;
			extern typed_lazy_func_t<void(float p0, float p1)> _0x8BF907833BE275DE;
			extern typed_lazy_func_t<void()> RELEASE_MISSION_AUDIO_BANK;
			extern typed_lazy_func_t<bool(Ped ped, const char* speechName, bool unk)> _CAN_PED_SPEAK;
			extern typed_lazy_func_t<void(Vehicle vehicle, int p1)> PLAY_VEHICLE_DOOR_OPEN_SOUND;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3)> _0x33E3C6C6F2F0B506;
			extern typed_lazy_func_t<void(Player soundId, const char* audioName, const char* audioRef, bool p3, Any p4, bool p5)> PLAY_SOUND;
			extern typed_lazy_func_t<void(Ped ped)> _SET_PED_MUTE;
			extern typed_lazy_func_t<void(bool state)> SET_MOBILE_PHONE_RADIO_STATE;
			extern typed_lazy_func_t<bool()> IS_RADIO_RETUNING;
			extern typed_lazy_func_t<int(int soundId)> GET_NETWORK_ID_FROM_SOUND_ID;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _0xC15907D667F7CFB2;
			extern typed_lazy_func_t<bool(const char* eventName)> CANCEL_MUSIC_EVENT;
			extern typed_lazy_func_t<Hash(Vehicle vehicle)> GET_VEHICLE_DEFAULT_HORN;
			extern typed_lazy_func_t<void()> _0x806058BBDC136E06;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x892B6AB8F33606F5;
			extern typed_lazy_func_t<void(Ped playerPed, Hash p1)> _0x7CDC8C3B89F661B3;
			extern typed_lazy_func_t<void(const char* flagName, bool toggle)> SET_AUDIO_FLAG;
			extern typed_lazy_func_t<void(const char* stationName)> SET_RADIO_TO_STATION_NAME;
			extern typed_lazy_func_t<void(bool toggle)> SET_USER_RADIO_CONTROL_ENABLED;
			extern typed_lazy_func_t<int()> GET_STREAM_PLAY_TIME;
			extern typed_lazy_func_t<Any(Any* p0)> _0xAA19F5572C38B564;
			extern typed_lazy_func_t<void(int soundId, const char* audioName, const char* audioRef, bool p3)> PLAY_SOUND_FRONTEND;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any* p2)> _0xEE066C7006C49C0A;
			extern typed_lazy_func_t<Any()> GET_PLAYER_RADIO_STATION_GENRE;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0x59E7B488451F4D3A;
			extern typed_lazy_func_t<void(Entity p0, const char* p1, float p2)> _DYNAMIC_MIXER_RELATED_FN;
			extern typed_lazy_func_t<void(const char* p0, const char* p1, float p2, float p3, float p4, const char* p5)> _PLAY_AMBIENT_SPEECH_AT_COORDS;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xA5342D390CDA41D6;
			extern typed_lazy_func_t<bool(Any p0)> _0xC265DF9FB44A9FBD;
			extern typed_lazy_func_t<bool(Any p0)> PLAY_SYNCHRONIZED_AUDIO_EVENT;
			extern typed_lazy_func_t<void()> _DISABLE_POLICE_REPORTS;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x2BE4BC731D039D5A;
			extern typed_lazy_func_t<bool(const char* scene)> IS_AUDIO_SCENE_ACTIVE;
			extern typed_lazy_func_t<void(const char* radioStation)> SET_INITIAL_PLAYER_STATION;
			extern typed_lazy_func_t<bool()> _0x109697E2FFBAC8A1;
			extern typed_lazy_func_t<Any()> _0xA097AB275061FB21;
			extern typed_lazy_func_t<void()> _0x062D5EAD4DA2FA6A;
			extern typed_lazy_func_t<void(const char* p0)> _0xB4BBFD9CD8B3922B;
			extern typed_lazy_func_t<void(int soundId)> RELEASE_SOUND_ID;
			extern typed_lazy_func_t<bool(int soundId)> HAS_SOUND_FINISHED;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_CURRENT_CONVERSATION;
			extern typed_lazy_func_t<void(Ped animal, int mood)> SET_ANIMAL_MOOD;
			extern typed_lazy_func_t<void(const char* emitterName, bool toggle)> SET_STATIC_EMITTER_ENABLED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x6FDDAD856E36988A;
			extern typed_lazy_func_t<void(bool p0, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3)> SET_MICROPHONE_POSITION;
			extern typed_lazy_func_t<void(Any* p0, bool p1)> OVERRIDE_UNDERWATER_STREAM;
			extern typed_lazy_func_t<bool(const char* streamName, const char* soundSet)> LOAD_STREAM;
			extern typed_lazy_func_t<void(const char* audioName)> PLAY_MISSION_COMPLETE_AUDIO;
			extern typed_lazy_func_t<void(const char* audioBank)> RELEASE_NAMED_SCRIPT_AUDIO_BANK;
			extern typed_lazy_func_t<void(Ped ped, int painID, int p1)> PLAY_PAIN;
			extern typed_lazy_func_t<void(float x, float y, float z)> SPECIAL_FRONTEND_EQUAL;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_IS_DRUNK;
			extern typed_lazy_func_t<Any()> _0x6F259F82D873B8B8;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x06C0023BED16DD6B;
			extern typed_lazy_func_t<void()> CREATE_NEW_SCRIPTED_CONVERSATION;
			extern typed_lazy_func_t<void(const char* radioStation)> _0x1654F24A88A8E3FE;
			extern typed_lazy_func_t<int(int station)> FIND_RADIO_STATION_INDEX;
			extern typed_lazy_func_t<void()> STOP_STREAM;
			extern typed_lazy_func_t<void(const char* radioStation)> FREEZE_RADIO_STATION;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _IS_VEHICLE_RADIO_LOUD;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0xFBE20329593DEC9D;
			extern typed_lazy_func_t<Hash(Vehicle vehicle)> _GET_VEHICLE_HORN_HASH;
			extern typed_lazy_func_t<void(bool p0)> _0xBEF34B1D9624D5DD;
			extern typed_lazy_func_t<void()> START_PRELOADED_CONVERSATION;
			extern typed_lazy_func_t<void(const char* p0)> _0xDDC635D5B3262C56;
			extern typed_lazy_func_t<void(int p0, const char* p1, const char* p2, int p3, int p4, bool p5, bool p6, bool p7, bool p8, int p9, bool p10, bool p11, bool p12)> ADD_LINE_TO_CONVERSATION;
			extern typed_lazy_func_t<void(bool p0, bool p1, bool p2, bool p3)> PRELOAD_SCRIPT_CONVERSATION;
			extern typed_lazy_func_t<int()> GET_PLAYER_RADIO_STATION_INDEX;
			extern typed_lazy_func_t<void(const char* ambientZone, bool p1, bool p2)> SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT;
			extern typed_lazy_func_t<void(const char* scene)> STOP_AUDIO_SCENE;
			extern typed_lazy_func_t<bool()> IS_MOBILE_PHONE_RADIO_ACTIVE;
			extern typed_lazy_func_t<bool()> _IS_PLAYER_VEHICLE_RADIO_ENABLED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x75773E11BA459E90;
			extern typed_lazy_func_t<void()> _0xD57AAAE0E2214D11;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE;
			extern typed_lazy_func_t<void(const char* p0, float p1)> SET_VARIABLE_ON_STREAM;
			extern typed_lazy_func_t<void(Ped playerPed, bool disabled)> SET_PLAYER_ANGRY;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xF3365489E0DD50F9;
			extern typed_lazy_func_t<bool(const char* scene)> START_AUDIO_SCENE;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xD2CC78CD3D0B50F9;
			extern typed_lazy_func_t<Any(bool p0)> STOP_SCRIPTED_CONVERSATION;
			extern typed_lazy_func_t<void()> SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_HORN_ACTIVE;
			extern typed_lazy_func_t<void(Object object)> PLAY_STREAM_FROM_OBJECT;
			extern typed_lazy_func_t<const char*()> GET_PLAYER_RADIO_STATION_NAME;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0x01BB4D577D38BD9E;
			extern typed_lazy_func_t<void(Any p0, bool p1, Any p2)> _0xBF4DC1784BE94DFA;
			extern typed_lazy_func_t<void(Ped p0, const char* p1, const char* p2)> _0x8A694D7A68F8DC38;
			extern typed_lazy_func_t<void(int soundId, const char* audioName, float x, float y, float z, const char* audioRef, bool p6, int range, bool p8)> PLAY_SOUND_FROM_COORD;
			extern typed_lazy_func_t<int(Any p0)> GET_NUMBER_OF_PASSENGER_VOICE_VARIATIONS;
			extern typed_lazy_func_t<void(const char* radioStation, const char* p1, bool p2)> _0x4E404A9361F75BB2;
			extern typed_lazy_func_t<void(Any* p0, bool p1, bool p2)> SET_AMBIENT_ZONE_STATE;
			extern typed_lazy_func_t<void(Object* vehicle, ScrHandle* toggle)> SET_SIREN_WITH_NO_DRIVER;
			extern typed_lazy_func_t<void(bool p0)> _0xB542DE8C3D1CB210;
			extern typed_lazy_func_t<void()> RELEASE_SCRIPT_AUDIO_BANK;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0x9D3AF56E94C9AE98;
			extern typed_lazy_func_t<void(bool value)> _FORCE_AMBIENT_SIREN;
			extern typed_lazy_func_t<Any()> _0x544810ED9DB6BBE6;
			extern typed_lazy_func_t<Any()> GET_CURRENT_SCRIPTED_CONVERSATION_LINE;
			extern typed_lazy_func_t<void(bool Toggle)> SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0x18EB48CFC41F2EA0;
			extern typed_lazy_func_t<void(float p0)> _0x2C96CDB04FCA358E;
			extern typed_lazy_func_t<void(Ped ped, bool shaking)> STOP_PED_SPEAKING;
			extern typed_lazy_func_t<void(Ped ped)> RESET_PED_AUDIO_FLAGS;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _0xC1805D05E6D4FE10;
			extern typed_lazy_func_t<void(const char* p0, bool p1, bool p2)> SET_AMBIENT_ZONE_LIST_STATE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool mute, int p2)> OVERRIDE_VEH_HORN;
			extern typed_lazy_func_t<void(bool p0)> _0x02E93C796ABD3A97;
			extern typed_lazy_func_t<void(Any p0)> _0xD2DCCD8E16E20997;
			extern typed_lazy_func_t<void(bool p0, Any p1)> _0x70B8EC8FC108A634;
			extern typed_lazy_func_t<void(const char* p0)> SET_CUTSCENE_AUDIO_OVERRIDE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_AMBIENT_SPEECH_DISABLED;
			extern typed_lazy_func_t<void(const char* alarmName, bool p2)> START_ALARM;
			extern typed_lazy_func_t<void(bool p0)> PAUSE_SCRIPTED_CONVERSATION;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2)> INTERRUPT_CONVERSATION;
			extern typed_lazy_func_t<void()> _0x19AF7ED9B9D23058;
			extern typed_lazy_func_t<void(int soundId, const char* variableName, float value)> SET_VARIABLE_ON_SOUND;
			extern typed_lazy_func_t<bool(Any p0)> IS_SCRIPTED_SPEECH_PLAYING;
			extern typed_lazy_func_t<void(Vehicle vehicle)> PLAY_STREAM_FROM_VEHICLE;
			extern typed_lazy_func_t<void()> _0x9AC92EED5E4793AB;
			extern typed_lazy_func_t<void(int soundId, const char* audioName, Entity entity, const char* audioRef, bool p4, Any p5)> PLAY_SOUND_FROM_ENTITY;
			extern typed_lazy_func_t<void(Any* p0, bool p1)> CLEAR_AMBIENT_ZONE_LIST_STATE;
			extern typed_lazy_func_t<void(const char* p0, const char* p1)> _0x044DBAD7A7FA2BE5;
			extern typed_lazy_func_t<void()> UNREGISTER_SCRIPT_WITH_AUDIO;
			extern typed_lazy_func_t<void(const char* zoneName, bool p1)> CLEAR_AMBIENT_ZONE_STATE;
			extern typed_lazy_func_t<void()> STOP_AUDIO_SCENES;
			extern typed_lazy_func_t<void(int radioStation)> SET_RADIO_TO_STATION_INDEX;
			extern typed_lazy_func_t<void(const char* p0, float p1)> GET_PLAYER_HEADSET_SOUND_ALTERNATE;
			extern typed_lazy_func_t<void(bool p0)> _0x0B568201DD99F0EB;
			extern typed_lazy_func_t<bool()> IS_SCRIPTED_CONVERSATION_LOADED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_HORN_ENABLED;
			extern typed_lazy_func_t<void(const char* p0, Entity p1)> _SET_SYNCHRONIZED_AUDIO_EVENT_POSITION_THIS_FRAME;
			extern typed_lazy_func_t<void()> _0xFF266D1D0EB1195D;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_RINGTONE_PLAYING;
			extern typed_lazy_func_t<void(int p0)> REGISTER_SCRIPT_WITH_AUDIO;
			extern typed_lazy_func_t<void(Ped ped)> STOP_CURRENT_PLAYING_AMBIENT_SPEECH;
			extern typed_lazy_func_t<bool()> IS_STREAM_PLAYING;
			extern typed_lazy_func_t<void()> RESTART_SCRIPTED_CONVERSATION;
			extern typed_lazy_func_t<void(int soundId)> STOP_SOUND;
			extern typed_lazy_func_t<void(Ped ped, const char* speechName, const char* speechParam)> _PLAY_AMBIENT_SPEECH2;
			extern typed_lazy_func_t<void(Ped ped)> _SET_PED_SCREAM;
			extern typed_lazy_func_t<void(bool toggle)> SET_RADIO_AUTO_UNFREEZE;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x1C073274E065C6D2;
			extern typed_lazy_func_t<bool(const char* p0, bool p1)> REQUEST_MISSION_AUDIO_BANK;
			extern typed_lazy_func_t<void(Vehicle vehicle, const char* radioStation)> SET_VEH_RADIO_STATION;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_RADIO_LOUD;
			extern typed_lazy_func_t<bool(const char* streamName, int startOffset, const char* soundSet)> LOAD_STREAM_WITH_START_OFFSET;
			extern typed_lazy_func_t<void(Vehicle vehicle, const char* audioName)> _FORCE_VEHICLE_ENGINE_AUDIO;
			extern typed_lazy_func_t<void(Ped ped)> STOP_PED_RINGTONE;
			extern typed_lazy_func_t<void()> RESET_TREVOR_RAGE;
			extern typed_lazy_func_t<void(bool play)> PLAY_END_CREDITS_MUSIC;
			extern typed_lazy_func_t<bool(Any p0)> STOP_SYNCHRONIZED_AUDIO_EVENT;
			extern typed_lazy_func_t<void()> _0x0150B6FF25A9E2E5;
			extern typed_lazy_func_t<void()> RELEASE_AMBIENT_AUDIO_BANK;
			extern typed_lazy_func_t<void(Any p0, const char* p1, const char* p2)> _0xF1F8157B8C3F171C;
			extern typed_lazy_func_t<bool()> IS_GAME_IN_CONTROL_OF_MUSIC;
			extern typed_lazy_func_t<bool(const char* ambientZone)> IS_AMBIENT_ZONE_ENABLED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool Toggle)> SET_VEHICLE_BOOST_ACTIVE;
			extern typed_lazy_func_t<void(Ped ped)> _SET_PED_TALK;
			extern typed_lazy_func_t<int()> GET_SOUND_ID;
			extern typed_lazy_func_t<void(Ped ped, const char* name)> SET_AMBIENT_VOICE_NAME;
			extern typed_lazy_func_t<void()> _0xDD6BCF9E94425DF9;
			extern typed_lazy_func_t<void(Vehicle vehicle, int p1)> PLAY_VEHICLE_DOOR_CLOSE_SOUND;
			extern typed_lazy_func_t<bool(const char* eventName)> PREPARE_MUSIC_EVENT;
			extern typed_lazy_func_t<void(int p0)> _0x12561FCBB62D5B9C;
			extern typed_lazy_func_t<Any(const char* p0, Any p1)> PREPARE_SYNCHRONIZED_AUDIO_EVENT;
			extern typed_lazy_func_t<bool(Ped p0)> IS_AMBIENT_SPEECH_PLAYING;
			extern typed_lazy_func_t<const char*(int radioStation)> GET_RADIO_STATION_NAME;
			extern typed_lazy_func_t<Any()> _0x0626A247D2405330;
			extern typed_lazy_func_t<void(const char* radioStation, const char* radioTrack)> SET_RADIO_TRACK;
			extern typed_lazy_func_t<void(const char* scene, const char* variable, float value)> SET_AUDIO_SCENE_VARIABLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x43FA0DFC5DF87815;
			extern typed_lazy_func_t<void(bool p0)> _0x61631F5DF50D1C34;
			extern typed_lazy_func_t<void(const char* radioStation, bool p1)> _0x774BD811F656A122;
			extern typed_lazy_func_t<void(bool p0)> _0xF154B8D1775B2DEC;
			extern typed_lazy_func_t<void(bool p0, bool p1)> PRELOAD_SCRIPT_PHONE_CONVERSATION;
			extern typed_lazy_func_t<Any(const char* name, float p1)> PLAY_POLICE_REPORT;
			extern typed_lazy_func_t<void(Vehicle vehicle, Any p1)> SET_AUDIO_VEHICLE_PRIORITY;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> USE_SIREN_AS_HORN;
			extern typed_lazy_func_t<Any()> AUDIO_IS_SCRIPTED_MUSIC_PLAYING;
			extern typed_lazy_func_t<bool(const char* alarmName)> PREPARE_ALARM;
			extern typed_lazy_func_t<bool(const char* p0, bool p1)> REQUEST_AMBIENT_AUDIO_BANK;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> HINT_AMBIENT_AUDIO_BANK;
			extern typed_lazy_func_t<Any()> _0xE73364DB90778FFA;
			extern typed_lazy_func_t<void(Any* p0, float p1, float p2, float p3)> _0xC8EDE9BDBCCBA6D4;
			extern typed_lazy_func_t<void()> _0xE4E6DD5566D28C82;
			extern typed_lazy_func_t<bool()> IS_SCRIPTED_CONVERSATION_ONGOING;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_RADIO_ENABLED;
			extern typed_lazy_func_t<void(const char* ambientZone, bool p1, bool p2)> SET_AMBIENT_ZONE_STATE_PERSISTENT;
		} /* AUDIO */
		namespace UNK3 {
			extern typed_lazy_func_t<bool(Any* p0)> _0x0395CB47B022E62C;
			extern typed_lazy_func_t<bool()> _NETWORK_SHOP_GET_TRANSACTIONS_DISABLED;
			extern typed_lazy_func_t<Any()> _0x85F6C9ABA1DE2BCF;
			extern typed_lazy_func_t<bool(int* transactionID, Hash p1, Hash transactionHash, int amount, Hash p4, int mode)> _NETWORK_SHOP_BEGIN_SERVICE;
			extern typed_lazy_func_t<bool()> _NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED;
			extern typed_lazy_func_t<bool(Any p0)> _NETWORK_SHOP_START_SESSION;
			extern typed_lazy_func_t<bool()> _0x72EB7BA9B69BF6AB;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> _0x897433D292B44130;
			extern typed_lazy_func_t<Any()> _NETWORK_SHOP_BASKET_IS_FULL;
			extern typed_lazy_func_t<const char*()> _GET_ONLINE_VERSION;
			extern typed_lazy_func_t<bool()> _NETWORK_SHOP_BASKET_END;
			extern typed_lazy_func_t<bool(int transactionID)> _NETWORK_SHOP_CHECKOUT_START;
			extern typed_lazy_func_t<bool(int transactionID)> _NETWORK_SHOP_TERMINATE_SERVICE;
			extern typed_lazy_func_t<int(Hash hash, Hash hash2, bool p2)> _NETWORK_SHOP_GET_PRICE;
			extern typed_lazy_func_t<Any()> _0xE3E5A7C64CA2C6ED;
			extern typed_lazy_func_t<bool(Any* p0)> _0x170910093218C8B9;
			extern typed_lazy_func_t<int(int p0)> _0x74A0FD0688F1EE45;
			extern typed_lazy_func_t<bool(Any* p0, int p1, int p2, int p3)> _NETWORK_SHOP_BASKET_START;
			extern typed_lazy_func_t<bool(int charStatInt, int amount)> _NETWORK_TRANSFER_WALLET_TO_BANK;
			extern typed_lazy_func_t<Any()> _0x23789E777D14CE44;
			extern typed_lazy_func_t<bool(Any p0, bool p1, Any p2)> _0x51F1A8E48C3D2F6D;
			extern typed_lazy_func_t<Any()> _NETWORK_SHOP_DELETE_SET_TELEMETRY_NONCE_SEED;
			extern typed_lazy_func_t<Any()> _0x3C4487461E9B0DCB;
			extern typed_lazy_func_t<Any()> _0x357B152EF96C30B6;
			extern typed_lazy_func_t<bool(Any* p0)> _0xC13C38E47EA5DF31;
			extern typed_lazy_func_t<bool(Any* p0, Any p1)> _NETWORK_SHOP_BASKET_ADD_ITEM;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> _NETWORK_SHOP_BASKET_APPLY_SERVER_DATA;
			extern typed_lazy_func_t<bool(int mpChar)> _NETWORK_SHOP_GET_TRANSACTIONS_ENABLED_FOR_CHARACTER;
			extern typed_lazy_func_t<bool(bool p0, bool p1)> _0x35A1B3E1D1315CFA;
			extern typed_lazy_func_t<bool(int charStatInt, int amount)> _NETWORK_TRANSFER_BANK_TO_WALLET;
			extern typed_lazy_func_t<bool(Any p0)> _NETWORK_SHOP_SET_TELEMETRY_NONCE_SEED;
			extern typed_lazy_func_t<Any()> _0x2B949A1E6AEC8F6A;
			extern typed_lazy_func_t<bool(Any* p0)> _0xCF38DAFBB49EDE5E;
			extern typed_lazy_func_t<bool(Any p0)> _NETWORK_SHOP_SESSION_APPLY_RECEIVED_DATA;
			extern typed_lazy_func_t<Any()> _0x0A6D923DFFC9BD89;
			extern typed_lazy_func_t<Any()> _0x350AA5EBC03D3BD2;
		} /* UNK3 */
		namespace TIME {
			extern typed_lazy_func_t<void(int hour, int minute, int second)> ADVANCE_CLOCK_TIME_TO;
			extern typed_lazy_func_t<int()> GET_CLOCK_DAY_OF_WEEK;
			extern typed_lazy_func_t<int()> GET_CLOCK_MONTH;
			extern typed_lazy_func_t<void(int* year, int* month, int* day, int* hour, int* minute, int* second)> GET_POSIX_TIME;
			extern typed_lazy_func_t<void(int hours, int minutes, int seconds)> ADD_TO_CLOCK_TIME;
			extern typed_lazy_func_t<int()> GET_CLOCK_YEAR;
			extern typed_lazy_func_t<int()> GET_MILLISECONDS_PER_GAME_MINUTE;
			extern typed_lazy_func_t<void(int* year, int* month, int* day, int* hour, int* minute, int* second)> _GET_UTC_TIME;
			extern typed_lazy_func_t<int()> GET_CLOCK_DAY_OF_MONTH;
			extern typed_lazy_func_t<void(int* year, int* month, int* day, int* hour, int* minute, int* second)> GET_LOCAL_TIME;
			extern typed_lazy_func_t<void(int day, int month, int year)> SET_CLOCK_DATE;
			extern typed_lazy_func_t<void(int hour, int minute, int second)> SET_CLOCK_TIME;
			extern typed_lazy_func_t<void(bool toggle)> PAUSE_CLOCK;
			extern typed_lazy_func_t<int()> GET_CLOCK_HOURS;
			extern typed_lazy_func_t<int()> GET_CLOCK_MINUTES;
			extern typed_lazy_func_t<int()> GET_CLOCK_SECONDS;
		} /* TIME */
		namespace NETWORKCASH {
			extern typed_lazy_func_t<bool(Any p0, bool p1, bool p2, bool p3, Any p4)> NETWORK_CAN_SPEND_MONEY;
			extern typed_lazy_func_t<void(int cost, bool p1, bool p2)> NETWORK_BUY_HELI_STRIKE;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_TELESCOPE;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> _NETWORK_SPENT_REQUEST_HEIST;
			extern typed_lazy_func_t<float*(Any p0)> _0x6FCF8DDEA146C45B;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any* p2, bool p3, bool p4)> NETWORK_SPENT_BETTING;
			extern typed_lazy_func_t<void(Any p0, Any p1, bool p2, bool p3)> NETWORK_SPENT_PLAYER_HEALTHCARE;
			extern typed_lazy_func_t<void(Any p0)> NETWORK_CLEAR_CHARACTER_WALLET;
			extern typed_lazy_func_t<void(Any p0, Any p1)> NETWORK_EARN_FROM_AI_TARGET_KILL;
			extern typed_lazy_func_t<void(int amount)> NETWORK_EARN_FROM_NOT_BADSPORT;
			extern typed_lazy_func_t<void(int p0, const char* p1, Any* p2)> _NETWORK_EARN_FROM_AMBIENT_JOB;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2)> _NETWORK_EARN_FROM_JOB_BONUS;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_PAY_UTILITY_BILL;
			extern typed_lazy_func_t<void(int amountSpent, Any p1, bool p2, bool p3)> NETWORK_BUY_FAIRGROUND_RIDE;
			extern typed_lazy_func_t<bool()> _0x7C4FCCD2E4DEB394;
			extern typed_lazy_func_t<void(int value, int* networkHandle)> NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH;
			extern typed_lazy_func_t<Any(int amount)> NETWORK_EARN_FROM_PICKUP;
			extern typed_lazy_func_t<void(int amount, Hash propertyName)> NETWORK_EARN_FROM_PROPERTY;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_BOAT_PICKUP;
			extern typed_lazy_func_t<const char*(int* p0, int* p1, const char* p2)> PROCESS_CASH_GIFT;
			extern typed_lazy_func_t<bool(Any p0)> _0xE154B48B68EF72BC;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_CAN_BET;
			extern typed_lazy_func_t<void(Any p0, Any p1)> NETWORK_EARN_FROM_IMPORT_EXPORT;
			extern typed_lazy_func_t<void(int amount)> NETWORK_EARN_FROM_HOLDUPS;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_AMMO_DROP;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_HIRE_MERCENARY;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any p3)> NETWORK_CAN_RECEIVE_PLAYER_CASH;
			extern typed_lazy_func_t<void(int amount)> _NETWORK_EARN_FROM_GANG_PICKUP;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_HIRE_MUGGER;
			extern typed_lazy_func_t<bool(Any p0)> _0xE260E0BB9CD995AC;
			extern typed_lazy_func_t<void(int amount, const char* p1)> NETWORK_EARN_FROM_JOB;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8)> NETWORK_EARN_FROM_PERSONAL_VEHICLE;
			extern typed_lazy_func_t<void(int amount, bool p1, bool p2)> NETWORK_SPENT_ROBBED_BY_MUGGER;
			extern typed_lazy_func_t<void(int amount, Hash vehicleModel, int* networkHandle, bool notBankrupt, bool hasTheMoney)> NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_NO_COPS;
			extern typed_lazy_func_t<void(int amount, bool p1, bool p2)> NETWORK_SPENT_TAXI;
			extern typed_lazy_func_t<void(Any p0, Any* p1, bool p2, bool p3)> NETWORK_SPENT_CALL_PLAYER;
			extern typed_lazy_func_t<int()> NETWORK_GET_VC_BALANCE;
			extern typed_lazy_func_t<void(int amount, Player victim, bool p2, bool p3)> NETWORK_BUY_BOUNTY;
			extern typed_lazy_func_t<void(int amount, bool p1, bool p2)> NETWORK_SPENT_CASH_DROP;
			extern typed_lazy_func_t<void(Any p0, Any p1, bool p2, bool p3)> NETWORK_SPENT_CINEMA;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_HOLDUPS;
			extern typed_lazy_func_t<void(int bank, bool p1, bool p2)> NETWORK_SPENT_FROM_ROCKSTAR;
			extern typed_lazy_func_t<int(int character)> NETWORK_GET_VC_WALLET_BALANCE;
			extern typed_lazy_func_t<void(int value, int* p1, bool p2, bool p3)> NETWORK_PAY_MATCH_ENTRY_FEE;
			extern typed_lazy_func_t<void(Any p0, Any* p1, bool p2, bool p3)> NETWORK_SPENT_BUY_WANTEDLEVEL;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_BUY_OFFTHERADAR;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_BUY_REVEAL_PLAYERS;
			extern typed_lazy_func_t<int()> NETWORK_GET_VC_BANK_BALANCE;
			extern typed_lazy_func_t<void(int amount, const char* heistHash)> NETWORK_EARN_FROM_MISSION_H;
			extern typed_lazy_func_t<bool(Any p0, bool p1, bool p2, bool p3, Any* p4, Any p5)> _0x7303E27CC6532080;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_PAY_EMPLOYEE_WAGE;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, bool p3, bool p4)> NETWORK_SPENT_CARWASH;
			extern typed_lazy_func_t<void(int amount)> _NETWORK_EARN_FROM_ARMOUR_TRUCK;
			extern typed_lazy_func_t<void(Any p0, Any* p1, bool p2)> NETWORK_EARN_FROM_CHALLENGE_WIN;
			extern typed_lazy_func_t<void(int cost, bool p1, bool p2)> NETWORK_BUY_HEALTHCARE;
			extern typed_lazy_func_t<Any(Any p0)> _0xF70EFA14FE091429;
			extern typed_lazy_func_t<void(int p0, int p1)> NETWORK_INITIALIZE_CASH;
			extern typed_lazy_func_t<void(int characterIndex, bool p1, bool p2)> NETWORK_DELETE_CHARACTER;
			extern typed_lazy_func_t<void(int amount, int* networkHandle)> NETWORK_GIVE_PLAYER_JOBSHARE_CASH;
			extern typed_lazy_func_t<bool(Any p0, bool p1, bool p2)> NETWORK_MONEY_CAN_BET;
			extern typed_lazy_func_t<void(int amount, int* networkHandle, Any* p2, Any p3)> NETWORK_EARN_FROM_BOUNTY;
			extern typed_lazy_func_t<void(float propertyCost, Hash propertyName, bool p2, bool p3)> NETWORK_BUY_PROPERTY;
			extern typed_lazy_func_t<void(int index, const char* context, const char* reason, bool unk)> NETWORK_REFUND_CASH;
			extern typed_lazy_func_t<void(int amount)> NETWORK_EARN_FROM_ROCKSTAR;
			extern typed_lazy_func_t<void(int p0, const char* p1, int p2)> _NETWORK_EARN_FROM_DAILY_OBJECTIVE;
			extern typed_lazy_func_t<void(int cost, bool p1, bool p2)> NETWORK_BUY_AIRSTRIKE;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_HELI_PICKUP;
			extern typed_lazy_func_t<void(int amount, const char* p1)> NETWORK_EARN_FROM_BETTING;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_BULL_SHARK;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_REQUEST_JOB;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_BOUNTY;
			extern typed_lazy_func_t<bool(Any p0, Any p1)> _0xDC18531D7019A535;
			extern typed_lazy_func_t<Any()> _0x1C2473301B1C66BA;
			extern typed_lazy_func_t<void(int amount)> NETWORK_EARN_FROM_CRATE_DROP;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7)> NETWORK_EARN_FROM_VEHICLE;
			extern typed_lazy_func_t<void(Ped player, Hash item, Any p2, Any p3, bool p4, const char* item_name, Any p6, Any p7, Any p8, bool p9)> NETWORK_BUY_ITEM;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_PROSTITUTES;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_ARREST_BAIL;
			extern typed_lazy_func_t<void(Any p0, bool p1, Any p2, bool p3)> NETWORK_SPENT_IN_STRIPCLUB;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> NETWORK_SPENT_BUY_PASSIVE_MODE;
			extern typed_lazy_func_t<const char*()> _NETWORK_GET_BANK_BALANCE_STRING;
		} /* NETWORKCASH */
		namespace GAMEPLAY {
			extern typed_lazy_func_t<void(float X, float Y, float Z, float radius, bool p4, bool ignoreCopCars, bool ignoreObjects, bool p7)> CLEAR_AREA;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> _0xA4A0065E39C9F25C;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2, bool ownedByPlayer)> IS_PROJECTILE_IN_AREA;
			extern typed_lazy_func_t<void(int p0, bool p1)> _0x1EAE0A6E978894A2;
			extern typed_lazy_func_t<void(float time)> SET_TIME_SCALE;
			extern typed_lazy_func_t<float(float p0)> ATAN;
			extern typed_lazy_func_t<float(float x1, float y1, float x2, float y2)> GET_ANGLE_BETWEEN_2D_VECTORS;
			extern typed_lazy_func_t<bool()> IS_DURANGO_VERSION;
			extern typed_lazy_func_t<void()> POPULATE_NOW;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> REGISTER_FLOAT_TO_SAVE;
			extern typed_lazy_func_t<bool(int incidentType, float x, float y, float z, int p5, float radius, int* outIncidentID)> CREATE_INCIDENT;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3)> _0x2D4259F1FEB81DA9;
			extern typed_lazy_func_t<void()> CLEAR_OVERRIDE_WEATHER;
			extern typed_lazy_func_t<void(bool toggle)> SET_FADE_IN_AFTER_LOAD;
			extern typed_lazy_func_t<void()> END_REPLAY_STATS;
			extern typed_lazy_func_t<Any()> _0xABB2FA71C83A1B72;
			extern typed_lazy_func_t<bool(float x, float y, float z, float range, bool p4, bool p5, bool p6, bool p7, bool p8, Any p9, bool p10)> IS_POSITION_OCCUPIED;
			extern typed_lazy_func_t<bool(int incidentId)> IS_INCIDENT_VALID;
			extern typed_lazy_func_t<void(int p0, const char* windowTitle, const char* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, int maxInputLength)> DISPLAY_ONSCREEN_KEYBOARD;
			extern typed_lazy_func_t<bool()> IS_THIS_A_MINIGAME_SCRIPT;
			extern typed_lazy_func_t<void()> STOP_SAVE_DATA;
			extern typed_lazy_func_t<void()> CLEAR_WEATHER_TYPE_PERSIST;
			extern typed_lazy_func_t<void(float speed)> SET_WIND_SPEED;
			extern typed_lazy_func_t<void()> _0x7EC6F9A478A6A512;
			extern typed_lazy_func_t<Hash(const char* string)> GET_HASH_KEY;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, bool p4, bool p5, bool p6, bool p7)> _CLEAR_AREA_OF_EVERYTHING;
			extern typed_lazy_func_t<void(Any p0)> _0x69FE6DC87BD2A5E9;
			extern typed_lazy_func_t<void(bool toggle)> SET_FADE_OUT_AFTER_DEATH;
			extern typed_lazy_func_t<bool(const char* string)> IS_STRING_NULL_OR_EMPTY;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> SET_SAVE_HOUSE;
			extern typed_lazy_func_t<void(Any* p0, Any p1, bool p2)> START_SAVE_DATA;
			extern typed_lazy_func_t<bool(Any p0)> _0x17DF68D720AA77F8;
			extern typed_lazy_func_t<void(Any p0)> _0x97E7E2C04245115B;
			extern typed_lazy_func_t<void(const char* weatherType)> SET_WEATHER_TYPE_NOW_PERSIST;
			extern typed_lazy_func_t<void()> _0x437138B6A830166A;
			extern typed_lazy_func_t<bool()> IS_PC_VERSION;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> _0xFAA457EF263E8763;
			extern typed_lazy_func_t<void(int incidentId)> DELETE_INCIDENT;
			extern typed_lazy_func_t<void()> _0x1FF6BF9A63E5757F;
			extern typed_lazy_func_t<void(bool toggle)> _SHOW_PED_IN_PAUSE_MENU;
			extern typed_lazy_func_t<void()> SET_RANDOM_WEATHER_TYPE;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, int flags)> CLEAR_AREA_OF_COPS;
			extern typed_lazy_func_t<bool(bool p0, float p1, float p2, float p3, float p4, bool p5, float p6, float p7)> OVERRIDE_SAVE_HOUSE;
			extern typed_lazy_func_t<void(const char* weatherType)> SET_OVERRIDE_WEATHER;
			extern typed_lazy_func_t<bool(Ped ped, Hash projHash, float radius, Vector3* projPos, Entity* projEnt, bool ownedByPlayer)> _GET_PROJECTILE_NEAR_PED;
			extern typed_lazy_func_t<void(const char* p0)> _0x11B56FBBF7224868;
			extern typed_lazy_func_t<int()> GET_FAKE_WANTED_LEVEL;
			extern typed_lazy_func_t<bool(const char* string)> IS_STRING_NULL;
			extern typed_lazy_func_t<float(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, bool p9)> _0x7F8F6405F4777AF6;
			extern typed_lazy_func_t<bool()> IS_MINIGAME_IN_PROGRESS;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> REGISTER_INT_TO_SAVE;
			extern typed_lazy_func_t<void()> RESET_DISPATCH_IDEAL_SPAWN_DISTANCE;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5, float p6)> _0x918C7B2D2FF3928B;
			extern typed_lazy_func_t<void(float p0)> _0xB8F87EAD7533B176;
			extern typed_lazy_func_t<float(float p0, float p1)> ATAN2;
			extern typed_lazy_func_t<float(float x1, float y1, float z1, float x2, float y2, float z2, bool useZ)> GET_DISTANCE_BETWEEN_COORDS;
			extern typed_lazy_func_t<bool()> _0xA049A5BE0F04F2F8;
			extern typed_lazy_func_t<void()> _0xB3CD58CCA6CDA852;
			extern typed_lazy_func_t<Any()> _0x1B2366C3F2A5C8DF;
			extern typed_lazy_func_t<Any*()> GET_RAIN_LEVEL;
			extern typed_lazy_func_t<int(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13, float p14, Any p15, Any p16)> ADD_STUNT_JUMP;
			extern typed_lazy_func_t<void(Any p0)> REMOVE_DISPATCH_SPAWN_BLOCKING_AREA;
			extern typed_lazy_func_t<void(int p0)> _0x3ED1438C1F5C6612;
			extern typed_lazy_func_t<Any()> _0x2B626A0150E4D449;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, float p6, bool p7)> IS_BULLET_IN_ANGLED_AREA;
			extern typed_lazy_func_t<void(float p0)> SET_DISPATCH_IDEAL_SPAWN_DISTANCE;
			extern typed_lazy_func_t<void(int* var, int rangeStart, int rangeEnd, int p3)> SET_BITS_IN_RANGE;
			extern typed_lazy_func_t<int(int var, int rangeStart, int rangeEnd)> GET_BITS_IN_RANGE;
			extern typed_lazy_func_t<bool(float x, float y, float z, float p3, bool p4, bool p5)> HAS_BULLET_IMPACTED_IN_AREA;
			extern typed_lazy_func_t<void(int type, bool toggle)> _0x9B2BD3773123EA2F;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, bool isNetworkGame)> CLEAR_AREA_OF_PROJECTILES;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int damage, bool p7, Hash weaponHash, Ped ownerPed, bool isAudible, bool isInvisible, float speed)> SHOOT_SINGLE_BULLET_BETWEEN_COORDS;
			extern typed_lazy_func_t<void(bool toggle)> USING_MISSION_CREATOR;
			extern typed_lazy_func_t<bool(Any p0)> _0x1327E2FE9746BAEE;
			extern typed_lazy_func_t<bool(const char* weatherType)> IS_NEXT_WEATHER_TYPE;
			extern typed_lazy_func_t<bool(const char* string, int* outInteger)> STRING_TO_INT;
			extern typed_lazy_func_t<void(int dispatchService, bool toggle)> ENABLE_DISPATCH_SERVICE;
			extern typed_lazy_func_t<void(bool toggle)> SET_CREDITS_ACTIVE;
			extern typed_lazy_func_t<Any()> _0x5AA3BEFA29F03AD4;
			extern typed_lazy_func_t<void(const char* p0, const char* p1)> _0x4DCDF92BF64236CD;
			extern typed_lazy_func_t<float(float p0)> ASIN;
			extern typed_lazy_func_t<void(bool unk)> SET_SAVE_MENU_ACTIVE;
			extern typed_lazy_func_t<void(Any p0, float p1)> SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER;
			extern typed_lazy_func_t<void(int p0, const char* windowTitle, Any* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, const char* defaultConcat4, const char* defaultConcat5, const char* defaultConcat6, const char* defaultConcat7, int maxInputLength)> _DISPLAY_ONSCREEN_KEYBOARD_2;
			extern typed_lazy_func_t<void()> _FORCE_SOCIAL_CLUB_UPDATE;
			extern typed_lazy_func_t<void(float opacity)> _SET_CLOUD_HAT_OPACITY;
			extern typed_lazy_func_t<int(float x, float y, float z, float p3, Any p4)> ADD_HOSPITAL_RESTART;
			extern typed_lazy_func_t<void(bool p0)> _0xD79185689F8FD5DF;
			extern typed_lazy_func_t<bool(Ped ped, Hash projHash, float radius, Vector3* projPos, bool ownedByPlayer)> _GET_PROJECTILE_NEAR_PED_COORDS;
			extern typed_lazy_func_t<void(int flag)> _SET_UNK_MAP_FLAG;
			extern typed_lazy_func_t<void(int level)> SET_GRAVITY_LEVEL;
			extern typed_lazy_func_t<void(float p0)> _0x6216B116083A7CB4;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2)> IS_SNIPER_BULLET_IN_AREA;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2, int type, bool p7)> IS_PROJECTILE_TYPE_IN_AREA;
			extern typed_lazy_func_t<void(Any p0)> SET_RANDOM_EVENT_FLAG;
			extern typed_lazy_func_t<void(float p0)> _0xB3E6360DDE733E82;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, bool p8)> IS_PROJECTILE_TYPE_IN_ANGLED_AREA;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int damage, bool p7, Hash weaponHash, Ped ownerPed, bool isAudible, bool isInvisible, float speed, Entity entity, bool p14, bool p15, bool p16, bool p17)> _SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS;
			extern typed_lazy_func_t<int()> _0x397BAA01068BAA96;
			extern typed_lazy_func_t<Any()> _0x72DE52178C291CB5;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int damage, bool p7, Hash weaponHash, Ped ownerPed, bool isAudible, bool isInvisible, float speed, Entity entity)> _SHOOT_SINGLE_BULLET_BETWEEN_COORDS_PRESET_PARAMS;
			extern typed_lazy_func_t<void(bool toggle)> SET_THIS_SCRIPT_CAN_BE_PAUSED;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> REGISTER_BOOL_TO_SAVE;
			extern typed_lazy_func_t<bool()> GET_MISSION_FLAG;
			extern typed_lazy_func_t<void(float p0)> _0xB9854DFDE0D833D6;
			extern typed_lazy_func_t<void(float p0)> _0xC54A08C85AE4D410;
			extern typed_lazy_func_t<Any(Player player)> SET_FIRE_AMMO_THIS_FRAME;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xE532EC1A63231B4F;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0xB8721407EE9C3FF6;
			extern typed_lazy_func_t<void()> _0x23227DF0B2115469;
			extern typed_lazy_func_t<void(Any* p0)> _0x31125FD509D9043F;
			extern typed_lazy_func_t<void(Hash weatherType1, Hash weatherType2, float percentWeather2)> _SET_WEATHER_TYPE_TRANSITION;
			extern typed_lazy_func_t<bool(const char* string1, const char* string2)> ARE_STRINGS_EQUAL;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, Any p4)> ADD_POLICE_RESTART;
			extern typed_lazy_func_t<void()> CLEAR_REPLAY_STATS;
			extern typed_lazy_func_t<void(Player player)> SET_SUPER_JUMP_THIS_FRAME;
			extern typed_lazy_func_t<void(Hash* weatherType1, Hash* weatherType2, float* percentWeather2)> _GET_WEATHER_TYPE_TRANSITION;
			extern typed_lazy_func_t<void(float p0)> _0xC3C221ADDDE31A11;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, bool p6, bool p7, bool p8, bool p9, bool p10, Any p11, bool p12)> IS_AREA_OCCUPIED;
			extern typed_lazy_func_t<void(bool toggle)> SET_GAME_PAUSED;
			extern typed_lazy_func_t<Any()> _0x4750FC27570311EC;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, Any* p12)> _0xF56DFB7B61BE7276;
			extern typed_lazy_func_t<void()> _0x06462A961E94B67C;
			extern typed_lazy_func_t<void(int fakeWantedLevel)> SET_FAKE_WANTED_LEVEL;
			extern typed_lazy_func_t<Any()> _0x3BBBD13E5041A79E;
			extern typed_lazy_func_t<void(const char* scriptName)> TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME;
			extern typed_lazy_func_t<bool()> IS_MEMORY_CARD_IN_USE;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2, float distance, Vector3* spawnPoint)> FIND_SPAWN_POINT_IN_DIRECTION;
			extern typed_lazy_func_t<Any(Any p0)> _0x8098C8D6597AAE18;
			extern typed_lazy_func_t<bool(float x, float y, float z, Hash projHash, float radius, bool ownedByPlayer)> _IS_PROJECTILE_TYPE_IN_RADIUS;
			extern typed_lazy_func_t<void()> STOP_SAVE_ARRAY;
			extern typed_lazy_func_t<void(int time)> SET_RANDOM_SEED;
			extern typed_lazy_func_t<void(bool toggle)> IGNORE_NEXT_RESTART;
			extern typed_lazy_func_t<Any()> _0x2B5E102E4A42F2BF;
			extern typed_lazy_func_t<void(bool toggle)> SET_MINIGAME_IN_PROGRESS;
			extern typed_lazy_func_t<int()> _0x996DD1E1E02F1008;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5, bool p6, bool p7)> _0x32C7A7E8C43A1F80;
			extern typed_lazy_func_t<Any()> _0xEA2F2061875EED90;
			extern typed_lazy_func_t<void(const char* weatherType, float time)> _SET_WEATHER_TYPE_OVER_TIME;
			extern typed_lazy_func_t<void(float p0)> _0xC3EAD29AB273ECE8;
			extern typed_lazy_func_t<void()> _CREATE_LIGHTNING_THUNDER;
			extern typed_lazy_func_t<void(bool toggle)> _0xB51B9AB9EF81868C;
			extern typed_lazy_func_t<Any()> _0xDC9274A7EF6B2867;
			extern typed_lazy_func_t<void(Ped ped, bool toggle, bool p2)> ENABLE_TENNIS_MODE;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, Any p6)> IS_POINT_OBSCURED_BY_A_MISSION_ENTITY;
			extern typed_lazy_func_t<void(int policeIndex, bool toggle)> DISABLE_POLICE_RESTART;
			extern typed_lazy_func_t<void()> _SET_NEXT_RESPAWN_TO_CUSTOM;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, bool p6)> IS_BULLET_IN_BOX;
			extern typed_lazy_func_t<bool(Hash hash)> _HAS_CHEAT_STRING_JUST_BEEN_ENTERED;
			extern typed_lazy_func_t<Any()> GET_RANDOM_EVENT_FLAG;
			extern typed_lazy_func_t<void(float p0)> _0xA7A1127490312C36;
			extern typed_lazy_func_t<void(float p0)> _0x405591EC8FD9096D;
			extern typed_lazy_func_t<void(bool toggle)> _USE_FREEMODE_MAP_BEHAVIOR;
			extern typed_lazy_func_t<Any()> _0x14832BF2ABA53FC5;
			extern typed_lazy_func_t<Any()> _0xD10282B6E3751BA0;
			extern typed_lazy_func_t<int(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13, float p14, float p15, float p16, Any p17, Any p18)> ADD_STUNT_JUMP_ANGLED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xE6869BECDD8F2403;
			extern typed_lazy_func_t<void(Any p0, const char* p1, float p2)> _0x54F157E0336A3822;
			extern typed_lazy_func_t<void(bool toggle)> SET_FADE_OUT_AFTER_ARREST;
			extern typed_lazy_func_t<void(Any* p0, int p1, const char* arrayName)> _START_SAVE_ARRAY;
			extern typed_lazy_func_t<bool()> _0x9689123E3F213AA5;
			extern typed_lazy_func_t<void(Any* p0)> _0xEBD3205A207939ED;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any* p9, Any* p10, Any* p11, Any* p12)> _0xF2F6A2FA49278625;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, int flags)> CLEAR_AREA_OF_PEDS;
			extern typed_lazy_func_t<Any()> _0x075F1D57402C93BA;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0xB08B85D860E7BA3C;
			extern typed_lazy_func_t<bool(Any p0)> _0xE95B0C7D5BA3B96B;
			extern typed_lazy_func_t<bool()> _0xE8B9C0EC9E183F35;
			extern typed_lazy_func_t<bool(const char* weatherType)> IS_PREV_WEATHER_TYPE;
			extern typed_lazy_func_t<void(float speed)> SET_WIND;
			extern typed_lazy_func_t<void(int hospitalIndex, bool toggle)> DISABLE_HOSPITAL_RESTART;
			extern typed_lazy_func_t<void(bool toggle)> SET_FADE_IN_AFTER_DEATH_ARREST;
			extern typed_lazy_func_t<bool()> IS_SNIPER_INVERTED;
			extern typed_lazy_func_t<bool()> IS_STUNT_JUMP_MESSAGE_SHOWING;
			extern typed_lazy_func_t<void(bool toggle)> SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT;
			extern typed_lazy_func_t<int(int dispatchService)> _GET_NUMBER_OF_DISPATCHED_UNITS_FOR_PLAYER;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2, float p3, float p4, bool p5)> _0x8FA9C42FC5D7C64B;
			extern typed_lazy_func_t<bool(float x, float y, float z, float* groundZ, bool unk)> GET_GROUND_Z_FOR_3D_COORD;
			extern typed_lazy_func_t<float(float p0)> ACOS;
			extern typed_lazy_func_t<float(float value)> ABSF;
			extern typed_lazy_func_t<void(Hash modelHash, Vector3* minimum, Vector3* maximum)> GET_MODEL_DIMENSIONS;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, bool p6, bool p7)> HAS_BULLET_IMPACTED_IN_BOX;
			extern typed_lazy_func_t<void()> RESET_DISPATCH_SPAWN_BLOCKING_AREAS;
			extern typed_lazy_func_t<void()> _0xC79AE21974B01FB2;
			extern typed_lazy_func_t<void(float p0)> _0x7C9C0B1EEB1F9072;
			extern typed_lazy_func_t<float(float p0)> TAN;
			extern typed_lazy_func_t<Any()> _0x5B1F2E327B6B6FE1;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0xD10F442036302D50;
			extern typed_lazy_func_t<Hash()> GET_NEXT_WEATHER_TYPE_HASH_NAME;
			extern typed_lazy_func_t<bool()> IS_XBOX360_VERSION;
			extern typed_lazy_func_t<void()> STOP_SAVE_STRUCT;
			extern typed_lazy_func_t<bool(float x, float y, float z, float* groundZ, Vector3* offsets)> _GET_GROUND_Z_COORD_WITH_OFFSETS;
			extern typed_lazy_func_t<float(float dx, float dy)> GET_HEADING_FROM_VECTOR_2D;
			extern typed_lazy_func_t<Any()> _0xD642319C54AADEB6;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> _0x8269816F6CFD40F8;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any* p2)> _0x8EF5573A1F801A5C;
			extern typed_lazy_func_t<bool(Any* p1, Any* p2, Any p3, bool p4)> _0xB335F761606DB47C;
			extern typed_lazy_func_t<float(float startRange, float endRange)> GET_RANDOM_FLOAT_IN_RANGE;
			extern typed_lazy_func_t<int(int startRange, int endRange)> GET_RANDOM_INT_IN_RANGE;
			extern typed_lazy_func_t<void(float p0)> _0x9F5E6BB6B34540DA;
			extern typed_lazy_func_t<bool()> IS_AUTO_SAVE_IN_PROGRESS;
			extern typed_lazy_func_t<void()> _RESET_LOCALPLAYER_STATE;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xEB078CA2B5E82ADD;
			extern typed_lazy_func_t<Hash()> GET_PREV_WEATHER_TYPE_HASH_NAME;
			extern typed_lazy_func_t<Any()> GET_SNOW_LEVEL;
			extern typed_lazy_func_t<void(Any p0, float p1)> SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS;
			extern typed_lazy_func_t<bool()> _0x6FDDF453C0C756EC;
			extern typed_lazy_func_t<void(int* address, int offset)> CLEAR_BIT;
			extern typed_lazy_func_t<void(Any* p0, Any* p1)> _0xA735353C77334EA0;
			extern typed_lazy_func_t<void(Any* p0, int p1, const char* structName)> _START_SAVE_STRUCT;
			extern typed_lazy_func_t<bool()> IS_ORBIS_VERSION;
			extern typed_lazy_func_t<void(int p0)> ENABLE_STUNT_JUMP_SET;
			extern typed_lazy_func_t<void()> CANCEL_STUNT_JUMP;
			extern typed_lazy_func_t<bool(Hash hash, int amount)> _HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xB129E447A2EDA4BF;
			extern typed_lazy_func_t<void()> _0x92790862E36C2ADA;
			extern typed_lazy_func_t<void(float intensity)> _SET_RAIN_FX_INTENSITY;
			extern typed_lazy_func_t<void(float x, float y, float z, float heading)> _SET_CUSTOM_RESPAWN_POSITION;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, bool p4)> IS_BULLET_IN_AREA;
			extern typed_lazy_func_t<int(int stackSize)> _GET_FREE_STACK_SLOTS_COUNT;
			extern typed_lazy_func_t<int()> GET_GAME_TIMER;
			extern typed_lazy_func_t<bool()> _0xD3D15555431AB793;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, bool p4, bool p5, bool p6, bool p7, bool p8)> CLEAR_AREA_OF_VEHICLES;
			extern typed_lazy_func_t<void()> NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME;
			extern typed_lazy_func_t<void(bool disableRespawn)> _DISABLE_AUTOMATIC_RESPAWN;
			extern typed_lazy_func_t<void()> DO_AUTO_SAVE;
			extern typed_lazy_func_t<bool(int address, int offset)> IS_BIT_SET;
			extern typed_lazy_func_t<void(Any p0)> _0xBA4B8D83BDC75551;
			extern typed_lazy_func_t<float()> GET_WIND_SPEED;
			extern typed_lazy_func_t<void()> _CLEAR_CLOUD_HAT;
			extern typed_lazy_func_t<void(Player player)> SET_EXPLOSIVE_AMMO_THIS_FRAME;
			extern typed_lazy_func_t<Vector3()> GET_WIND_DIRECTION;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, Any* p4, Any p5, Any p6)> REGISTER_SAVE_HOUSE;
			extern typed_lazy_func_t<void(int p0)> DISABLE_STUNT_JUMP_SET;
			extern typed_lazy_func_t<void()> _0xFB00CA71DA386228;
			extern typed_lazy_func_t<void(bool toggle)> SET_MISSION_FLAG;
			extern typed_lazy_func_t<void()> _0x8951EB9C6906D3C8;
			extern typed_lazy_func_t<void(float direction)> SET_WIND_DIRECTION;
			extern typed_lazy_func_t<bool()> _0x684A41975F077262;
			extern typed_lazy_func_t<void(const char* p0, float p1)> _0xA74802FB8D0B7814;
			extern typed_lazy_func_t<bool()> IS_AUSSIE_VERSION;
			extern typed_lazy_func_t<Any(Player player)> SET_EXPLOSIVE_MELEE_THIS_FRAME;
			extern typed_lazy_func_t<void(bool p0)> _0x9D8D44ADBBA61EF2;
			extern typed_lazy_func_t<Any()> _0x44A0BDC559B35F6E;
			extern typed_lazy_func_t<void()> _0xD9F692D349249528;
			extern typed_lazy_func_t<void(Hash hash, bool p1)> _REMOVE_STEALTH_KILL;
			extern typed_lazy_func_t<int(int value)> ABSI;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> REGISTER_ENUM_TO_SAVE;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8)> _0x67F6413D3220E18D;
			extern typed_lazy_func_t<void(const char* p0)> _0x02DEAAC8F8EA7FE7;
			extern typed_lazy_func_t<void(Any p0, Any p1)> BEGIN_REPLAY_STATS;
			extern typed_lazy_func_t<void(bool p0)> _0xDEA36202FC3382DF;
			extern typed_lazy_func_t<bool()> IS_PS3_VERSION;
			extern typed_lazy_func_t<void(int p0)> DELETE_STUNT_JUMP;
			extern typed_lazy_func_t<int()> GET_INDEX_OF_CURRENT_LEVEL;
			extern typed_lazy_func_t<int()> UPDATE_ONSCREEN_KEYBOARD;
			extern typed_lazy_func_t<void()> _0xE3D969D2785FFB5E;
			extern typed_lazy_func_t<void(const char* weatherType)> SET_WEATHER_TYPE_NOW;
			extern typed_lazy_func_t<void(float p0)> _0xF751B16FB32ABC1D;
			extern typed_lazy_func_t<void(float p0)> _0xA8434F1DFF41D6E7;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0x1BB299305C3E8C13;
			extern typed_lazy_func_t<void(const char* weatherType)> SET_WEATHER_TYPE_PERSIST;
			extern typed_lazy_func_t<float()> _GET_CLOUD_HAT_OPACITY;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> REGISTER_TEXT_LABEL_TO_SAVE;
			extern typed_lazy_func_t<float()> _GET_BENCHMARK_TIME;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> _0x48F069265A0E4BEC;
			extern typed_lazy_func_t<int(const char* str1, const char* str2, bool matchCase, int maxLength)> COMPARE_STRINGS;
			extern typed_lazy_func_t<int(bool p0)> _0xA09F896CE912481F;
			extern typed_lazy_func_t<const char*()> GET_ONSCREEN_KEYBOARD_RESULT;
			extern typed_lazy_func_t<void(bool p0)> _0x65D2EBB47E1CEC21;
			extern typed_lazy_func_t<void(const char* type, float transitionTime)> _SET_CLOUD_HAT_TRANSITION;
			extern typed_lazy_func_t<Any()> _0x6E04F06094C87047;
			extern typed_lazy_func_t<void()> _0x37DEB0AA183FB6D8;
			extern typed_lazy_func_t<int()> GET_FRAME_COUNT;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, bool p7, bool p8, bool p9, bool p10, bool p11)> CLEAR_ANGLED_AREA_OF_VEHICLES;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0xD261BA3E7E998072;
			extern typed_lazy_func_t<int(int profileSetting)> GET_PROFILE_SETTING;
			extern typed_lazy_func_t<bool(int incidentType, Ped ped, int amountOfPeople, float radius, int* outIncidentID)> CREATE_INCIDENT_WITH_ENTITY;
			extern typed_lazy_func_t<bool(Any p0)> _0x19BFED045C647C49;
			extern typed_lazy_func_t<int()> GET_ALLOCATED_STACK_SIZE;
			extern typed_lazy_func_t<void(const char* p0)> _0x8D74E26F54B4E5C3;
			extern typed_lazy_func_t<Any()> _0x2107A3773771186D;
			extern typed_lazy_func_t<Any()> _0xEB2104E905C6F2E9;
			extern typed_lazy_func_t<int()> _0x6856EC3D35C81EA4;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2, float p3, float p4, bool p5)> _0xE266ED23311F24D4;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0x0A60017F841A54F2;
			extern typed_lazy_func_t<void(Any p0)> _0x703CC7F60CBB2B57;
			extern typed_lazy_func_t<float()> GET_FRAME_TIME;
			extern typed_lazy_func_t<void(int* address, int offset)> SET_BIT;
			extern typed_lazy_func_t<bool(Ped ped)> IS_TENNIS_MODE;
			extern typed_lazy_func_t<void(bool p0)> _0x2587A48BC88DFADF;
			extern typed_lazy_func_t<void(float p0)> _0x31727907B2C43C55;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2, Hash projHash, Vector3* projPos, bool ownedByPlayer)> _GET_IS_PROJECTILE_TYPE_IN_AREA;
			extern typed_lazy_func_t<bool()> IS_STUNT_JUMP_IN_PROGRESS;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, int flags)> CLEAR_AREA_OF_OBJECTS;
			extern typed_lazy_func_t<bool()> IS_FRONTEND_FADING;
			extern typed_lazy_func_t<void(Any* p0, const char* name)> _0x6F7794F28C6B2535;
			extern typed_lazy_func_t<void()> _0xC7DB36C24634F52B;
			extern typed_lazy_func_t<const char*()> _GET_GLOBAL_CHAR_BUFFER;
			extern typed_lazy_func_t<void(bool p0)> _0x6F2135B6129620C1;
			extern typed_lazy_func_t<Vector3(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, bool p9)> _0x21C235BC64831E5A;
		} /* GAMEPLAY */
		namespace INTERIOR {
			extern typed_lazy_func_t<Vector3(int interiorID, float x, float y, float z)> GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS;
			extern typed_lazy_func_t<void(int interiorID, Hash roomHashKey)> _0x920D853F3E17F1DA;
			extern typed_lazy_func_t<void(int interiorID)> UNPIN_INTERIOR;
			extern typed_lazy_func_t<int(float x, float y, float z, int unk)> _UNK_GET_INTERIOR_AT_COORDS;
			extern typed_lazy_func_t<void(int interiorID, const char* propName)> _DISABLE_INTERIOR_PROP;
			extern typed_lazy_func_t<void(Hash mapObjectHash)> _HIDE_MAP_OBJECT_THIS_FRAME;
			extern typed_lazy_func_t<bool(int interiorID)> IS_INTERIOR_DISABLED;
			extern typed_lazy_func_t<void(Entity entity)> CLEAR_ROOM_FOR_ENTITY;
			extern typed_lazy_func_t<void(int interiorID)> _LOAD_INTERIOR;
			extern typed_lazy_func_t<bool(int interiorID, const char* propName)> _IS_INTERIOR_PROP_ENABLED;
			extern typed_lazy_func_t<void(bool toggle)> _0x9E6542F0CE8E70A3;
			extern typed_lazy_func_t<void(int interiorID, bool toggle)> DISABLE_INTERIOR;
			extern typed_lazy_func_t<bool()> IS_INTERIOR_SCENE;
			extern typed_lazy_func_t<bool(int interiorID)> IS_VALID_INTERIOR;
			extern typed_lazy_func_t<void(Entity entity, int interiorID, Hash roomHashKey)> FORCE_ROOM_FOR_ENTITY;
			extern typed_lazy_func_t<int(Entity entity)> GET_INTERIOR_FROM_ENTITY;
			extern typed_lazy_func_t<void(Entity entity, int interiorID)> _0x82EBB79E258FA2B7;
			extern typed_lazy_func_t<int(float x, float y, float z, const char* interiorType)> GET_INTERIOR_AT_COORDS_WITH_TYPE;
			extern typed_lazy_func_t<int(float x, float y, float z)> GET_INTERIOR_FROM_COLLISION;
			extern typed_lazy_func_t<Hash(Entity entity)> GET_ROOM_KEY_FROM_ENTITY;
			extern typed_lazy_func_t<void()> _0x23B59D8912F94246;
			extern typed_lazy_func_t<Any(int interiorID)> _0x4C2330E61D3DEB56;
			extern typed_lazy_func_t<bool(float x, float y, float z)> _ARE_COORDS_COLLIDING_WITH_EXTERIOR;
			extern typed_lazy_func_t<Hash(Entity entity)> GET_KEY_FOR_ENTITY_IN_ROOM;
			extern typed_lazy_func_t<void(Hash roomHashKey)> _0x405DC2AEF6AF95B9;
			extern typed_lazy_func_t<Hash()> _GET_ROOM_KEY_FROM_GAMEPLAY_CAM;
			extern typed_lazy_func_t<void(int interiorID, const char* propName)> _ENABLE_INTERIOR_PROP;
			extern typed_lazy_func_t<bool(int interiorID)> IS_INTERIOR_CAPPED;
			extern typed_lazy_func_t<int(int interiorID)> GET_INTERIOR_GROUP_ID;
			extern typed_lazy_func_t<int(float x, float y, float z)> GET_INTERIOR_AT_COORDS;
			extern typed_lazy_func_t<bool(int interiorID)> IS_INTERIOR_READY;
			extern typed_lazy_func_t<void(int interiorID)> REFRESH_INTERIOR;
			extern typed_lazy_func_t<void(int interiorID, bool toggle)> CAP_INTERIOR;
			extern typed_lazy_func_t<void(const char* roomName)> _0xAF348AFCB575A441;
			extern typed_lazy_func_t<void(Pickup pickup, const char* roomName)> ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME;
		} /* INTERIOR */
		namespace ITEMSET {
			extern typed_lazy_func_t<void(Any p0)> DESTROY_ITEMSET;
			extern typed_lazy_func_t<bool(Any p0)> IS_ITEMSET_VALID;
			extern typed_lazy_func_t<bool(Any p0, Any p1)> ADD_TO_ITEMSET;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> GET_INDEXED_ITEM_IN_ITEMSET;
			extern typed_lazy_func_t<void(Any p0)> CLEAN_ITEMSET;
			extern typed_lazy_func_t<Vehicle(Vehicle distri)> CREATE_ITEMSET;
			extern typed_lazy_func_t<void(Any p0, Any p1)> REMOVE_FROM_ITEMSET;
			extern typed_lazy_func_t<Any(ScrHandle x)> GET_ITEMSET_SIZE;
			extern typed_lazy_func_t<bool(Any p0, Any p1)> IS_IN_ITEMSET;
		} /* ITEMSET */
		namespace UI {
			extern typed_lazy_func_t<void(Any p0)> _0x71BDB63DBAF8DA59;
			extern typed_lazy_func_t<void(bool p0)> _0x98215325A695E78A;
			extern typed_lazy_func_t<void(Blip blip, int color)> SET_BLIP_COLOUR;
			extern typed_lazy_func_t<void()> _SHOW_CURSOR_THIS_FRAME;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_FLASHES;
			extern typed_lazy_func_t<void()> _0xC2D15BEF167E27BC;
			extern typed_lazy_func_t<Any(bool p0)> FLASH_WANTED_DISPLAY;
			extern typed_lazy_func_t<void(Blip blip, int rotation)> SET_BLIP_ROTATION;
			extern typed_lazy_func_t<void(bool toggle)> _SET_NORTH_YANKTON_MAP;
			extern typed_lazy_func_t<void(bool toggle)> _SET_MINIMAP_REVEALED;
			extern typed_lazy_func_t<int()> _0x6F72CD94F7B5B68C;
			extern typed_lazy_func_t<int(bool blink, bool p1)> _DRAW_NOTIFICATION_3;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xC4278F70131BAA6D;
			extern typed_lazy_func_t<void()> REMOVE_MULTIPLAYER_BANK_CASH;
			extern typed_lazy_func_t<void(Blip blip, float posX, float posY, float posZ)> SET_BLIP_COORDS;
			extern typed_lazy_func_t<Blip()> DISABLE_BLIP_NAME_FOR_VAR;
			extern typed_lazy_func_t<Any(Any* p0, Any* p1, Any p2, Any* p3, Any* p4, Any p5)> _0xB6871B0555B02996;
			extern typed_lazy_func_t<int(const char* gxt)> GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL;
			extern typed_lazy_func_t<void(int red, int green, int blue, int alpha)> SET_TEXT_COLOUR;
			extern typed_lazy_func_t<int()> _GET_BLIP_INFO_ID_ITERATOR;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> _0xDB34E8D56FC13B08;
			extern typed_lazy_func_t<void(int angle)> LOCK_MINIMAP_ANGLE;
			extern typed_lazy_func_t<void()> _0x14621BB1DF14E2B2;
			extern typed_lazy_func_t<void()> _0xFDD85225B2DEA55E;
			extern typed_lazy_func_t<void()> CLEAR_BRIEF;
			extern typed_lazy_func_t<int(const char* string)> GET_LENGTH_OF_LITERAL_STRING;
			extern typed_lazy_func_t<void(Blip* blip)> REMOVE_BLIP;
			extern typed_lazy_func_t<int()> GET_CURRENT_WEBSITE_ID;
			extern typed_lazy_func_t<Any()> _0xA277800A9EAE340E;
			extern typed_lazy_func_t<void(bool p0)> _0x6F1554B0CC2089FA;
			extern typed_lazy_func_t<void()> REFRESH_WAYPOINT;
			extern typed_lazy_func_t<bool(int gamerTagId)> _HAS_MP_GAMER_TAG_2;
			extern typed_lazy_func_t<bool(const char* gxt, int slot)> HAS_THIS_ADDITIONAL_TEXT_LOADED;
			extern typed_lazy_func_t<Any(const char* p0)> GET_NAMED_RENDERTARGET_RENDER_ID;
			extern typed_lazy_func_t<Pickup(Blip blip)> GET_BLIP_INFO_ID_PICKUP_INDEX;
			extern typed_lazy_func_t<int(const char* picName1, int picName2, bool flash, int iconType, bool p4, const char* sender, const char* subject)> _SET_NOTIFICATION_MESSAGE;
			extern typed_lazy_func_t<void()> _0x8817605C2BA76200;
			extern typed_lazy_func_t<Any()> _0x9135584D09A3437E;
			extern typed_lazy_func_t<bool(int scaleformHandle, Any* p1, Any* p2, Any* p3)> _0x632B2940C67F4EA9;
			extern typed_lazy_func_t<void(Any p0)> _0x06A320535F5F0248;
			extern typed_lazy_func_t<bool(int id)> IS_SCRIPTED_HUD_COMPONENT_ACTIVE;
			extern typed_lazy_func_t<Any()> _0x3BAB9A4E4F2FF5C7;
			extern typed_lazy_func_t<void(int r, int g, int b, int a)> _0xD68A5FF8A3A89874;
			extern typed_lazy_func_t<void(bool p0)> _0x41350B4FC28E3941;
			extern typed_lazy_func_t<void(bool p0, Any p1, Any p2)> _0x900086F371220B6F;
			extern typed_lazy_func_t<void()> CLEAR_ALL_HELP_MESSAGES;
			extern typed_lazy_func_t<Blip(Entity entity)> GET_BLIP_FROM_ENTITY;
			extern typed_lazy_func_t<void(Blip blip)> HIDE_NUMBER_ON_BLIP;
			extern typed_lazy_func_t<void()> _0x35EDD5B2E3FF01C0;
			extern typed_lazy_func_t<void()> _0x25F87B30C382FCA7;
			extern typed_lazy_func_t<void(float p0)> RESPONDING_AS_TEMP;
			extern typed_lazy_func_t<void(int p0, float p1)> SET_GPS_FLAGS;
			extern typed_lazy_func_t<void(Hash hash)> _ADD_FRONTEND_MENU_CONTEXT;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any* p2)> _0xC8E1071177A23BE5;
			extern typed_lazy_func_t<Blip(float x, float y, float z)> ADD_BLIP_FOR_COORD;
			extern typed_lazy_func_t<void()> CLEAR_GPS_FLAGS;
			extern typed_lazy_func_t<Any()> _0x1121BFA1A1A522A8;
			extern typed_lazy_func_t<Any()> _0x13C4B962653A5280;
			extern typed_lazy_func_t<bool()> IS_PAUSE_MENU_ACTIVE;
			extern typed_lazy_func_t<void()> _0xADED7F5748ACAFE6;
			extern typed_lazy_func_t<void(float x, float y, float z)> _0xA905192A6781C41B;
			extern typed_lazy_func_t<void()> _0x80FE4F3AB4E1B62A;
			extern typed_lazy_func_t<void(bool toggle)> DISPLAY_AREA_NAME;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0x311438A071DD9B1A;
			extern typed_lazy_func_t<void(Any p0)> _0x1EAE6DD17B7A5EFA;
			extern typed_lazy_func_t<void(bool p0, Any* p1, Any* p2, Any* p3, Any* p4, Any* p5, Any* p6, Any* p7, Any* p8)> _0x817B86108EB94E51;
			extern typed_lazy_func_t<bool(Ped ped)> DOES_PED_HAVE_AI_BLIP;
			extern typed_lazy_func_t<void(const char* text)> BEGIN_TEXT_COMMAND_CLEAR_PRINT;
			extern typed_lazy_func_t<void(const char* gxt, int slot)> REQUEST_ADDITIONAL_TEXT;
			extern typed_lazy_func_t<int()> GET_NUMBER_OF_ACTIVE_BLIPS;
			extern typed_lazy_func_t<void(Any p0, bool p1)> CLEAR_FLOATING_HELP;
			extern typed_lazy_func_t<int(const char* p0, const char* p1, int p2, int p3, const char* p4)> _DRAW_NOTIFICATION_AWARD;
			extern typed_lazy_func_t<bool()> IS_RADAR_PREFERENCE_SWITCHED_ON;
			extern typed_lazy_func_t<Any()> _0x2F057596F2BD0061;
			extern typed_lazy_func_t<void()> _ABORT_TEXT_CHAT;
			extern typed_lazy_func_t<void(bool p0)> _0xCEF214315D276FD1;
			extern typed_lazy_func_t<void(int hudIndex)> _SET_NOTIFICATION_COLOR_NEXT;
			extern typed_lazy_func_t<Blip(float posX, float posY, float posZ, float radius)> ADD_BLIP_FOR_RADIUS;
			extern typed_lazy_func_t<Any()> _0x66E7CB63C97B7D20;
			extern typed_lazy_func_t<Any()> _0x2E22FEFA0100275E;
			extern typed_lazy_func_t<void(Ped ped, int p1)> GIVE_PED_TO_PAUSE_MENU;
			extern typed_lazy_func_t<const char*(const char* text, int startPosition, int endPosition)> _GET_TEXT_SUBSTRING_SLICE;
			extern typed_lazy_func_t<void(Blip blip)> PULSE_BLIP;
			extern typed_lazy_func_t<int()> _GET_ACTIVE_WEBSITE_ID;
			extern typed_lazy_func_t<bool()> _0x4A9923385BDB9DAD;
			extern typed_lazy_func_t<Blip(Entity entity)> ADD_BLIP_FOR_ENTITY;
			extern typed_lazy_func_t<void()> _BLOCK_WEAPON_WHEEL_THIS_FRAME;
			extern typed_lazy_func_t<int(float x, float y)> _GET_TEXT_SCREEN_LINE_COUNT;
			extern typed_lazy_func_t<void(bool toggle)> _SET_MAP_FULL_SCREEN;
			extern typed_lazy_func_t<void(bool p0)> _0x3DDA37128DD1ACA8;
			extern typed_lazy_func_t<void()> _0xEC9264727EEC0F28;
			extern typed_lazy_func_t<bool(const char* gxt)> DOES_TEXT_LABEL_EXIST;
			extern typed_lazy_func_t<void(int fontType)> SET_TEXT_FONT;
			extern typed_lazy_func_t<void(bool p0)> _0x04655F9D075D0AE5;
			extern typed_lazy_func_t<void(int p0, bool p1)> CLEAR_ADDITIONAL_TEXT;
			extern typed_lazy_func_t<void(float value, float maxValue)> SET_ABILITY_BAR_VALUE;
			extern typed_lazy_func_t<void(bool p0)> _0xF1A6C18B35BCADE6;
			extern typed_lazy_func_t<int(Blip blip)> GET_BLIP_INFO_ID_DISPLAY;
			extern typed_lazy_func_t<bool(Blip blip)> IS_MISSION_CREATOR_BLIP;
			extern typed_lazy_func_t<void()> SET_WAYPOINT_OFF;
			extern typed_lazy_func_t<void(int id)> SHOW_HUD_COMPONENT_THIS_FRAME;
			extern typed_lazy_func_t<Any(Any* p0, Any* p1, Any* p2, bool p3, bool p4)> _0x8EFCCF6EC66D85E4;
			extern typed_lazy_func_t<Any()> _0xAF42195A42C63BBA;
			extern typed_lazy_func_t<void(Hash menuHash, int p1)> RESTART_FRONTEND_MENU;
			extern typed_lazy_func_t<bool()> IS_HELP_MESSAGE_ON_SCREEN;
			extern typed_lazy_func_t<bool()> _0x4167EFE0527D706E;
			extern typed_lazy_func_t<void()> _REMOVE_LOADING_PROMPT;
			extern typed_lazy_func_t<bool()> IS_HUD_HIDDEN;
			extern typed_lazy_func_t<void(bool p0)> _0x170F541E1CADD1DE;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> _SET_BLIP_SHRINK;
			extern typed_lazy_func_t<void(const char* entry)> _BEGIN_TEXT_COMMAND_LINE_COUNT;
			extern typed_lazy_func_t<void(int zoomLevel)> SET_RADAR_ZOOM;
			extern typed_lazy_func_t<void()> _0xD2049635DEB9C375;
			extern typed_lazy_func_t<void()> _0x20FE7FDFEEAD38C0;
			extern typed_lazy_func_t<int(const char* picName1, const char* picName2, bool p2, Any p3, const char* p4, const char* p5)> _SET_NOTIFICATION_MESSAGE_3;
			extern typed_lazy_func_t<void(const char* text)> BEGIN_TEXT_COMMAND_DISPLAY_TEXT;
			extern typed_lazy_func_t<void(bool toggle)> SET_MINIMAP_BLOCK_WAYPOINT;
			extern typed_lazy_func_t<const char*(const char* text, int position, int length, int maxLength)> _GET_TEXT_SUBSTRING_SAFE;
			extern typed_lazy_func_t<bool()> IS_WARNING_MESSAGE_ACTIVE;
			extern typed_lazy_func_t<void(bool p0, Any p1, Any p2)> _0xC78E239AC5B2DDB9;
			extern typed_lazy_func_t<void(float pos)> _CLEAR_NOTIFICATIONS_POS;
			extern typed_lazy_func_t<Any()> _0x359AF31A4B52F5ED;
			extern typed_lazy_func_t<void(int spriteId)> _SET_CURSOR_SPRITE;
			extern typed_lazy_func_t<int(bool p0, bool p1, int* p2, int p3, bool isLeader, bool unk0, int clanDesc, const char* playerName, int R, int G, int B)> _DRAW_NOTIFICATION_CLAN_INVITE;
			extern typed_lazy_func_t<void(const char* website)> ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE;
			extern typed_lazy_func_t<void()> _0x60E892BA4F5BDCA4;
			extern typed_lazy_func_t<void(int cash, int bank)> _SET_PLAYER_CASH_CHANGE;
			extern typed_lazy_func_t<void()> SET_MULTIPLAYER_BANK_CASH;
			extern typed_lazy_func_t<void(Hash weaponHash)> _0x72C1056D678BB7D8;
			extern typed_lazy_func_t<void(int id)> HIDE_HUD_COMPONENT_THIS_FRAME;
			extern typed_lazy_func_t<void(int id)> RESET_HUD_COMPONENT_VALUES;
			extern typed_lazy_func_t<void(float value, int decimalPlaces)> ADD_TEXT_COMPONENT_FLOAT;
			extern typed_lazy_func_t<void(int hudColorIndex, int* r, int* g, int* b, int* a)> GET_HUD_COLOUR;
			extern typed_lazy_func_t<void(Blip blip, float r, float g, float b)> SET_BLIP_SECONDARY_COLOUR;
			extern typed_lazy_func_t<Any()> _0xF13FE2A80C05C561;
			extern typed_lazy_func_t<void()> _0xE1CD1E48E025E661;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_AS_FRIENDLY;
			extern typed_lazy_func_t<Any()> _0xDE03620F8703A9DF;
			extern typed_lazy_func_t<void(float x, float y, float z)> _0x0923DBF87DFF735E;
			extern typed_lazy_func_t<void(int gamerTagId, const char* string)> _SET_MP_GAMER_TAG_CHATTING;
			extern typed_lazy_func_t<void()> REMOVE_MULTIPLAYER_HUD_CASH;
			extern typed_lazy_func_t<void(bool forcedShow)> _SHOW_WEAPON_WHEEL;
			extern typed_lazy_func_t<void(bool p0)> _0x14C9FDCC41F81F63;
			extern typed_lazy_func_t<Any()> _0x9049FE339D5F6F6F;
			extern typed_lazy_func_t<void()> UNLOCK_MINIMAP_ANGLE;
			extern typed_lazy_func_t<Hash()> _GET_CURRENT_FRONTEND_MENU;
			extern typed_lazy_func_t<void(bool p0)> _0x3CA6050692BC61B0;
			extern typed_lazy_func_t<void(int gamerTagId, int wantedlvl)> SET_MP_GAMER_TAG_WANTED_LEVEL;
			extern typed_lazy_func_t<void(const char* entryHeader, const char* entryLine1, int instructionalKey, const char* entryLine2, bool p4, Any p5, Any* p6, Any* p7, bool background)> SET_WARNING_MESSAGE_WITH_HEADER;
			extern typed_lazy_func_t<Any()> _0x593FEAE1F73392D4;
			extern typed_lazy_func_t<Any(Any p0)> _0xE3B05614DCE1D014;
			extern typed_lazy_func_t<void()> _0xD2B32BE3FC1626C6;
			extern typed_lazy_func_t<void(Blip blip)> ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME;
			extern typed_lazy_func_t<Blip(Pickup pickup)> ADD_BLIP_FOR_PICKUP;
			extern typed_lazy_func_t<bool(Blip blip)> IS_BLIP_FLASHING;
			extern typed_lazy_func_t<void(bool toggle)> DISPLAY_CASH;
			extern typed_lazy_func_t<void(int id)> HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME;
			extern typed_lazy_func_t<void(int headDisplayId, bool p1)> _SET_MP_GAMER_TAG_;
			extern typed_lazy_func_t<void(bool p0)> ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS;
			extern typed_lazy_func_t<void(Hash hash)> LINK_NAMED_RENDERTARGET;
			extern typed_lazy_func_t<void(Blip blip, Player player)> SET_BLIP_NAME_TO_PLAYER_NAME;
			extern typed_lazy_func_t<bool(Any p0)> _0xDD2238F57B977751;
			extern typed_lazy_func_t<void(bool p0)> _0x82CEDC33687E1F50;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> _0x7AE0589093A2E088;
			extern typed_lazy_func_t<void(float start, float end)> SET_TEXT_WRAP;
			extern typed_lazy_func_t<void()> _0x67EEDEA1B9BAFD94;
			extern typed_lazy_func_t<bool(Hash hash)> IS_NAMED_RENDERTARGET_LINKED;
			extern typed_lazy_func_t<Vector3(Blip blip)> GET_BLIP_INFO_ID_COORD;
			extern typed_lazy_func_t<void()> RESET_RETICULE_VALUES;
			extern typed_lazy_func_t<void()> _0x56C8B608CFD49854;
			extern typed_lazy_func_t<void(Blip blip, int priority)> SET_BLIP_PRIORITY;
			extern typed_lazy_func_t<int(const char* picName1, const char* picName2, bool flash, int iconType, const char* sender, const char* subject)> _SET_NOTIFICATION_MESSAGE_2;
			extern typed_lazy_func_t<void()> CLEAR_PED_IN_PAUSE_MENU;
			extern typed_lazy_func_t<void()> CLEAR_PRINTS;
			extern typed_lazy_func_t<void(Blip blip, int number)> SHOW_NUMBER_ON_BLIP;
			extern typed_lazy_func_t<void(int p0, int r, int g, int b, int a)> SET_TEXT_EDGE;
			extern typed_lazy_func_t<Blip(int blipSprite)> GET_NEXT_BLIP_INFO_ID;
			extern typed_lazy_func_t<bool(Hash p0, Any* p1)> _0x052991E59076E4E4;
			extern typed_lazy_func_t<bool()> _IS_RADAR_ENABLED;
			extern typed_lazy_func_t<bool()> IS_WAYPOINT_ACTIVE;
			extern typed_lazy_func_t<void()> _0x583049884A2EEE3C;
			extern typed_lazy_func_t<void()> _0xB695E2CD0A2DA9EE;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> _0xC8F3AAF93D0600BF;
			extern typed_lazy_func_t<void()> END_TEXT_COMMAND_CLEAR_PRINT;
			extern typed_lazy_func_t<void(float zoomLevel)> _SET_RADAR_ZOOM_LEVEL_THIS_FRAME;
			extern typed_lazy_func_t<bool()> IS_PAUSE_MENU_RESTARTING;
			extern typed_lazy_func_t<void(Hash interior, float x, float y, int heading, int zoom)> SET_RADAR_AS_INTERIOR_THIS_FRAME;
			extern typed_lazy_func_t<void(bool toggle)> SET_PAUSE_MENU_ACTIVE;
			extern typed_lazy_func_t<void(const char* gxt, int slot)> _REQUEST_ADDITIONAL_TEXT_2;
			extern typed_lazy_func_t<bool(Any* p0)> RELEASE_NAMED_RENDERTARGET;
			extern typed_lazy_func_t<Vector3(Blip blip)> GET_BLIP_COORDS;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x25615540D894B814;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_SHOW_CONE;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> _SET_BLIP_FRIENDLY;
			extern typed_lazy_func_t<void(int gamerTagId, const char* string)> SET_MP_GAMER_TAG_NAME;
			extern typed_lazy_func_t<Any()> _0x2A25ADC48F87841F;
			extern typed_lazy_func_t<void(int red, int green, int blue, int alpha)> _SET_NOTIFICATION_FLASH_COLOR;
			extern typed_lazy_func_t<void(int gamerTagId)> REMOVE_MP_GAMER_TAG;
			extern typed_lazy_func_t<bool()> IS_MESSAGE_BEING_DISPLAYED;
			extern typed_lazy_func_t<void(Hash hash)> OBJECT_DECAL_TOGGLE;
			extern typed_lazy_func_t<void(int justifyType)> SET_TEXT_JUSTIFICATION;
			extern typed_lazy_func_t<void(const char* text)> _SET_NOTIFICATION_TEXT_ENTRY;
			extern typed_lazy_func_t<void(int gamerTagId, int flag, int color)> SET_MP_GAMER_TAG_COLOUR;
			extern typed_lazy_func_t<void(bool p0)> _0xECF128344E9FF9F1;
			extern typed_lazy_func_t<Blip*(Ped ped)> _0x7CD934010E115C2C;
			extern typed_lazy_func_t<void(int duration, bool drawImmediately)> END_TEXT_COMMAND_PRINT;
			extern typed_lazy_func_t<const char*(const char* labelName)> _GET_LABEL_TEXT;
			extern typed_lazy_func_t<void()> UNLOCK_MINIMAP_POSITION;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xDCFB5D4DB8BF367E;
			extern typed_lazy_func_t<void(int pedHandle, bool showViewCones)> _SET_PED_AI_BLIP;
			extern typed_lazy_func_t<void()> CLEAR_SMALL_PRINTS;
			extern typed_lazy_func_t<const char*(Hash hash)> GET_STREET_NAME_FROM_HASH_KEY;
			extern typed_lazy_func_t<void(bool toggle)> CLEAR_HELP;
			extern typed_lazy_func_t<void(const char* string)> _BEGIN_TEXT_COMMAND_BUSY_STRING;
			extern typed_lazy_func_t<Any(Any p0)> _0xA13E93403F26C812;
			extern typed_lazy_func_t<void(bool p0)> _0xF06EBB91A81E09E3;
			extern typed_lazy_func_t<void(const char* text)> ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME;
			extern typed_lazy_func_t<bool(Any p0)> _0xDAF87174BE7454FF;
			extern typed_lazy_func_t<void()> _0xCC3FDDED67BCFC63;
			extern typed_lazy_func_t<Any()> _0x3D9ACB1EB139E702;
			extern typed_lazy_func_t<int(bool blink, bool p1)> _DRAW_NOTIFICATION;
			extern typed_lazy_func_t<void(Any p0, float x, float y, float z)> _0x784BA7E0ECEB4178;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x54318C915D27E4CE;
			extern typed_lazy_func_t<void(bool p0)> ENABLE_DEATHBLOOD_SEETHROUGH;
			extern typed_lazy_func_t<Blip(Ped ped)> _GET_AI_BLIP;
			extern typed_lazy_func_t<void(bool align)> SET_TEXT_CENTRE;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2)> _0x7679CC1BCEBE3D4C;
			extern typed_lazy_func_t<void(int busySpinnerType)> _END_TEXT_COMMAND_BUSY_STRING;
			extern typed_lazy_func_t<void(int notificationId)> _REMOVE_NOTIFICATION;
			extern typed_lazy_func_t<void(bool p0)> _SET_TEXT_CHAT_UNK;
			extern typed_lazy_func_t<void()> _0xBF4F34A85CA2970C;
			extern typed_lazy_func_t<int(bool blink, bool p1)> _DRAW_NOTIFICATION_2;
			extern typed_lazy_func_t<bool()> IS_SUBTITLE_PREFERENCE_SWITCHED_ON;
			extern typed_lazy_func_t<Any(bool Toggle)> DISPLAY_RADAR;
			extern typed_lazy_func_t<void(Any p0)> _0x975D66A0BC17064C;
			extern typed_lazy_func_t<void(const char* inputType)> BEGIN_TEXT_COMMAND_DISPLAY_HELP;
			extern typed_lazy_func_t<void(bool toggle)> FLASH_ABILITY_BAR;
			extern typed_lazy_func_t<void(float altitude, bool p1)> _SET_MINIMAP_ATTITUDE_INDICATOR_LEVEL;
			extern typed_lazy_func_t<bool(Any p0)> _0x2432784ACA090DA4;
			extern typed_lazy_func_t<bool(Any p0, float* p1)> _0x5FBD7095FE7AE57F;
			extern typed_lazy_func_t<bool()> IS_HUD_PREFERENCE_SWITCHED_ON;
			extern typed_lazy_func_t<float(float size, int font)> _GET_TEXT_SCALE_HEIGHT;
			extern typed_lazy_func_t<void(bool toggle)> TOGGLE_STEALTH_RADAR;
			extern typed_lazy_func_t<bool()> IS_HELP_MESSAGE_FADING_OUT;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x75A16C3DA34F1245;
			extern typed_lazy_func_t<bool(float worldX, float worldY, float worldZ, float* screenX, float* screenY)> _GET_SCREEN_COORD_FROM_WORLD_COORD;
			extern typed_lazy_func_t<bool(int p0)> END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED;
			extern typed_lazy_func_t<void(bool p0)> _END_TEXT_COMMAND_TIMER;
			extern typed_lazy_func_t<void(const char* p0)> _ADD_TEXT_COMPONENT_SCALEFORM;
			extern typed_lazy_func_t<void(const char* entryLine1, int instructionalKey, const char* entryLine2, bool p3, Any p4, Any* p5, Any* p6, bool background)> SET_WARNING_MESSAGE;
			extern typed_lazy_func_t<void()> _0x2708FC083123F9FF;
			extern typed_lazy_func_t<void(Any p0)> SET_WIDESCREEN_FORMAT;
			extern typed_lazy_func_t<void()> CLEAR_GPS_PLAYER_WAYPOINT;
			extern typed_lazy_func_t<void()> DISABLE_FRONTEND_THIS_FRAME;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any p2, Any p3)> _0x90A6526CF0381030;
			extern typed_lazy_func_t<Entity(Blip blip)> GET_BLIP_INFO_ID_ENTITY_INDEX;
			extern typed_lazy_func_t<void(bool p0)> _0xBAE4F9B97CD43B30;
			extern typed_lazy_func_t<bool(int p0)> IS_STREAMING_ADDITIONAL_TEXT;
			extern typed_lazy_func_t<Blip()> GET_MAIN_PLAYER_BLIP_ID;
			extern typed_lazy_func_t<void(Blip blip, int opacity, int duration)> SET_BLIP_FADE;
			extern typed_lazy_func_t<void(int gamerTagId, int component, int alpha)> SET_MP_GAMER_TAG_ALPHA;
			extern typed_lazy_func_t<bool()> IS_RADAR_HIDDEN;
			extern typed_lazy_func_t<void(Blip blip, bool enabled)> SET_BLIP_ROUTE;
			extern typed_lazy_func_t<bool()> _0x214CD562A939246A;
			extern typed_lazy_func_t<void(Ped ped, int type)> _SET_AI_BLIP_TYPE;
			extern typed_lazy_func_t<void(bool p0)> _0x9245E81072704B8A;
			extern typed_lazy_func_t<bool(const char* p0)> IS_NAMED_RENDERTARGET_REGISTERED;
			extern typed_lazy_func_t<int(Blip blip)> GET_BLIP_ALPHA;
			extern typed_lazy_func_t<void(Blip blip)> END_TEXT_COMMAND_SET_BLIP_NAME;
			extern typed_lazy_func_t<void(Blip blip, float scale)> SET_BLIP_SCALE;
			extern typed_lazy_func_t<void()> _0x2632482FD6B9AB87;
			extern typed_lazy_func_t<int(const char* picName1, const char* picName2, bool flash, int iconType, const char* sender, const char* subject, float duration, const char* clanTag)> _SET_NOTIFICATION_MESSAGE_CLAN_TAG;
			extern typed_lazy_func_t<Blip(int blipSprite)> GET_FIRST_BLIP_INFO_ID;
			extern typed_lazy_func_t<void()> HIDE_HELP_TEXT_THIS_FRAME;
			extern typed_lazy_func_t<int(const char* picName1, const char* picName2, bool flash, int iconType1, const char* sender, const char* subject, float duration, const char* clanTag, int iconType2, int p9)> _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2;
			extern typed_lazy_func_t<void(int headDisplayId, int color)> SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR;
			extern typed_lazy_func_t<void(bool display)> DISPLAY_AMMO_THIS_FRAME;
			extern typed_lazy_func_t<void(int value, bool commaSeparated)> ADD_TEXT_COMPONENT_FORMATTED_INTEGER;
			extern typed_lazy_func_t<bool()> _HAS_MP_GAMER_TAG;
			extern typed_lazy_func_t<void(Any* p0, Any* p1)> _0x36C1451A88A09630;
			extern typed_lazy_func_t<void()> _0xA8FDB297A8D25FBA;
			extern typed_lazy_func_t<void()> _0xFDEC055AB549E328;
			extern typed_lazy_func_t<void(const char* labelName)> BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED;
			extern typed_lazy_func_t<int(Blip blip)> GET_BLIP_INFO_ID_TYPE;
			extern typed_lazy_func_t<bool(Blip blip)> IS_BLIP_ON_MINIMAP;
			extern typed_lazy_func_t<bool(int id)> IS_HUD_COMPONENT_ACTIVE;
			extern typed_lazy_func_t<void(const char* p0)> _LOG_DEBUG_INFO;
			extern typed_lazy_func_t<void(const char* p0)> _BEGIN_TEXT_COMMAND_OBJECTIVE;
			extern typed_lazy_func_t<bool(const char* gxt)> DOES_TEXT_BLOCK_EXIST;
			extern typed_lazy_func_t<void()> _0x7669F9E39DC17063;
			extern typed_lazy_func_t<void(int renderId)> SET_TEXT_RENDER_ID;
			extern typed_lazy_func_t<int(int type, const char* button, const char* text)> _DRAW_NOTIFICATION_WITH_BUTTON;
			extern typed_lazy_func_t<int(Blip blip)> GET_BLIP_HUD_COLOUR;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_AS_MISSION_CREATOR_BLIP;
			extern typed_lazy_func_t<void()> _0xBA751764F0821256;
			extern typed_lazy_func_t<void(Blip blip, int colour)> SET_BLIP_ROUTE_COLOUR;
			extern typed_lazy_func_t<int(Blip blip)> GET_BLIP_SPRITE;
			extern typed_lazy_func_t<void(Hash menuhash, bool Toggle_Pause, int component)> ACTIVATE_FRONTEND_MENU;
			extern typed_lazy_func_t<void(Blip blip, Any p1)> SET_BLIP_FLASH_INTERVAL;
			extern typed_lazy_func_t<Vector3(int id)> GET_HUD_COMPONENT_POSITION;
			extern typed_lazy_func_t<void()> _0x7792424AA0EAC32E;
			extern typed_lazy_func_t<void(Blip blip, int index)> SET_BLIP_CATEGORY;
			extern typed_lazy_func_t<void()> HIDE_HUD_AND_RADAR_THIS_FRAME;
			extern typed_lazy_func_t<void()> _0xA13C11E1B5C06BFC;
			extern typed_lazy_func_t<void(Any* p0, Any* p1, Any* p2, Any* p3)> _0x317EBA71D7543F52;
			extern typed_lazy_func_t<void(bool p0)> _0xB99C4E4D9499DF29;
			extern typed_lazy_func_t<void(Ped ped)> _0xC594B315EDF2D4AF;
			extern typed_lazy_func_t<void(const char* gxtentry)> BEGIN_TEXT_COMMAND_SET_BLIP_NAME;
			extern typed_lazy_func_t<void()> FLASH_MINIMAP_DISPLAY;
			extern typed_lazy_func_t<void(int id, float x, float y)> SET_HUD_COMPONENT_POSITION;
			extern typed_lazy_func_t<void()> _SHOW_SOCIAL_CLUB_LEGAL_SCREEN;
			extern typed_lazy_func_t<void(Ped ped, float distance)> _SET_AI_BLIP_MAX_DISTANCE;
			extern typed_lazy_func_t<void(Any p0)> _0x17AD8C9706BDD88A;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_FLASHES_ALTERNATE;
			extern typed_lazy_func_t<void()> SET_RADAR_AS_EXTERIOR_THIS_FRAME;
			extern typed_lazy_func_t<void(int value)> ADD_TEXT_COMPONENT_INTEGER;
			extern typed_lazy_func_t<int(const char* picName1, const char* picName2, bool flash, int iconType, const char* sender, const char* subject, float duration)> _SET_NOTIFICATION_MESSAGE_4;
			extern typed_lazy_func_t<void(const char* GxtEntry)> BEGIN_TEXT_COMMAND_PRINT;
			extern typed_lazy_func_t<void()> _0x211C4EF450086857;
			extern typed_lazy_func_t<void(Blip blip, int spriteId)> SET_BLIP_SPRITE;
			extern typed_lazy_func_t<void(const char* p0)> _BEGIN_TEXT_COMMAND_TIMER;
			extern typed_lazy_func_t<bool(int slot)> HAS_ADDITIONAL_TEXT_LOADED;
			extern typed_lazy_func_t<void(bool p0)> _0xBA8D65C1C65702E5;
			extern typed_lazy_func_t<void(int hudColorIndex, int hudColorIndex2)> _SET_HUD_COLOURS_SWITCH;
			extern typed_lazy_func_t<void()> SET_TEXT_DROP_SHADOW;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SHOW_HEADING_INDICATOR_ON_BLIP;
			extern typed_lazy_func_t<void(int r, int g, int b, int a)> _0x16A304E6CB2BFAB9;
			extern typed_lazy_func_t<Vector3()> _0x5BFF36D6ED83E0AE;
			extern typed_lazy_func_t<void(float x, float y)> SET_NEW_WAYPOINT;
			extern typed_lazy_func_t<void()> HIDE_LOADING_ON_FADE_THIS_FRAME;
			extern typed_lazy_func_t<void(float scale, float size)> SET_TEXT_SCALE;
			extern typed_lazy_func_t<void(bool p0)> _0x4A0C7C9BB10ABB36;
			extern typed_lazy_func_t<void(int gamerTagId, int component, bool toggle)> SET_MP_GAMER_TAG_VISIBILITY;
			extern typed_lazy_func_t<bool()> END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED;
			extern typed_lazy_func_t<void(const char* text)> _BEGIN_TEXT_COMMAND_WIDTH;
			extern typed_lazy_func_t<int(Ped ped, const char* username, bool pointedClanTag, bool isRockstarClan, const char* clanTag, Any p5)> _CREATE_MP_GAMER_TAG;
			extern typed_lazy_func_t<Any()> _0x4E3CD0EF8A489541;
			extern typed_lazy_func_t<void()> DISPLAY_SNIPER_SCOPE_THIS_FRAME;
			extern typed_lazy_func_t<void(Any p0)> _0x6B1DE27EE78E6A19;
			extern typed_lazy_func_t<void(Hash gxtEntryHash)> ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> _SET_BLIP_FRIEND;
			extern typed_lazy_func_t<bool(Blip blip)> DOES_BLIP_EXIST;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2)> _0x33EE12743CCD6343;
			extern typed_lazy_func_t<void(bool p0, const char* name)> _SET_MISSION_NAME_2;
			extern typed_lazy_func_t<void(const char* entryHeader, const char* entryLine1, Any instructionalKey, const char* entryLine2, bool p4, Any p5, Any p6, Any* p7, Any* p8, bool p9)> _SET_WARNING_MESSAGE_3;
			extern typed_lazy_func_t<bool()> _IS_TEXT_CHAT_ACTIVE;
			extern typed_lazy_func_t<bool(int* p0, int* p1, int* p2)> _0xA238192F33110615;
			extern typed_lazy_func_t<void(Ped ped, bool flag)> _IS_AI_BLIP_ALWAYS_SHOWN;
			extern typed_lazy_func_t<void(Blip blip, const char* gxtEntry)> SET_BLIP_NAME_FROM_TEXT_FILE;
			extern typed_lazy_func_t<void(int p0, int p1)> SET_MULTIPLAYER_HUD_CASH;
			extern typed_lazy_func_t<void()> _0x6EF54AB721DC6242;
			extern typed_lazy_func_t<void(bool p0)> _0x62E849B7EB28E770;
			extern typed_lazy_func_t<void(bool toggleBigMap, bool showFullMap)> _SET_RADAR_BIGMAP_ENABLED;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any p2)> _0x8F08017F9D7C47BD;
			extern typed_lazy_func_t<bool()> IS_HELP_MESSAGE_BEING_DISPLAYED;
			extern typed_lazy_func_t<Any(int p0, bool p1, int p2)> SET_MINIMAP_COMPONENT;
			extern typed_lazy_func_t<void(bool p0, Any p1)> KEY_HUD_COLOUR;
			extern typed_lazy_func_t<void(Any p0, bool loop, bool beep, int shape)> END_TEXT_COMMAND_DISPLAY_HELP;
			extern typed_lazy_func_t<void(Blip blip, int displayId)> SET_BLIP_DISPLAY;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> _0x3D3D15AF7BCAAF83;
			extern typed_lazy_func_t<bool(int gamerTagId)> ADD_TREVOR_RANDOM_MODIFIER;
			extern typed_lazy_func_t<void(const char* text)> BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED;
			extern typed_lazy_func_t<void(bool p0)> _0x1EAC5F91BCBC5073;
			extern typed_lazy_func_t<bool(Any p0)> _0x09C0403ED9A751C2;
			extern typed_lazy_func_t<const char*(const char* text, int position, int length)> _GET_TEXT_SUBSTRING;
			extern typed_lazy_func_t<void(bool active)> SET_FRONTEND_ACTIVE;
			extern typed_lazy_func_t<void(Blip blip, int duration)> SET_BLIP_FLASH_TIMER;
			extern typed_lazy_func_t<void(bool toggle)> SET_GPS_FLASHES;
			extern typed_lazy_func_t<int()> GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID;
			extern typed_lazy_func_t<bool(Hash hash)> _0x84698AB38D0C6636;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_HIGH_DETAIL;
			extern typed_lazy_func_t<void(const char* message, bool p1)> DISPLAY_HELP_TEXT_THIS_FRAME;
			extern typed_lazy_func_t<void(Any p0, Any p1, bool p2)> _0x3F5CC444DCAAA8F2;
			extern typed_lazy_func_t<bool()> IS_SOCIAL_CLUB_ACTIVE;
			extern typed_lazy_func_t<void()> _0xD4438C0564490E63;
			extern typed_lazy_func_t<int()> _GET_CURRENT_NOTIFICATION;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0xF98E4B3E56AFC7B1;
			extern typed_lazy_func_t<void()> _CENTER_PLAYER_ON_RADAR_THIS_FRAME;
			extern typed_lazy_func_t<bool(float x, float y, float radius)> _IS_MINIMAP_AREA_REVEALED;
			extern typed_lazy_func_t<void(float x, float y)> LOCK_MINIMAP_POSITION;
			extern typed_lazy_func_t<bool(int gamerTagId)> IS_MP_GAMER_TAG_ACTIVE;
			extern typed_lazy_func_t<void(int hudIndex)> _SET_NOTIFICATION_BACKGROUND_COLOR;
			extern typed_lazy_func_t<void(const char* p0, int p1)> _ADD_TEXT_COMPONENT_APP_TITLE;
			extern typed_lazy_func_t<void()> SET_TEXT_OUTLINE;
			extern typed_lazy_func_t<void(float x, float y)> _SET_PLAYER_BLIP_POSITION_THIS_FRAME;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any p2, Any p3, Any p4)> _0x24A49BEAF468DC90;
			extern typed_lazy_func_t<void()> _0xFDB423997FA30340;
			extern typed_lazy_func_t<void(int distance, int r, int g, int b, int a)> SET_TEXT_DROPSHADOW;
			extern typed_lazy_func_t<bool(Blip blip)> IS_BLIP_SHORT_RANGE;
			extern typed_lazy_func_t<void(int* p0, int* p1, int* p2)> _0x7E17BE53E1AAABAF;
			extern typed_lazy_func_t<Any()> _0xA9CBFD40B3FA3010;
			extern typed_lazy_func_t<void(bool toggle)> SET_TEXT_RIGHT_JUSTIFY;
			extern typed_lazy_func_t<Hash()> _0xA48931185F0536FE;
			extern typed_lazy_func_t<void()> _DISABLE_RADAR_THIS_FRAME;
			extern typed_lazy_func_t<void(bool toggle)> _SET_DIRECTOR_MODE;
			extern typed_lazy_func_t<void()> _0xC65AB383CD91DF98;
			extern typed_lazy_func_t<int(bool p0, bool p1, int* p2, int p3, bool isLeader, bool unk0, int clanDesc, int R, int G, int B)> _DRAW_NOTIFICATION_APARTMENT_INVITE;
			extern typed_lazy_func_t<void()> _0xD8E694757BCEA8E9;
			extern typed_lazy_func_t<void(Any p0, Any p1, float p2, float p3)> _0xB094BC1DB4018240;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_AS_SHORT_RANGE;
			extern typed_lazy_func_t<void(bool p0, const char* name)> SET_MISSION_NAME;
			extern typed_lazy_func_t<void()> _0xEE4C0E6DBC6F2C6F;
			extern typed_lazy_func_t<void(bool toggle)> DISPLAY_HUD;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any p2, Any p3, Any p4, Any p5)> _0x0C5A80A9E096D529;
			extern typed_lazy_func_t<Pickup()> _0xB2A592B04648A9CB;
			extern typed_lazy_func_t<void()> _0xE6DE0561D9232A64;
			extern typed_lazy_func_t<void()> _DISPLAY_JOB_REPORT;
			extern typed_lazy_func_t<void()> CLEAR_REMINDER_MESSAGE;
			extern typed_lazy_func_t<void(int headDisplayId, bool p1)> _SET_MP_GAMER_TAG_ICONS;
			extern typed_lazy_func_t<int(int type, int image, const char* text)> _DRAW_NOTIFICATION_WITH_ICON;
			extern typed_lazy_func_t<bool(const char* p0, bool p1)> REGISTER_NAMED_RENDERTARGET;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> _SET_BLIP_CHECKED;
			extern typed_lazy_func_t<void(Any p0)> _0x7B21E0BB01E8224A;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2)> _0x551DF99658DB6EE8;
			extern typed_lazy_func_t<void(const char* p0)> _0x9E778248D6685FE0;
			extern typed_lazy_func_t<void(float x, float y)> END_TEXT_COMMAND_DISPLAY_TEXT;
			extern typed_lazy_func_t<void(bool p0)> _0xE67C6DFD386EA5E7;
			extern typed_lazy_func_t<void()> CLEAR_GPS_RACE_TRACK;
			extern typed_lazy_func_t<void(Any p0)> _0x77F16B447824DA6C;
			extern typed_lazy_func_t<void(bool p0)> _END_TEXT_COMMAND_OBJECTIVE;
			extern typed_lazy_func_t<void(int hudColorIndex, int r, int g, int b, int a)> _SET_HUD_COLOUR;
			extern typed_lazy_func_t<void(float posX, float posY, float posZ, float radius, int p4)> _0x72DD432F3CDFC0EE;
			extern typed_lazy_func_t<void(const char* labelName)> ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL;
			extern typed_lazy_func_t<void(int headDisplayId, const char* username, bool pointedClanTag, bool isRockstarClan, const char* clanTag, Any p5, int r, int g, int b)> _SET_MP_GAMER_TAG_COLOR;
			extern typed_lazy_func_t<void(Any p0, bool p1)> HIDE_SPECIAL_ABILITY_LOCKON_OPERATION;
			extern typed_lazy_func_t<float(bool p0)> _END_TEXT_COMMAND_GET_WIDTH;
			extern typed_lazy_func_t<int(Blip blip)> GET_BLIP_COLOUR;
			extern typed_lazy_func_t<void()> _0x95CF81BD06EE1887;
			extern typed_lazy_func_t<void(Blip blip, int alpha)> SET_BLIP_ALPHA;
			extern typed_lazy_func_t<void(Blip blip, bool toggle)> SET_BLIP_BRIGHT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> _0x788E7FD431BD67F1;
			extern typed_lazy_func_t<void(Any p0)> _0x0CF54F20DE43879C;
			extern typed_lazy_func_t<const char*()> _IS_LOADING_PROMPT_BEING_DISPLAYED;
			extern typed_lazy_func_t<int(bool blink, bool p1)> _DRAW_NOTIFICATION_4;
			extern typed_lazy_func_t<void(const char* p0)> CLEAR_THIS_PRINT;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> SET_USERIDS_UIHIDDEN;
			extern typed_lazy_func_t<void(bool p0)> _0x1185A8087587322C;
			extern typed_lazy_func_t<void(bool p0)> _0x57D760D55F54E071;
			extern typed_lazy_func_t<void()> _0xA4DEDE28B1814289;
			extern typed_lazy_func_t<Any()> _0xF284AC67940C6812;
			extern typed_lazy_func_t<void(bool p0)> _0x60734CC207C9833C;
			extern typed_lazy_func_t<float()> _0xE0130B41D3CF4574;
			extern typed_lazy_func_t<int()> GET_PAUSE_MENU_STATE;
			extern typed_lazy_func_t<void()> _0x75D3691713C3B05A;
			extern typed_lazy_func_t<void(int timestamp, int flags)> ADD_TEXT_COMPONENT_SUBSTRING_TIME;
			extern typed_lazy_func_t<void()> _0x402F9ED62087E898;
			extern typed_lazy_func_t<void(bool p0)> SET_TEXT_LEADING;
			extern typed_lazy_func_t<bool(Any p0, Any* p1, Any p2)> _0xCA6B2F7CE32AB653;
			extern typed_lazy_func_t<int(const char* STRING)> _GET_LENGTH_OF_STRING;
			extern typed_lazy_func_t<void(bool p0)> SET_TEXT_PROPORTIONAL;
			extern typed_lazy_func_t<void()> _0xCDCA26E80FAECB8F;
		} /* UI */
		namespace ROPE {
			extern typed_lazy_func_t<bool(Object* rope)> DOES_ROPE_EXIST;
			extern typed_lazy_func_t<void(Object* rope, bool toggle)> ROPE_DRAW_SHADOW_ENABLED;
			extern typed_lazy_func_t<int(Object rope)> GET_ROPE_VERTEX_COUNT;
			extern typed_lazy_func_t<void(Object rope, Entity entity)> DETACH_ROPE_FROM_ENTITY;
			extern typed_lazy_func_t<Any()> ROPE_UNLOAD_TEXTURES;
			extern typed_lazy_func_t<void(Object object, bool toggle)> SET_DISABLE_FRAG_DAMAGE;
			extern typed_lazy_func_t<Object(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int ropeType, float maxLength, float minLength, float p10, bool p11, bool p12, bool rigid, float p14, bool breakWhenShot, Any* unkPtr)> ADD_ROPE;
			extern typed_lazy_func_t<void(Object rope, int vertex, float x, float y, float z)> PIN_ROPE_VERTEX;
			extern typed_lazy_func_t<Any(Object rope, int vertex)> UNPIN_ROPE_VERTEX;
			extern typed_lazy_func_t<Any(Object rope, float length)> ROPE_FORCE_LENGTH;
			extern typed_lazy_func_t<void(Object rope, float length)> ROPE_RESET_LENGTH;
			extern typed_lazy_func_t<Any(Object rope, bool enabled)> SET_DISABLE_BREAKING;
			extern typed_lazy_func_t<Any(Object rope)> DELETE_CHILD_ROPE;
			extern typed_lazy_func_t<void(Object rope, Entity ent1, Entity ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, bool p10, bool p11, const char* boneName1, const char* boneName2)> ATTACH_ENTITIES_TO_ROPE;
			extern typed_lazy_func_t<Any(Object rope)> GET_ROPE_LAST_VERTEX_COORD;
			extern typed_lazy_func_t<void(Object rope)> STOP_ROPE_UNWINDING_FRONT;
			extern typed_lazy_func_t<Any()> ROPE_LOAD_TEXTURES;
			extern typed_lazy_func_t<bool()> ROPE_ARE_TEXTURES_LOADED;
			extern typed_lazy_func_t<Vector3(Object rope)> GET_CGOFFSET;
			extern typed_lazy_func_t<Any(Object rope, const char* rope_preset)> LOAD_ROPE_DATA;
			extern typed_lazy_func_t<void(Object rope)> START_ROPE_UNWINDING_FRONT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12, Any p13)> _0xBC0CE682D4D05650;
			extern typed_lazy_func_t<void(Object rope, int vertex, float value)> SET_DAMPING;
			extern typed_lazy_func_t<void(Any p0)> _0xCC6E963682533882;
			extern typed_lazy_func_t<bool(Any* p0)> _0x84DE3B5FB3E666F0;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xB743F735C03D7810;
			extern typed_lazy_func_t<float(Object rope)> _GET_ROPE_LENGTH;
			extern typed_lazy_func_t<void(float posX, float posY, float posZ, float vecX, float vecY, float vecZ, float impulse)> APPLY_IMPULSE_TO_CLOTH;
			extern typed_lazy_func_t<void(Object rope)> SET_CG_AT_BOUNDCENTER;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any p9, bool p10)> BREAK_ENTITY_GLASS;
			extern typed_lazy_func_t<bool(Object rope)> _0x271C9D3ACA5D6409;
			extern typed_lazy_func_t<void(Object rope, Entity entity, float x, float y, float z, bool p5)> ATTACH_ROPE_TO_ENTITY;
			extern typed_lazy_func_t<void(Object rope)> ROPE_SET_UPDATE_PINVERTS;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xDC57A637A20006ED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x36CCB9BE67B970FD;
			extern typed_lazy_func_t<void(Object rope)> START_ROPE_WINDING;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> _0xB1B6216CA2E7B55E;
			extern typed_lazy_func_t<void(Entity entity)> ACTIVATE_PHYSICS;
			extern typed_lazy_func_t<void(Object* rope)> DELETE_ROPE;
			extern typed_lazy_func_t<void(Object rope, float x, float y, float z)> SET_CGOFFSET;
			extern typed_lazy_func_t<void(Object rope)> STOP_ROPE_WINDING;
			extern typed_lazy_func_t<void(Object rope)> ROPE_CONVERT_TO_SIMPLE;
			extern typed_lazy_func_t<Any(Object rope, int vertex)> GET_ROPE_VERTEX_COORD;
		} /* ROPE */
		namespace SYSTEM {
			extern typed_lazy_func_t<void(int value)> SETTIMERA;
			extern typed_lazy_func_t<int(float value)> CEIL;
			extern typed_lazy_func_t<int(int value, int bitShift)> SHIFT_RIGHT;
			extern typed_lazy_func_t<int(float value)> FLOOR;
			extern typed_lazy_func_t<void(int* ms)> WAIT;
			extern typed_lazy_func_t<int(const char* scriptName, Any* args, int argCount, int stackSize)> START_NEW_SCRIPT_WITH_ARGS;
			extern typed_lazy_func_t<int()> TIMERA;
			extern typed_lazy_func_t<float()> TIMESTEP;
			extern typed_lazy_func_t<float(float value)> SIN;
			extern typed_lazy_func_t<int(int value, int bitShift)> SHIFT_LEFT;
			extern typed_lazy_func_t<int(Hash scriptHash, Any* args, int argCount, int stackSize)> START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS;
			extern typed_lazy_func_t<void(int value)> SETTIMERB;
			extern typed_lazy_func_t<float(float value)> COS;
			extern typed_lazy_func_t<float(float x, float y, float z)> VMAG2;
			extern typed_lazy_func_t<float(float x1, float y1, float z1, float x2, float y2, float z2)> VDIST;
			extern typed_lazy_func_t<float(int value)> TO_FLOAT;
			extern typed_lazy_func_t<float(float x1, float y1, float z1, float x2, float y2, float z2)> VDIST2;
			extern typed_lazy_func_t<int(float value)> ROUND;
			extern typed_lazy_func_t<int(const char* scriptName, int stackSize)> START_NEW_SCRIPT;
			extern typed_lazy_func_t<int(Hash scriptHash, int stackSize)> START_NEW_SCRIPT_WITH_NAME_HASH;
			extern typed_lazy_func_t<int()> TIMERB;
			extern typed_lazy_func_t<float(float value)> SQRT;
			extern typed_lazy_func_t<float(float base, float exponent)> POW;
			extern typed_lazy_func_t<float(float x, float y, float z)> VMAG;
		} /* SYSTEM */
		namespace PED {
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_HURT;
			extern typed_lazy_func_t<bool(Ped ped, Any event)> IS_PED_RESPONDING_TO_EVENT;
			extern typed_lazy_func_t<Vehicle(Ped ped)> SET_EXCLUSIVE_PHONE_RELATIONSHIPS;
			extern typed_lazy_func_t<bool(Ped ped)> CAN_KNOCK_PED_OFF_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, Ped attachPed, float p2, float p3, float p4, float p5, float p6, float p7, float p8, bool p9, bool p10)> SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xA660FAF550EB37E5;
			extern typed_lazy_func_t<void(Ped ped, int tintIndex)> SET_PED_PARACHUTE_TINT_INDEX;
			extern typed_lazy_func_t<Hash(Ped ped)> GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH;
			extern typed_lazy_func_t<void(Ped ped, Hash context)> SET_PED_IN_VEHICLE_CONTEXT;
			extern typed_lazy_func_t<void(Ped ped, int responseType)> SET_PED_TARGET_LOSS_RESPONSE;
			extern typed_lazy_func_t<void(int handle)> UNREGISTER_PEDHEADSHOT;
			extern typed_lazy_func_t<Any()> _0xE8A169E666CBC541;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_A_PLAYER;
			extern typed_lazy_func_t<bool()> CAN_CREATE_RANDOM_BIKE_RIDER;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_ENABLE_BOUND_ANKLES;
			extern typed_lazy_func_t<int(Ped ped, int componentId)> GET_PED_PROP_TEXTURE_INDEX;
			extern typed_lazy_func_t<Any(Ped ped, bool toggle)> SET_PED_DIES_WHEN_INJURED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xCEDA60A74219D064;
			extern typed_lazy_func_t<bool(Ped ped)> WAS_PED_KILLED_BY_TAKEDOWN;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_JUMPING_OUT_OF_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, int componentId, int drawableId, int textureId, int paletteId)> SET_PED_COMPONENT_VARIATION;
			extern typed_lazy_func_t<void(Ped ped, bool p1, bool p2, bool p3, bool p4)> KNOCK_OFF_PED_PROP;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x9A77DFD295E29B09;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_COMBAT_MOVEMENT;
			extern typed_lazy_func_t<void(Any p0, bool p1, Any p2, Any p3)> _0xCB968B53FC7F916D;
			extern typed_lazy_func_t<void(Ped ped, int* outTintIndex)> GET_PED_PARACHUTE_TINT_INDEX;
			extern typed_lazy_func_t<void(Any p0)> _0x733C87D4CE22BEA2;
			extern typed_lazy_func_t<int(Ped ped)> GET_SEAT_PED_IS_TRYING_TO_ENTER;
			extern typed_lazy_func_t<void(Any p0, bool p1)> SET_TIME_EXCLUSIVE_DISPLAY_TEXTURE;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_VISUAL_FIELD_MAX_ANGLE;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0x2B694AFCF64E6994;
			extern typed_lazy_func_t<void(Any p0)> _0x7D7A2E43E74E2EB8;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0x52D59AB61DDC05DD;
			extern typed_lazy_func_t<Any(Ped ped)> SET_PED_RAGDOLL_FORCE_FALL;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xCD018C591F94CB43;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0x49E50BDB8BA4DAB2;
			extern typed_lazy_func_t<void(Ped ped)> RESET_PED_IN_VEHICLE_CONTEXT;
			extern typed_lazy_func_t<Any(Ped ped)> _0x6585D955A68452A5;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> _0xFE07FF6495D52E2A;
			extern typed_lazy_func_t<bool(Ped ped, Vehicle vehicle)> IS_PED_SITTING_IN_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_MAX_TIME_IN_WATER;
			extern typed_lazy_func_t<bool(int colorID)> _IS_PED_HAIR_COLOR_VALID;
			extern typed_lazy_func_t<Any(Ped ped, bool toggle)> SET_PED_ENABLE_WEAPON_BLOCKING;
			extern typed_lazy_func_t<void(int sceneID, float rate)> SET_SYNCHRONIZED_SCENE_RATE;
			extern typed_lazy_func_t<void(Any sceneID, bool p1)> _SET_SYNCHRONIZED_SCENE_OCCLUSION_PORTAL;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x061CB768363D6424;
			extern typed_lazy_func_t<void(Hash groupHash)> REMOVE_RELATIONSHIP_GROUP;
			extern typed_lazy_func_t<Ped(int groupID)> _GET_PED_AS_GROUP_LEADER;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_MELEE_COMBAT;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_JUMPING;
			extern typed_lazy_func_t<void(Ped ped, Any p1, float p2, float p3, Any* p4)> APPLY_PED_BLOOD_BY_ZONE;
			extern typed_lazy_func_t<bool(int handle)> IS_PEDHEADSHOT_VALID;
			extern typed_lazy_func_t<void(Ped ped, const char* damagePack, float damage, float mult)> APPLY_PED_DAMAGE_PACK;
			extern typed_lazy_func_t<void(Ped ped, float height)> SET_PED_WETNESS_HEIGHT;
			extern typed_lazy_func_t<void(Ped ped, int index)> SET_PED_GROUP_MEMBER_PASSENGER_INDEX;
			extern typed_lazy_func_t<Any(Any p0)> _0x953563CE563143AF;
			extern typed_lazy_func_t<float(Ped ped)> GET_PED_ENVEFF_SCALE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_GETTING_INTO_A_VEHICLE;
			extern typed_lazy_func_t<Any(Any p0)> _0x1E77FA7A62EE6C4C;
			extern typed_lazy_func_t<bool(Ped ped, const char* scenario)> IS_PED_USING_SCENARIO;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x78C4E9961DB3EB5B;
			extern typed_lazy_func_t<bool(Ped ped, Entity* evadingEntity)> IS_PED_EVASIVE_DIVING;
			extern typed_lazy_func_t<void(Ped ped, bool canWearHelmet)> SET_PED_HELMET;
			extern typed_lazy_func_t<int(Ped ped, int boneId)> GET_PED_BONE_INDEX;
			extern typed_lazy_func_t<Any()> _0xF445DE8DA80A1792;
			extern typed_lazy_func_t<Any(Any p0)> _0x511F1A683387C7E2;
			extern typed_lazy_func_t<void(bool toggle)> _0xF2BEBCDFAFDAA19E;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_SEEING_RANGE;
			extern typed_lazy_func_t<Hash(Ped ped)> GET_PED_RELATIONSHIP_GROUP_HASH;
			extern typed_lazy_func_t<void(Ped ped)> RESET_PED_WEAPON_MOVEMENT_CLIPSET;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> REMOVE_PED_DEFENSIVE_AREA;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_BE_TARGETED_WHEN_INJURED;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_DIES_INSTANTLY_IN_WATER;
			extern typed_lazy_func_t<void(Ped ped, int propIndex)> SET_PED_HELMET_PROP_INDEX;
			extern typed_lazy_func_t<void(bool p0)> _0x9911F4A24485F653;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_PLANTING_BOMB;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_BEING_JACKED;
			extern typed_lazy_func_t<Player(Ped ped)> GET_PLAYER_PED_IS_FOLLOWING;
			extern typed_lazy_func_t<void(Ped ped, int propId)> CLEAR_PED_PROP;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_WETNESS;
			extern typed_lazy_func_t<void(Ped ped, Ped lookAt)> SET_PED_PRIMARY_LOOKAT;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_MAX_HEALTH;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_MAX_TIME_UNDERWATER;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> _0x25361A96E0F7E419;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_COWER_IN_COVER;
			extern typed_lazy_func_t<Any(Ped ped, int accuracy)> SET_PED_ACCURACY;
			extern typed_lazy_func_t<void(Ped pedHandle, int groupHandle, bool toggle)> SET_PED_CAN_TELEPORT_TO_GROUP_LEADER;
			extern typed_lazy_func_t<void(Ped ped)> RESET_PED_STRAFE_CLIPSET;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_GENERATES_DEAD_BODY_EVENTS;
			extern typed_lazy_func_t<bool(Ped ped)> _0x7350823473013C02;
			extern typed_lazy_func_t<bool(int handle)> IS_PEDHEADSHOT_READY;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_STEERS_AROUND_OBJECTS;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_SHOOTING;
			extern typed_lazy_func_t<Ped(Vehicle vehicle, bool returnHandle)> CREATE_RANDOM_PED_AS_DRIVER;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_GROUP_INDEX;
			extern typed_lazy_func_t<void(bool toggle)> SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_AS_ENEMY;
			extern typed_lazy_func_t<void(Any p0)> _0x1280804F7CFD2D6C;
			extern typed_lazy_func_t<void(Ped ped, int boneIndex, float xRot, float yRot, float zRot, const char* woundType)> APPLY_PED_BLOOD;
			extern typed_lazy_func_t<void(Ped ped, int amount)> SET_PED_ARMOUR;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x2F3C3D9F50681DE4;
			extern typed_lazy_func_t<Any(Ped ped, Any p1)> _0x36B77BB84687C318;
			extern typed_lazy_func_t<int(Ped ped, int propId, int drawableId)> GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_USING_ACTION_MODE;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float radius, bool p5, bool p6)> SET_PED_SPHERE_DEFENSIVE_AREA;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2, bool p6, bool p7)> IS_ANY_PED_SHOOTING_IN_AREA;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_PARACHUTE_LANDING_TYPE;
			extern typed_lazy_func_t<void(Ped ped, float range)> SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_ALLOWED_TO_DUCK;
			extern typed_lazy_func_t<void(Ped ped, int overlayID, int index, float opacity)> SET_PED_HEAD_OVERLAY;
			extern typed_lazy_func_t<bool(Any p0)> _0xF41B5D290C99A3D6;
			extern typed_lazy_func_t<void(Any p0)> _0x5AAB586FFEC0FD96;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x83A169EABCDB10A2;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x1216E0BFA72CC703;
			extern typed_lazy_func_t<bool(Ped ped, int* outBone)> GET_PED_LAST_DAMAGE_BONE;
			extern typed_lazy_func_t<void(Ped ped, float angle)> SET_PED_VISUAL_FIELD_CENTER_ANGLE;
			extern typed_lazy_func_t<void(int groupHandle, float separationRange)> SET_GROUP_SEPARATION_RANGE;
			extern typed_lazy_func_t<bool(Ped ped)> _IS_PED_STANDING_IN_COVER;
			extern typed_lazy_func_t<Vehicle(Ped ped)> GET_VEHICLE_PED_IS_TRYING_TO_ENTER;
			extern typed_lazy_func_t<void(Any p0)> _0xC79196DCB36F6121;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_MODEL_IS_SUPPRESSED;
			extern typed_lazy_func_t<Any(Any p0, float p1, float p2, float p3, float p4)> _0x336B3D200AB007CB;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x2B5AA717A181FB4C;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_DUCKING;
			extern typed_lazy_func_t<void(Ped ped, bool p1, const char* action)> SET_PED_STEALTH_MOVEMENT;
			extern typed_lazy_func_t<void(Ped ped)> REMOVE_PED_PREFERRED_COVER_SET;
			extern typed_lazy_func_t<void(Ped ped, Any p1)> SET_PED_RESERVE_PARACHUTE_TINT_INDEX;
			extern typed_lazy_func_t<Ped(Ped ped)> GET_PEDS_JACKER;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_RUNNING_RAGDOLL_TASK;
			extern typed_lazy_func_t<bool(Ped ped)> WAS_PED_SKELETON_UPDATED;
			extern typed_lazy_func_t<void(Any p0)> _0x570389D1C3DE3C6B;
			extern typed_lazy_func_t<void(const char* asset)> REMOVE_ACTION_MODE_ASSET;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_ON_FOOT;
			extern typed_lazy_func_t<void(Ped ped, float radius, int maxFriends)> SET_PED_TO_INFORM_RESPECTED_FRIENDS;
			extern typed_lazy_func_t<void(Ped ped, const char* animName, const char* animDict)> PLAY_FACIAL_ANIM;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_TORSO_IK;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_ARMOUR;
			extern typed_lazy_func_t<bool(Ped ped)> GET_PED_STEALTH_MOVEMENT;
			extern typed_lazy_func_t<void(Ped ped, int r, int g, int b, int p4)> _0xCC9682B8951C5229;
			extern typed_lazy_func_t<bool(Ped ped, int time1, int time2, int ragdollType, bool p4, bool p5, bool p6)> SET_PED_TO_RAGDOLL;
			extern typed_lazy_func_t<bool(Ped ped1, Ped ped2)> _CAN_PED_SEE_PED;
			extern typed_lazy_func_t<bool(Ped ped, const char* animDict, const char* anim)> IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM;
			extern typed_lazy_func_t<void(Ped ped, int p1, int p2, int p3)> _0xD69411AA0CEBF9E9;
			extern typed_lazy_func_t<void(int sceneID, float phase)> SET_SYNCHRONIZED_SCENE_PHASE;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_MOVE_RATE_OVERRIDE;
			extern typed_lazy_func_t<Any(Ped ped)> GET_PED_COMBAT_RANGE;
			extern typed_lazy_func_t<Vector3(Ped ped, bool worldSpace)> GET_PED_EXTRACTED_DISPLACEMENT;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_WEARING_HELMET;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_PERFORMING_STEALTH_KILL;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> GET_PED_FLOOD_INVINCIBILITY;
			extern typed_lazy_func_t<Any()> _0x876928DDDFCCC9CD;
			extern typed_lazy_func_t<void(Ped ped)> _0xED3C76ADFA6D07C4;
			extern typed_lazy_func_t<Hash(Ped ped)> GET_PED_CAUSE_OF_DEATH;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_DIES_IN_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> SET_PED_RANDOM_COMPONENT_VARIATION;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_RUNNING_MOBILE_PHONE_TASK;
			extern typed_lazy_func_t<void(Ped ped, int p1)> SET_PED_COMBAT_RANGE;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE;
			extern typed_lazy_func_t<Vector3(const char* animDict, const char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9)> GET_ANIM_INITIAL_OFFSET_POSITION;
			extern typed_lazy_func_t<bool(Ped ped, float x, float y, float z, float range)> _0x68772DB2B2526F9F;
			extern typed_lazy_func_t<void(Ped ped, int index)> _SET_PED_EYE_COLOR;
			extern typed_lazy_func_t<int()> _GET_NUM_MAKEUP_COLORS;
			extern typed_lazy_func_t<Any(Hash modelHash, Any p1, Any p2)> _0xC56FBF2F228E1DAC;
			extern typed_lazy_func_t<bool(Ped ped)> _0x784002A632822099;
			extern typed_lazy_func_t<void(int groupID, Any* unknown, int* sizeInMembers)> GET_GROUP_SIZE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_ANY_SUB;
			extern typed_lazy_func_t<bool(Ped ped, bool exceptUseWeapon)> IS_PED_IN_COVER;
			extern typed_lazy_func_t<void(Ped ped, int value)> SET_PED_ALERTNESS;
			extern typed_lazy_func_t<bool(Ped ped)> _0xA3F3564A5B3646C0;
			extern typed_lazy_func_t<void(Ped ped, float p1)> SET_SCRIPTED_ANIM_SEAT_OFFSET;
			extern typed_lazy_func_t<int(Ped ped)> REGISTER_PEDHEADSHOT;
			extern typed_lazy_func_t<void()> CLEAR_PED_NON_CREATION_AREA;
			extern typed_lazy_func_t<bool(Ped ped)> IS_CONVERSATION_PED_DEAD;
			extern typed_lazy_func_t<void(Ped ped, float heading)> SET_PED_DESIRED_HEADING;
			extern typed_lazy_func_t<bool(int sceneId)> IS_SYNCHRONIZED_SCENE_RUNNING;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> _0xAFC976FD0580C7B3;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_BE_TARGETED_WITHOUT_LOS;
			extern typed_lazy_func_t<void(Ped ped, float radius)> REGISTER_HATED_TARGETS_AROUND_PED;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0x425AECF167663F48;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x5B6010B3CBC29095;
			extern typed_lazy_func_t<bool(Ped ped)> _0x61767F73EACEED21;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_STEERS_AROUND_PEDS;
			extern typed_lazy_func_t<bool(int sceneID)> IS_SYNCHRONIZED_SCENE_LOOPED;
			extern typed_lazy_func_t<void(float p0, Any p1)> _0xFF4803BC019852D9;
			extern typed_lazy_func_t<void()> RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_DIVING;
			extern typed_lazy_func_t<bool(Any p0)> _0xED6D8E27A43B8CDE;
			extern typed_lazy_func_t<void(Any p0)> _0xB50EB4CCB29704AC;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_ENABLE_SCUBA;
			extern typed_lazy_func_t<int()> _GET_NUM_HAIR_COLORS;
			extern typed_lazy_func_t<void(Any p0)> _0xF1C03A5352243A30;
			extern typed_lazy_func_t<int(Ped ped, int* sizeAndVehs)> GET_PED_NEARBY_VEHICLES;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2, Any* p3)> _0x280C7E3AC7F56E90;
			extern typed_lazy_func_t<void(float value)> SET_AI_WEAPON_DAMAGE_MODIFIER;
			extern typed_lazy_func_t<void(Ped ped, const char* clipset)> SET_PED_DRIVE_BY_CLIPSET_OVERRIDE;
			extern typed_lazy_func_t<void(Ped ped, Any p1, float p2, float p3, Any p4)> APPLY_PED_BLOOD_DAMAGE_BY_ZONE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_SWIMMING_UNDER_WATER;
			extern typed_lazy_func_t<void(Any p0, const char* p1)> _0x9DBA107B4937F809;
			extern typed_lazy_func_t<void(Ped ped, int index, float scale)> _SET_PED_FACE_FEATURE;
			extern typed_lazy_func_t<int(Ped ped, int componentId)> GET_PED_PROP_INDEX;
			extern typed_lazy_func_t<void(int sceneID)> DETACH_SYNCHRONIZED_SCENE;
			extern typed_lazy_func_t<void()> _0xFEE4A5459472A9F8;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_BE_TARGETTED;
			extern typed_lazy_func_t<void(Ped ped, int damageAmount, bool p2)> APPLY_DAMAGE_TO_PED;
			extern typed_lazy_func_t<void(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int skinFirstID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, bool isParent)> SET_PED_HEAD_BLEND_DATA;
			extern typed_lazy_func_t<void(Ped ped, float p1, float p2, float p3, float p4, float p5, float p6, float p7, bool p8, bool p9)> SET_PED_ANGLED_DEFENSIVE_AREA;
			extern typed_lazy_func_t<void(Any p0, Any p1)> SET_PED_CLOTH_PRONE;
			extern typed_lazy_func_t<void(Any p0)> _0x600048C60D5C2C51;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2)> IS_COP_PED_IN_AREA_3D;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_SUFFERS_CRITICAL_HITS;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_FLEEING;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_TO_LOAD_COVER;
			extern typed_lazy_func_t<bool(const char* asset)> HAS_ACTION_MODE_ASSET_LOADED;
			extern typed_lazy_func_t<void(int groupId, int formationType)> SET_GROUP_FORMATION;
			extern typed_lazy_func_t<bool(Ped ped)> _0xEBD0EDBA5BE957CF;
			extern typed_lazy_func_t<bool()> CAN_CREATE_RANDOM_COPS;
			extern typed_lazy_func_t<void(Ped ped)> _0xC2EE020F5FB4DB53;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, bool toggle)> SET_PED_SHOOTS_AT_COORD;
			extern typed_lazy_func_t<Entity(Ped ped)> GET_PED_SOURCE_OF_DEATH;
			extern typed_lazy_func_t<void(Ped ped, const char* name)> SET_PED_NAME_DEBUG;
			extern typed_lazy_func_t<void()> STOP_ANY_PED_MODEL_BEING_SUPPRESSED;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_PLAY_GESTURE_ANIMS;
			extern typed_lazy_func_t<void(Ped ped, float angle)> SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE;
			extern typed_lazy_func_t<void(Ped ped, int value)> SET_PED_MAX_HEALTH;
			extern typed_lazy_func_t<int(Ped ped, int componentId, int drawableId)> GET_NUMBER_OF_PED_TEXTURE_VARIATIONS;
			extern typed_lazy_func_t<int(Ped ped, int propId)> GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS;
			extern typed_lazy_func_t<int(int type)> _GET_NUM_PARENT_PEDS_OF_TYPE;
			extern typed_lazy_func_t<Any(Ped ped, int slot, int drawableId, int textureId)> _0x39D55A620FCB6A3A;
			extern typed_lazy_func_t<bool(Ped ped)> _0xD1871251F3B5ACD7;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_HEAD_IK;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT;
			extern typed_lazy_func_t<void(Ped ped, const char* p1)> _0x781DE8FA214E87D2;
			extern typed_lazy_func_t<void(const char* asset)> REQUEST_ACTION_MODE_ASSET;
			extern typed_lazy_func_t<void(Ped ped, Ped targetPed)> CLONE_PED_TO_TARGET;
			extern typed_lazy_func_t<bool(Ped ped, Ped target)> IS_PED_IN_COMBAT;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> _0x9E30E91FB03A2CAF;
			extern typed_lazy_func_t<void(Ped ped, Ped father, Ped mother, float fathersSide, float mothersSide)> SET_PED_BLEND_FROM_PARENTS;
			extern typed_lazy_func_t<void(Ped ped)> SET_PED_WETNESS_ENABLED_THIS_FRAME;
			extern typed_lazy_func_t<bool()> CAN_CREATE_RANDOM_DRIVER;
			extern typed_lazy_func_t<void(Ped ped, int stance, const char* animDictionary, const char* animationName, float p4, bool p5)> SET_PED_ALTERNATE_MOVEMENT_ANIM;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0x6647C5F6F5792496;
			extern typed_lazy_func_t<void(Ped ped, int groupId)> SET_PED_AS_GROUP_MEMBER;
			extern typed_lazy_func_t<bool(Ped ped, int p1)> IS_PED_BEING_STUNNED;
			extern typed_lazy_func_t<void(int sceneID, bool toggle)> SET_SYNCHRONIZED_SCENE_LOOPED;
			extern typed_lazy_func_t<bool(Ped ped)> _0xDCCA191DF9980FD7;
			extern typed_lazy_func_t<void(Ped ped, Vehicle vehicle, int seatIndex)> SET_PED_INTO_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_KEEP_TASK;
			extern typed_lazy_func_t<void(Ped ped)> SET_PED_RANDOM_PROPS;
			extern typed_lazy_func_t<void(Ped ped, Ped target)> REGISTER_TARGET;
			extern typed_lazy_func_t<void(Ped ped, Any p1, float p2, float p3, float p4, float p5, Any p6, float p7, Any* p8)> APPLY_PED_BLOOD_SPECIFIC;
			extern typed_lazy_func_t<void(float x, float y, float z, float range, int p4)> SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA;
			extern typed_lazy_func_t<bool(int p0)> _0x451294E859ECC018;
			extern typed_lazy_func_t<Any()> _0x3C67506996001F5E;
			extern typed_lazy_func_t<Ped(float x, float y, float z, float xRadius, float yRadius, float zRadius, int pedType)> GET_RANDOM_PED_AT_COORD;
			extern typed_lazy_func_t<bool(Any p0)> _0x7F2F4F13AC5257EF;
			extern typed_lazy_func_t<void(Pickup p0, Any p1, Blip* p2)> _0xE861D0B05C7662B8;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_AIMING_FROM_COVER;
			extern typed_lazy_func_t<void(int relationship, Hash group1, Hash group2)> SET_RELATIONSHIP_BETWEEN_GROUPS;
			extern typed_lazy_func_t<void(Ped ped)> _0x4668D80430D6C299;
			extern typed_lazy_func_t<void(Ped ped)> _0xA21C118553BBDF02;
			extern typed_lazy_func_t<void(Ped driver, float ability)> SET_DRIVER_ABILITY;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> _0xEC6935EBE0847B90;
			extern typed_lazy_func_t<bool(Any p0)> _0xF2385935BFFD4D92;
			extern typed_lazy_func_t<int(Ped ped, int componentId)> GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS;
			extern typed_lazy_func_t<bool(Any p0)> _0xFEC9A3B1820F3331;
			extern typed_lazy_func_t<void(Ped ped)> GIVE_PED_NM_MESSAGE;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius)> IS_ANY_PED_NEAR_POINT;
			extern typed_lazy_func_t<void(Ped ped, bool toggle, bool p2)> SET_CAN_ATTACK_FRIENDLY;
			extern typed_lazy_func_t<void(Ped ped, float p1)> RESET_PED_MOVEMENT_CLIPSET;
			extern typed_lazy_func_t<int(Any p0)> _0xEA9960D07DADCF10;
			extern typed_lazy_func_t<bool(int colorID)> _IS_PED_BLUSH_COLOR_VALID;
			extern typed_lazy_func_t<bool(Ped ped, bool p1)> _0xBA63D9FE45412247;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_BLOOD_DAMAGE;
			extern typed_lazy_func_t<void(Ped ped, int p1)> _0x1A330D297AAC6BC1;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_ENVEFF_SCALE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_ALLOW_VEHICLES_OVERRIDE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_ON_ANY_BIKE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_STEERS_AROUND_VEHICLES;
			extern typed_lazy_func_t<const char*(int handle)> GET_PEDHEADSHOT_TXD_STRING;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_GOING_INTO_COVER;
			extern typed_lazy_func_t<void(Ped ped, float p1, float p2, float p3, float p4, float p5)> SET_PED_BOUNDS_ORIENTATION;
			extern typed_lazy_func_t<void(Ped ped, Hash collection, Hash overlay)> _SET_PED_DECORATION;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_PLAY_AMBIENT_ANIMS;
			extern typed_lazy_func_t<Ped(Ped ped)> GET_MELEE_TARGET_FOR_PED;
			extern typed_lazy_func_t<void(int sceneID, float x, float y, float z, float roll, float pitch, float yaw, bool p7)> SET_SYNCHRONIZED_SCENE_ORIGIN;
			extern typed_lazy_func_t<bool(Ped ped, Ped otherPed, float angle)> IS_PED_FACING_PED;
			extern typed_lazy_func_t<bool(Ped ped)> _0x26AF0E8E30BD2A2C;
			extern typed_lazy_func_t<void(Any p0)> _0xA3A9299C4F2ADB98;
			extern typed_lazy_func_t<void(Ped ped)> _0xD33DAA36272177C4;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_INJURED;
			extern typed_lazy_func_t<Ped(Ped ped)> GET_MOUNT;
			extern typed_lazy_func_t<bool(Ped ped, Any* headBlendData)> _GET_PED_HEAD_BLEND_DATA;
			extern typed_lazy_func_t<void(Ped ped, int helmetFlag)> SET_PED_HELMET_FLAG;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE;
			extern typed_lazy_func_t<void(const char* asset)> REQUEST_STEALTH_MODE_ASSET;
			extern typed_lazy_func_t<void(float x, float y, float z)> SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_RAGDOLL;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_ARM_IK;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_ANY_TAXI;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_PRONE;
			extern typed_lazy_func_t<void(Ped ped)> RESET_PED_RAGDOLL_TIMER;
			extern typed_lazy_func_t<void(Ped ped, Hash hash)> SET_PED_RELATIONSHIP_GROUP_HASH;
			extern typed_lazy_func_t<void(Ped ped, int p1, float p2, float p3, float p4, float p5, float p6, int p7, bool p8, const char* p9)> APPLY_PED_DAMAGE_DECAL;
			extern typed_lazy_func_t<void(Ped ped, int p1, const char* p2)> CLEAR_PED_DAMAGE_DECAL_BY_ZONE;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0xF5846EDB26A98A24;
			extern typed_lazy_func_t<bool(Ped ped, int flagId)> GET_PED_RESET_FLAG;
			extern typed_lazy_func_t<void(Ped* ped)> DELETE_PED;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash)> EXPLODE_PED_HEAD;
			extern typed_lazy_func_t<void(int groupId)> REMOVE_GROUP;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_TYPE;
			extern typed_lazy_func_t<void(Ped ped, int flagId, bool value)> SET_PED_CONFIG_FLAG;
			extern typed_lazy_func_t<void(Ped ped)> REVIVE_INJURED_PED;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0xF9ACF4A08098EA25;
			extern typed_lazy_func_t<Ped(int pedType, Hash modelHash, float x, float y, float z, float heading, bool isNetwork, bool thisScriptCheck)> CREATE_PED;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_ANY_HELI;
			extern typed_lazy_func_t<void(Ped driver, float p1)> _0xDED5AF5A0EA4B297;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_RAGDOLL;
			extern typed_lazy_func_t<bool(Any p0, Any p1, float p2, float p3, float p4, float p5)> _0x06087579E7AA85A9;
			extern typed_lazy_func_t<bool(Ped ped, Hash modelHash)> IS_PED_IN_MODEL;
			extern typed_lazy_func_t<void(float modifier)> SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER;
			extern typed_lazy_func_t<void(Ped ped, Hash patternHash)> SET_PED_FIRING_PATTERN;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_ENABLE_HANDCUFFS;
			extern typed_lazy_func_t<bool(Ped ped)> WAS_PED_KILLED_BY_STEALTH;
			extern typed_lazy_func_t<int(Ped ped, int bone)> GET_PED_RAGDOLL_BONE_INDEX;
			extern typed_lazy_func_t<int(float x, float y, float z, float radius, Hash object)> _CREATE_SYNCHRONIZED_SCENE_2;
			extern typed_lazy_func_t<void(Ped ped, int shootRate)> SET_PED_SHOOT_RATE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_STOPPED;
			extern typed_lazy_func_t<bool(Ped ped, int componentId, int drawableId, int textureId)> IS_PED_COMPONENT_VARIATION_VALID;
			extern typed_lazy_func_t<int(Ped ped, int overlayID)> _GET_PED_HEAD_OVERLAY_VALUE;
			extern typed_lazy_func_t<void()> REMOVE_SCENARIO_BLOCKING_AREAS;
			extern typed_lazy_func_t<void(Ped ped, int attributes, bool p2)> SET_PED_FLEE_ATTRIBUTES;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_DIES_IN_SINKING_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped)> KNOCK_PED_OFF_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped)> _0xF79F9DEF0AADE61A;
			extern typed_lazy_func_t<void(Ped ped, int flags)> _SET_PED_RAGDOLL_BLOCKING_FLAGS;
			extern typed_lazy_func_t<void(Any p0, bool p1)> REMOVE_SCENARIO_BLOCKING_AREA;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_USING_ANY_SCENARIO;
			extern typed_lazy_func_t<void(Ped ped, int flagId, bool doReset)> SET_PED_RESET_FLAG;
			extern typed_lazy_func_t<void(Ped ped, int overlayID, int colorType, int colorID, int secondColorID)> _SET_PED_HEAD_OVERLAY_COLOR;
			extern typed_lazy_func_t<void()> _0x4759CC730F947C81;
			extern typed_lazy_func_t<int(Hash group1, Hash group2)> GET_RELATIONSHIP_BETWEEN_GROUPS;
			extern typed_lazy_func_t<void(bool toggle)> SET_CREATE_RANDOM_COPS;
			extern typed_lazy_func_t<Any(Any p0)> _0xAAA6A3698A69E048;
			extern typed_lazy_func_t<bool(Ped ped, int time, int p2, int ragdollType, float x, float y, float z, float p7, float p8, float p9, float p10, float p11, float p12, float p13)> SET_PED_TO_RAGDOLL_WITH_FALL;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_SWITCH_WEAPON;
			extern typed_lazy_func_t<void(float multiplier)> SET_PED_DENSITY_MULTIPLIER_THIS_FRAME;
			extern typed_lazy_func_t<Any()> _0xEBB376779A760AA8;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_VAULTING;
			extern typed_lazy_func_t<void(Ped ped, int ms)> SET_PED_MIN_GROUND_TIME_FOR_STUNGUN;
			extern typed_lazy_func_t<void(Any p0)> _0x80054D7FCC70EEC6;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _SET_PED_CAN_PLAY_INJURED_ANIMS;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0x288DF530C92DAD6F;
			extern typed_lazy_func_t<bool(int groupId)> DOES_GROUP_EXIST;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_ALERTNESS;
			extern typed_lazy_func_t<void(Ped ped, int mode)> SET_PED_LEG_IK_MODE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_BEING_STEALTH_KILLED;
			extern typed_lazy_func_t<bool(Ped ped)> HAS_PED_HEAD_BLEND_FINISHED;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_EVASIVE_DIVE;
			extern typed_lazy_func_t<void(Any p0)> _0x5D517B27CF6ECD04;
			extern typed_lazy_func_t<Ped(Ped ped, float heading, bool isNetwork, bool thisScriptCheck)> CLONE_PED;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_SITTING_IN_ANY_VEHICLE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_CLIMBING;
			extern typed_lazy_func_t<void(Ped ped, int combatType, float p2)> SET_COMBAT_FLOAT;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_GROUP;
			extern typed_lazy_func_t<Ped(Vehicle vehicle, int pedType, Hash modelHash, int seat, bool isNetwork, bool thisScriptCheck)> CREATE_PED_INSIDE_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_HEARING_RANGE;
			extern typed_lazy_func_t<int(Ped ped, int* sizeAndPeds, int ignore)> GET_PED_NEARBY_PEDS;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_ANY_POLICE_VEHICLE;
			extern typed_lazy_func_t<void(Ped ped, const char* clipSet, float p2)> SET_PED_MOVEMENT_CLIPSET;
			extern typed_lazy_func_t<int(Ped ped, int componentId)> GET_PED_DRAWABLE_VARIATION;
			extern typed_lazy_func_t<void(Ped ped)> RESURRECT_PED;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_FACIAL_IDLE_ANIM_OVERRIDE;
			extern typed_lazy_func_t<Any(Any p0)> _0x9D728C1E12BF5518;
			extern typed_lazy_func_t<Ped(float posX, float posY, float posZ)> CREATE_RANDOM_PED;
			extern typed_lazy_func_t<Vector3(Ped ped, bool p1)> GET_PED_DEFENSIVE_AREA_POSITION;
			extern typed_lazy_func_t<bool(bool unk)> CAN_CREATE_RANDOM_PED;
			extern typed_lazy_func_t<void(Ped ped, int combatMovement)> SET_PED_COMBAT_MOVEMENT;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_MALE;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> _0xEEED8FAFEC331A70;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_LAST_DAMAGE_BONE;
			extern typed_lazy_func_t<void(Ped ped)> FORCE_PED_TO_OPEN_PARACHUTE;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_ID_RANGE;
			extern typed_lazy_func_t<void(Ped ped, int p1)> SET_PED_COMBAT_ABILITY;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_ON_VEHICLE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_FALLING;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_FATALLY_INJURED;
			extern typed_lazy_func_t<void(Ped ped)> REMOVE_PED_FROM_GROUP;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xA9B61A329BFDCBEA;
			extern typed_lazy_func_t<bool(Ped ped, Vehicle vehicle, bool atGetIn)> IS_PED_IN_VEHICLE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_DOING_DRIVEBY;
			extern typed_lazy_func_t<void(Any p0)> _0xE6CA85E7259CE16B;
			extern typed_lazy_func_t<void(Ped ped, Ped target, float xOffset, float yOffset, float zOffset, float radius, bool p6)> SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED;
			extern typed_lazy_func_t<void()> _0x5A7F62FDA59759BD;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_AS_COP;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_TRACKED;
			extern typed_lazy_func_t<Vehicle(Ped ped, bool lastVehicle)> GET_VEHICLE_PED_IS_IN;
			extern typed_lazy_func_t<Vehicle(Ped ped)> GET_VEHICLE_PED_IS_USING;
			extern typed_lazy_func_t<void(Ped ped, int p1)> CLEAR_PED_BLOOD_DAMAGE_BY_ZONE;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0xE43A13C9E4CCCBCF;
			extern typed_lazy_func_t<bool(Any p0)> _0xF0DAEF2F545BEE25;
			extern typed_lazy_func_t<Any()> _0xA635C11B8C44AFC2;
			extern typed_lazy_func_t<void(int groupId, float p1, float p2, float p3)> SET_GROUP_FORMATION_SPACING;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE;
			extern typed_lazy_func_t<bool(Any p0)> _0x3E802F11FBE27674;
			extern typed_lazy_func_t<bool(int colorID)> _IS_PED_LIPSTICK_COLOR_VALID;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x2016C603D6B8987C;
			extern typed_lazy_func_t<void(Ped ped, float p1)> _0x110F526AB784111F;
			extern typed_lazy_func_t<void(Ped ped, const char* animDict, const char* animName, float p3, bool p4)> SET_PED_ALTERNATE_WALK_ANIM;
			extern typed_lazy_func_t<int(int overlayID)> _GET_NUM_HEAD_OVERLAY_VALUES;
			extern typed_lazy_func_t<bool(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, bool p7, bool p8)> IS_PED_SHOOTING_IN_AREA;
			extern typed_lazy_func_t<void(Ped ped, int state)> SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE;
			extern typed_lazy_func_t<int(Ped ped, int componentId)> GET_PED_PALETTE_VARIATION;
			extern typed_lazy_func_t<void(Ped ped, int flags)> _RESET_PED_RAGDOLL_BLOCKING_FLAGS;
			extern typed_lazy_func_t<void(Ped ped, Hash collection, Hash overlay)> _SET_PED_FACIAL_DECORATION;
			extern typed_lazy_func_t<bool(Ped ped)> IS_TRACKED_PED_VISIBLE;
			extern typed_lazy_func_t<void(Ped ped, Player player, bool toggle)> SET_PED_CAN_BE_TARGETTED_BY_PLAYER;
			extern typed_lazy_func_t<bool(Ped ped, int groupId)> IS_PED_GROUP_MEMBER;
			extern typed_lazy_func_t<void(Ped ped, float sweat)> SET_PED_SWEAT;
			extern typed_lazy_func_t<bool(Ped ped, Hash modelHash)> IS_PED_MODEL;
			extern typed_lazy_func_t<void(Ped ped, Hash hash)> SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH;
			extern typed_lazy_func_t<void(Ped ped)> SET_PED_DEFAULT_COMPONENT_VARIATION;
			extern typed_lazy_func_t<bool(Ped ped, int flagId, bool p2)> GET_PED_CONFIG_FLAG;
			extern typed_lazy_func_t<void(Ped ped, bool p1, Any p2, const char* action)> SET_PED_USING_ACTION_MODE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_STAY_IN_VEHICLE_WHEN_JACKED;
			extern typed_lazy_func_t<void(Ped ped, int stance, float p2)> CLEAR_PED_ALTERNATE_MOVEMENT_ANIM;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_BE_DRAGGED_OUT;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_HUMAN;
			extern typed_lazy_func_t<void(Ped ped)> RESET_PED_LAST_VEHICLE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_PARACHUTE_FREE_FALL;
			extern typed_lazy_func_t<int(Ped ped)> _0x1E98817B311AE98A;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x576594E8D64375E2;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_VISUAL_FIELD_MIN_ANGLE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_NEVER_LEAVES_GROUP;
			extern typed_lazy_func_t<int(int type)> _GET_FIRST_PARENT_ID_FOR_PED_TYPE;
			extern typed_lazy_func_t<void(bool value)> SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND;
			extern typed_lazy_func_t<void(Ped ped)> _CLEAR_PED_FACIAL_DECORATIONS;
			extern typed_lazy_func_t<void(Ped ped, int textureIndex)> SET_PED_HELMET_TEXTURE_INDEX;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_ENABLE_PED_ENVEFF_SCALE;
			extern typed_lazy_func_t<Vector3(Ped ped, float p1, float p2)> GET_DEAD_PED_PICKUP_COORDS;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2, Any* p3)> _0x4852FC386E2E1BB5;
			extern typed_lazy_func_t<Any(Ped ped, bool pinned, int p2)> SET_PED_PINNED_DOWN;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_SWIMMING;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_ANY_TRAIN;
			extern typed_lazy_func_t<void(Ped ped, Any p1, float p2, float p3, float p4, float p5, bool p6)> _0xE4723DB6E736CCFF;
			extern typed_lazy_func_t<float(int sceneID)> GET_SYNCHRONIZED_SCENE_RATE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_ON_MOUNT;
			extern typed_lazy_func_t<void(int relationship, Hash group1, Hash group2)> CLEAR_RELATIONSHIP_BETWEEN_GROUPS;
			extern typed_lazy_func_t<int(Ped ped1, Ped ped2)> GET_RELATIONSHIP_BETWEEN_PEDS;
			extern typed_lazy_func_t<void(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float offsetY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration)> SET_IK_TARGET;
			extern typed_lazy_func_t<void(Ped ped, float posX, float posY, float posZ)> SET_PED_COORDS_NO_GANG;
			extern typed_lazy_func_t<void(Ped ped, float p1)> CLEAR_PED_ALTERNATE_WALK_ANIM;
			extern typed_lazy_func_t<void(Ped ped, float shapeMix, float skinMix, float thirdMix)> UPDATE_PED_HEAD_BLEND_DATA;
			extern typed_lazy_func_t<bool(Ped ped)> CAN_PED_RAGDOLL;
			extern typed_lazy_func_t<Vector3(Ped ped, int boneId, float offsetX, float offsetY, float offsetZ)> GET_PED_BONE_COORDS;
			extern typed_lazy_func_t<void(Ped ped, bool instantly)> REMOVE_PED_HELMET;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> _0x75BA1CB3B7D40CAF;
			extern typed_lazy_func_t<void(Ped ped)> _FREEZE_PED_CAMERA_ROTATION;
			extern typed_lazy_func_t<void(Ped ped, bool p1, bool p2)> SET_PED_CAN_SMASH_GLASS;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_PEEK_IN_COVER;
			extern typed_lazy_func_t<int(float x, float y, float z, float roll, float pitch, float yaw, int p6)> CREATE_SYNCHRONIZED_SCENE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_RELOADING;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2)> SET_PED_NON_CREATION_AREA;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_JACKING;
			extern typed_lazy_func_t<void(Ped ped, const char* clipSet)> SET_PED_STRAFE_CLIPSET;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_RAGDOLL_ON_COLLISION;
			extern typed_lazy_func_t<void(Ped ped, int attributeIndex, bool enabled)> SET_PED_COMBAT_ATTRIBUTES;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> _0x129466ED55140F8D;
			extern typed_lazy_func_t<void(Any p0, Any* p1)> _0xB782F8238512BAD5;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_PARACHUTE_STATE;
			extern typed_lazy_func_t<int(int unused)> CREATE_GROUP;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_GRAVITY;
			extern typed_lazy_func_t<void(Ped ped, float posX, float posY, float posZ)> SET_PED_COORDS_KEEP_VEHICLE;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius, bool p4, bool p5, Ped* outPed, bool p7, bool p8, int pedType)> GET_CLOSEST_PED;
			extern typed_lazy_func_t<void(Ped ped, const char* p1)> SET_PED_COWER_HASH;
			extern typed_lazy_func_t<float(int sceneID)> GET_SYNCHRONIZED_SCENE_PHASE;
			extern typed_lazy_func_t<int(Any p0)> _0x5407B7288D0478B7;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_MIN_MOVE_BLEND_RATIO;
			extern typed_lazy_func_t<void(float x, float y, float z, float p3, float p4, float p5, float p6, int interiorFlags, float scale, int duration)> _0xB2AFF10216DEFA2F;
			extern typed_lazy_func_t<void(Ped ped, int amount)> ADD_ARMOUR_TO_PED;
			extern typed_lazy_func_t<void(Ped ped, float angle)> SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE;
			extern typed_lazy_func_t<bool(Ped ped, Ped target)> CAN_PED_IN_COMBAT_SEE_TARGET;
			extern typed_lazy_func_t<void(Ped ped, const char* animGroupGesture)> SET_PED_GESTURE_GROUP;
			extern typed_lazy_func_t<bool(Ped ped, Any p1)> HAS_PED_RECEIVED_EVENT;
			extern typed_lazy_func_t<void(Ped ped, int amount)> SET_PED_MONEY;
			extern typed_lazy_func_t<void()> RESET_AI_WEAPON_DAMAGE_MODIFIER;
			extern typed_lazy_func_t<Ped(Ped ped)> GET_JACK_TARGET;
			extern typed_lazy_func_t<Any(const char* name, Hash* groupHash)> ADD_RELATIONSHIP_GROUP;
			extern typed_lazy_func_t<void(Ped* ped)> REMOVE_PED_ELEGANTLY;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0x952F06BEECD775CC;
			extern typed_lazy_func_t<void(Ped ped)> _0xAFF4710E2A0A6C12;
			extern typed_lazy_func_t<void(Ped ped, int componentId, int drawableId, int TextureId, bool attach)> SET_PED_PROP_INDEX;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_MOTION_BLUR;
			extern typed_lazy_func_t<void(Any p0)> _0xA52D5247A4227E14;
			extern typed_lazy_func_t<void(Ped ped, float multiplier)> SET_PED_LOD_MULTIPLIER;
			extern typed_lazy_func_t<Any(Any p0)> _0xF033419D1B81FAE8;
			extern typed_lazy_func_t<void(Ped ped, int colorID, int highlightColorID)> _SET_PED_HAIR_COLOR;
			extern typed_lazy_func_t<void(Ped ped, int team, bool toggle)> SET_PED_CAN_BE_TARGETTED_BY_TEAM;
			extern typed_lazy_func_t<void(Ped ped, float unk)> _0xEC4B4B3B9908052A;
			extern typed_lazy_func_t<bool(Ped p0)> _0x66680A92700F43DF;
			extern typed_lazy_func_t<void(Ped driver, float aggressiveness)> SET_DRIVER_AGGRESSIVENESS;
			extern typed_lazy_func_t<Any(Ped ped)> RESET_PED_VISIBLE_DAMAGE;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float scale, int duration)> _0x2DF9038C90AD5264;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_ACCURACY;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_DIES_IN_WATER;
			extern typed_lazy_func_t<Vector3(const char* animDict, const char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9)> GET_ANIM_INITIAL_OFFSET_ROTATION;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_LEG_IK;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT;
			extern typed_lazy_func_t<void(Ped ped)> STOP_PED_WEAPON_FIRING_WHEN_DROPPED;
			extern typed_lazy_func_t<bool(Ped ped, Hash motionStateHash, bool p2, bool p3, bool p4)> FORCE_PED_MOTION_STATE;
			extern typed_lazy_func_t<bool(const char* asset)> HAS_STEALTH_MODE_ASSET_LOADED;
			extern typed_lazy_func_t<bool(Ped ped, bool atGetIn)> IS_PED_IN_ANY_VEHICLE;
			extern typed_lazy_func_t<bool(Ped ped, bool p1)> IS_PED_DEAD_OR_DYING;
			extern typed_lazy_func_t<int(Ped ped)> GET_PED_MONEY;
			extern typed_lazy_func_t<void(int groupHandle)> RESET_GROUP_FORMATION_DEFAULT_SPACING;
			extern typed_lazy_func_t<bool(Ped ped, bool p1, bool p2, bool p3, bool p4, bool p5, bool p6, bool p7, Any p8)> _0x03EA03AF85A85CB7;
			extern typed_lazy_func_t<bool(Ped ped1, Ped ped2)> IS_PED_HEADTRACKING_PED;
			extern typed_lazy_func_t<void(Ped ped)> _0x687C0B594907D2E8;
			extern typed_lazy_func_t<void(float p0, float p1)> SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_CAPSULE;
			extern typed_lazy_func_t<void(Ped ped)> SET_PED_MOVE_ANIMS_BLEND_OUT;
			extern typed_lazy_func_t<void(Any p0)> _0x36C6984C3ED0C911;
			extern typed_lazy_func_t<void(Ped ped, Any itemSet)> SET_PED_PREFERRED_COVER_SET;
			extern typed_lazy_func_t<bool(Any p0, float p1, float p2, float p3, float p4)> _0xFCF37A457CB96DC0;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> _0xD8C3BE3EE94CAF2D;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xC1F6EBF9A3D55538;
			extern typed_lazy_func_t<void(bool p0)> _0x6B0E6172C9A4D902;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_DUCKING;
			extern typed_lazy_func_t<bool(Ped ped, int componentId, int drawableId, int TextureId)> _IS_PED_PROP_VALID;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_DECORATIONS;
			extern typed_lazy_func_t<void(Ped ped, bool p1, bool p2)> _0x2208438012482A1A;
			extern typed_lazy_func_t<void(Ped ped, float value)> SET_PED_MAX_MOVE_BLEND_RATIO;
			extern typed_lazy_func_t<bool(Ped ped, int flag)> _0x46B05BCAE43856B0;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_ANY_PLANE;
			extern typed_lazy_func_t<void(Ped ped, float p1)> _0x2735233A786B1BEF;
			extern typed_lazy_func_t<bool(Ped ped)> _0xB8B52E498014F5B0;
			extern typed_lazy_func_t<Any()> _0xA586FBEB32A53DBB;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_ALL_PED_PROPS;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_BLOCKING_OF_NON_TEMPORARY_EVENTS;
			extern typed_lazy_func_t<void(bool startImmediately, int messageId)> CREATE_NM_MESSAGE;
			extern typed_lazy_func_t<void(Ped ped, const char* animName, const char* animDict)> SET_FACIAL_IDLE_ANIM_OVERRIDE;
			extern typed_lazy_func_t<bool(Ped p0, Any* p1)> _0x9C6A6C19B6C0C496;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_CAN_BE_SHOT_IN_VEHICLE;
			extern typed_lazy_func_t<Entity(Ped ped, bool p1, bool p2)> _0x8C4F3BF23B6237DB;
			extern typed_lazy_func_t<float(Ped ped, int p1)> GET_COMBAT_FLOAT;
			extern typed_lazy_func_t<void(bool toggle)> SET_CREATE_RANDOM_COPS_ON_SCENARIOS;
			extern typed_lazy_func_t<void(Ped ped, const char* clipSet)> SET_PED_WEAPON_MOVEMENT_CLIPSET;
			extern typed_lazy_func_t<void(Ped ped, Any p1, bool p2)> HIDE_PED_BLOOD_DAMAGE_BY_ZONE;
			extern typed_lazy_func_t<bool(Ped ped)> _0x14590DDBEDB1EC85;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_FLYING_VEHICLE;
			extern typed_lazy_func_t<Ped(int groupID, int memberNumber)> GET_PED_AS_GROUP_MEMBER;
			extern typed_lazy_func_t<int(Hash collection, Hash overlay)> _GET_TATTOO_ZONE;
			extern typed_lazy_func_t<void(Ped ped, bool toggle, bool p2)> SET_PED_CAN_PLAY_VISEME_ANIMS;
			extern typed_lazy_func_t<void(int scene)> _DISPOSE_SYNCHRONIZED_SCENE;
			extern typed_lazy_func_t<bool(Ped ped, Vehicle vehicle)> IS_PED_ON_SPECIFIC_VEHICLE;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_ANY_BOAT;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_IN_COVER_FACING_LEFT;
			extern typed_lazy_func_t<int(Ped ped, int componentId)> GET_PED_TEXTURE_VARIATION;
			extern typed_lazy_func_t<void(Any p0, Any* p1, Any* p2, Any* p3)> _0x013E5CFC38CD5387;
			extern typed_lazy_func_t<bool(Ped ped, Entity entity)> IS_PED_HEADTRACKING_ENTITY;
			extern typed_lazy_func_t<void(Ped ped, float p1, float p2, float p3, bool p4)> SET_PED_DEFENSIVE_AREA_DIRECTION;
			extern typed_lazy_func_t<void(Ped ped, bool cannotRemove, int helmetFlag, int textureIndex)> GIVE_PED_HELMET;
			extern typed_lazy_func_t<void(int sceneID, Entity entity, int boneIndex)> ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY;
			extern typed_lazy_func_t<void(const char* asset)> REMOVE_STEALTH_MODE_ASSET;
			extern typed_lazy_func_t<void(Ped ped, int groupId)> SET_PED_AS_GROUP_LEADER;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_HANGING_ON_TO_VEHICLE;
			extern typed_lazy_func_t<Any(Ped ped)> GET_PED_DECORATIONS_STATE;
			extern typed_lazy_func_t<int(float x1, float y1, float z1, float x2, float y2, float z2, bool p6, bool p7, bool p8, bool p9)> ADD_SCENARIO_BLOCKING_AREA;
			extern typed_lazy_func_t<bool(Ped ped, Any* p1, Any* p2)> _0xF60165E1D2C5370B;
		} /* PED */
		namespace OBJECT {
			extern typed_lazy_func_t<bool(float x, float y, float z, float range, bool p4)> IS_ANY_OBJECT_NEAR_POINT;
			extern typed_lazy_func_t<void(Any p0)> TRACK_OBJECT_VISIBILITY;
			extern typed_lazy_func_t<Vector3(Pickup pickup)> GET_PICKUP_COORDS;
			extern typed_lazy_func_t<Hash(Pickup pickupHash)> _GET_PICKUP_HASH;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius, Hash hash, bool p5)> DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS;
			extern typed_lazy_func_t<float(Any p0)> _0x260EE4FDBDF4DB01;
			extern typed_lazy_func_t<Pickup(Hash pickupHash, float x, float y, float z, bool placeOnGround, Hash modelHash)> CREATE_PORTABLE_PICKUP;
			extern typed_lazy_func_t<void(Hash hash, int p1)> _0x0BF3B3BD47D79C08;
			extern typed_lazy_func_t<void(Player player, Hash pickupHash, bool p2)> _0x616093EC6B139DD9;
			extern typed_lazy_func_t<bool(Object object)> PLACE_OBJECT_ON_GROUND_PROPERLY;
			extern typed_lazy_func_t<Object(float x, float y, float z, float radius, Hash modelHash, bool isMission, bool p6, bool p7)> GET_CLOSEST_OBJECT_OF_TYPE;
			extern typed_lazy_func_t<void(Pickup pickup)> REMOVE_PICKUP;
			extern typed_lazy_func_t<void(float x, float y, float z, int value, int amount, Hash model)> CREATE_MONEY_PICKUPS;
			extern typed_lazy_func_t<bool(Object pickupObject)> DOES_PICKUP_OBJECT_EXIST;
			extern typed_lazy_func_t<Any(Any coords, float radius, Hash modelHash, float x, float y, float z, Vector3* p6, int p7)> _0x163F8B586BC95F2A;
			extern typed_lazy_func_t<Pickup(Hash pickupHash, float x, float y, float z, bool placeOnGround, Hash modelHash)> _CREATE_PORTABLE_PICKUP_2;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, Any p3, Any* p4)> _0x589F80B325CC82C5;
			extern typed_lazy_func_t<Vector3(float x, float y, float z, Any p3, Any p4)> GET_SAFE_PICKUP_COORDS;
			extern typed_lazy_func_t<bool(Object object)> _0x11D1E53A726891FE;
			extern typed_lazy_func_t<void(Ped ped)> DETACH_PORTABLE_PICKUP_FROM_PED;
			extern typed_lazy_func_t<bool(Pickup pickup)> HAS_PICKUP_BEEN_COLLECTED;
			extern typed_lazy_func_t<bool(Any p0)> _0x0378C08504160D0D;
			extern typed_lazy_func_t<Vector3(float xPos, float yPos, float zPos, float heading, float xOffset, float yOffset, float zOffset)> _GET_OBJECT_OFFSET_FROM_COORDS;
			extern typed_lazy_func_t<void(Hash doorHash, Hash modelHash, float x, float y, float z, bool p5, bool p6, bool p7)> ADD_DOOR_TO_SYSTEM;
			extern typed_lazy_func_t<Any(int handle)> _GET_DES_OBJECT_STATE;
			extern typed_lazy_func_t<Pickup(Hash pickupHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, int flag, int amount, Any p9, bool p10, Hash modelHash)> CREATE_PICKUP_ROTATE;
			extern typed_lazy_func_t<void(Hash type, float x, float y, float z, bool* locked, float* heading)> GET_STATE_OF_CLOSEST_DOOR_OF_TYPE;
			extern typed_lazy_func_t<void(Hash hash, bool toggle)> _0xF2E1A7133DD356A6;
			extern typed_lazy_func_t<void(Hash doorHash, bool p1)> _0xD9B71952F78A2640;
			extern typed_lazy_func_t<void(Object object)> _0xF9C1681347C8BD15;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xC6033D32241F6FB5;
			extern typed_lazy_func_t<Pickup(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, Hash modelHash, bool returnHandle, bool p8)> CREATE_AMBIENT_PICKUP;
			extern typed_lazy_func_t<Any(Object object, bool targettable)> SET_OBJECT_TARGETTABLE;
			extern typed_lazy_func_t<void(Hash doorHash)> REMOVE_DOOR_FROM_SYSTEM;
			extern typed_lazy_func_t<void(Object p0, Any p1, bool p2)> _0xE7E4C198B0185900;
			extern typed_lazy_func_t<bool(int handle)> _DOES_DES_OBJECT_EXIST;
			extern typed_lazy_func_t<Object(Pickup pickup)> GET_PICKUP_OBJECT;
			extern typed_lazy_func_t<void(Hash p0, bool p1)> _0x88EAEC617CD26926;
			extern typed_lazy_func_t<void(Any p0, float p1, bool p2)> _0xA08FE5E49BDC39DD;
			extern typed_lazy_func_t<float(Hash doorHash)> _0x65499865FCA6E5EC;
			extern typed_lazy_func_t<void(Object object, bool toggle)> _0xB2D0BDE54F0E8E5A;
			extern typed_lazy_func_t<bool(Hash doorHash)> _DOES_DOOR_EXIST;
			extern typed_lazy_func_t<void(Object object, bool toggle)> _0x4D89D607CB3DD1D2;
			extern typed_lazy_func_t<void(Object object, bool p1)> _SET_OBJECT_SOMETHING;
			extern typed_lazy_func_t<void(Object object, int paintIndex)> _SET_OBJECT_TEXTURE_VARIANT;
			extern typed_lazy_func_t<void(Hash doorHash, int limit, bool p2, bool p3)> _SET_DOOR_ACCELERATION_LIMIT;
			extern typed_lazy_func_t<void(Hash doorHash, bool p1)> _0xA85A21582451E951;
			extern typed_lazy_func_t<bool(Any p0)> _0xDF97CDD4FC08FD34;
			extern typed_lazy_func_t<void()> _0x66A49D021870FE88;
			extern typed_lazy_func_t<Object(Hash modelHash, float x, float y, float z, bool isNetwork, bool thisScriptCheck, bool dynamic)> CREATE_OBJECT_NO_OFFSET;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, bool p10, bool p11)> IS_POINT_IN_ANGLED_AREA;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xEB6F1A9B5510A5D2;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xBCE595371A5FBAAF;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, Hash modelHash, Any p5)> HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN;
			extern typed_lazy_func_t<int(Hash doorHash)> _0x4BC2854478F3A749;
			extern typed_lazy_func_t<void(Hash doorHash, float heading, bool p2, bool p3)> _0x9BA001CB45CBF627;
			extern typed_lazy_func_t<bool(Any p0, Entity entity, float p2, int p3)> _0x372EF6699146A1E4;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2, bool p3, bool p4)> _0x190428512B240692;
			extern typed_lazy_func_t<Object(Object modelHash, float x, float y, float z, bool isNetwork, bool thisScriptCheck, bool dynamic)> CREATE_OBJECT;
			extern typed_lazy_func_t<int(float x, float y, float z, float rotation, const char* name)> _GET_DES_OBJECT;
			extern typed_lazy_func_t<void(Hash pickupHash)> REMOVE_ALL_PICKUPS_OF_TYPE;
			extern typed_lazy_func_t<bool(Pickup pickup)> DOES_PICKUP_EXIST;
			extern typed_lazy_func_t<void(Object object)> _MARK_OBJECT_FOR_DELETION;
			extern typed_lazy_func_t<void(Hash doorHash, bool p1, bool p2, bool p3)> _0xC485E07E4F0B7958;
			extern typed_lazy_func_t<bool(Any p0, bool p1, bool p2, bool p3, Any p4)> _0x673ED815D6E323B7;
			extern typed_lazy_func_t<bool(Hash objectHash, float x, float y, float z, float range)> IS_OBJECT_NEAR_POINT;
			extern typed_lazy_func_t<Pickup(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, bool p6, Hash modelHash)> CREATE_PICKUP;
			extern typed_lazy_func_t<void(bool p0)> _0xC7F29CA00F46350E;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, Hash modelHash, bool p5)> _0x46494A2475701343;
			extern typed_lazy_func_t<void(Ped ped, Any p1)> ATTACH_PORTABLE_PICKUP_TO_PED;
			extern typed_lazy_func_t<void(bool p0)> _0x78857FC65CADB909;
			extern typed_lazy_func_t<void(Object object, Any p1, bool p2)> SET_TEAM_PICKUP_OBJECT;
			extern typed_lazy_func_t<void(Object object, bool p1, bool p2)> _0x92AEFB5F6E294023;
			extern typed_lazy_func_t<float(Any p0, bool p1)> GET_OBJECT_FRAGMENT_DAMAGE_HEALTH;
			extern typed_lazy_func_t<void(Object* object)> DELETE_OBJECT;
			extern typed_lazy_func_t<bool(Any p0, Player player, float p2, int p3)> _0x024A60DEB0EA69F0;
			extern typed_lazy_func_t<bool(Any p0, Entity entity, int p2)> _0xF0EED5A6BC7B237A;
			extern typed_lazy_func_t<void(Object object, float weight, float p2, float p3, float p4, float p5, float gravity, float p7, float p8, float p9, float p10, float buoyancy)> SET_OBJECT_PHYSICS_PARAMS;
			extern typed_lazy_func_t<void(bool p0)> _0x31F924B53EADDF65;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xF92099527DB8E2A7;
			extern typed_lazy_func_t<int(Hash doorHash)> _0x160AA1B32F6139B8;
			extern typed_lazy_func_t<void(Pickup pickup, int duration)> SET_PICKUP_REGENERATION_TIME;
			extern typed_lazy_func_t<void(float p0)> _0x318516E02DE3ECE2;
			extern typed_lazy_func_t<void(Hash doorHash, float ajar, bool p2, bool p3)> _SET_DOOR_AJAR_ANGLE;
			extern typed_lazy_func_t<void(Any p0)> _0x762DB2D380B48D04;
			extern typed_lazy_func_t<bool(Any garage, bool p1, int p2)> IS_GARAGE_EMPTY;
			extern typed_lazy_func_t<void(Hash type, float x, float y, float z, bool locked, float heading, bool p6)> SET_STATE_OF_CLOSEST_DOOR_OF_TYPE;
			extern typed_lazy_func_t<bool(Hash door)> IS_DOOR_CLOSED;
			extern typed_lazy_func_t<void()> _0x701FDA1E82076BA4;
			extern typed_lazy_func_t<bool(Object object)> IS_OBJECT_VISIBLE;
			extern typed_lazy_func_t<bool(Hash pickupHash, float x, float y, float z, float radius)> _IS_PICKUP_WITHIN_RADIUS;
			extern typed_lazy_func_t<void(Hash doorHash, float x, float y, float z, bool locked, float xRotMult, float yRotMult, float zRotMult)> _DOOR_CONTROL;
			extern typed_lazy_func_t<Any(Any p0)> _0xDB41D07A45A6D4B7;
			extern typed_lazy_func_t<bool(Any p0, Player player, int p2)> _0x1761DC5D8471CBAA;
			extern typed_lazy_func_t<void(float x, float y, float z, int colorIndex)> _HIGHLIGHT_PLACEMENT_COORDS;
			extern typed_lazy_func_t<bool(Object object)> HAS_OBJECT_BEEN_BROKEN;
			extern typed_lazy_func_t<Hash(Pickup pickupHash)> _GET_WEAPON_HASH_FROM_PICKUP;
			extern typed_lazy_func_t<void(Object object, bool toggle)> SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> SET_FORCE_OBJECT_THIS_FRAME;
			extern typed_lazy_func_t<bool(Any p0, bool p1, bool p2, bool p3, Any p4)> _0x85B6C850546FDDE2;
			extern typed_lazy_func_t<void(Any p0)> _0x4A39DB43E47CF3AA;
			extern typed_lazy_func_t<void(int handle, int state)> _SET_DES_OBJECT_STATE;
			extern typed_lazy_func_t<bool(Object object, float toX, float toY, float toZ, float speedX, float speedY, float speedZ, bool collision)> SLIDE_OBJECT;
			extern typed_lazy_func_t<void(Hash doorHash, float p1, bool p2, bool p3)> _0x03C27E13B42A0E82;
			extern typed_lazy_func_t<void()> _0xA2C1F5E92AFE49ED;
		} /* OBJECT */
		namespace UNK1 {
			extern typed_lazy_func_t<bool()> _IS_RECORDING;
			extern typed_lazy_func_t<Any()> _0xDF4B952F7D381B95;
			extern typed_lazy_func_t<Any()> _0x4282E08174868BE3;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0x66972397E0757E7A;
			extern typed_lazy_func_t<void(int mode)> _START_RECORDING;
			extern typed_lazy_func_t<void()> _STOP_RECORDING_AND_SAVE_CLIP;
			extern typed_lazy_func_t<bool()> _0x644546EC5287471B;
			extern typed_lazy_func_t<void(bool p0)> _0x48621C9FCA3EBD28;
			extern typed_lazy_func_t<void(float p0, float p1, bool p2)> _0x293220DA1B46CEBC;
			extern typed_lazy_func_t<void()> _0xEB2D525B57F42B40;
			extern typed_lazy_func_t<void()> _0x81CBAE94390F9F89;
			extern typed_lazy_func_t<void()> _0x13B350B8AD0EEE10;
			extern typed_lazy_func_t<void()> _0xAF66DCEE6609B148;
			extern typed_lazy_func_t<void(const char* missionNameLabel, Any p1)> _0x208784099002BC30;
			extern typed_lazy_func_t<void()> _0xF854439EFBB3B583;
			extern typed_lazy_func_t<void()> _STOP_RECORDING_AND_DISCARD_CLIP;
			extern typed_lazy_func_t<bool(bool p0)> _0x33D47E85B476ABCD;
		} /* UNK1 */
		namespace CONTROLS {
			extern typed_lazy_func_t<bool(int inputGroup)> _0x6CD79468A1E595C6;
			extern typed_lazy_func_t<int()> GET_LOCAL_PLAYER_AIM_STATE;
			extern typed_lazy_func_t<bool()> _0x0F70731BACCFBB96;
			extern typed_lazy_func_t<void(int inputGroup, int control)> SET_INPUT_EXCLUSIVE;
			extern typed_lazy_func_t<void(int inputGroup)> DISABLE_ALL_CONTROL_ACTIONS;
			extern typed_lazy_func_t<bool(const char* p0)> _0x4683149ED1DDE7A1;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_CONTROL_ENABLED;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_CONTROL_JUST_RELEASED;
			extern typed_lazy_func_t<const char*(int inputGroup, int control, bool p2)> _0x80C2FD58D720C801;
			extern typed_lazy_func_t<bool()> IS_LOOK_INVERTED;
			extern typed_lazy_func_t<void()> _0x643ED62D5EA3BEBD;
			extern typed_lazy_func_t<void(int inputGroup)> _DISABLE_INPUT_GROUP;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_DISABLED_CONTROL_JUST_RELEASED;
			extern typed_lazy_func_t<Any()> _0x59B9A7AF4C95133C;
			extern typed_lazy_func_t<bool(const char* p0)> _0x3D42B92563939375;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_CONTROL_JUST_PRESSED;
			extern typed_lazy_func_t<void(bool p0)> _0x5B73C77D9EB66E24;
			extern typed_lazy_func_t<bool(int inputGroup, int control, float amount)> _SET_CONTROL_NORMAL;
			extern typed_lazy_func_t<void(Any p0)> _0xA0CEFCEA390AAB9B;
			extern typed_lazy_func_t<void(bool toggle)> SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_DISABLED_CONTROL_PRESSED;
			extern typed_lazy_func_t<float(int inputGroup, int control)> GET_DISABLED_CONTROL_NORMAL;
			extern typed_lazy_func_t<bool(int inputGroup)> _IS_INPUT_DISABLED;
			extern typed_lazy_func_t<bool()> _0xFC859E2374407556;
			extern typed_lazy_func_t<int(int inputGroup, int control)> GET_CONTROL_VALUE;
			extern typed_lazy_func_t<int(int p0)> _0xD7D22F5592AED8BA;
			extern typed_lazy_func_t<bool(bool p0)> _0x23F09EADC01449D6;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xF239400E16C23E08;
			extern typed_lazy_func_t<void(int p0, int duration, int frequency)> SET_PAD_SHAKE;
			extern typed_lazy_func_t<bool()> _0xE1615EC03B3BB4FD;
			extern typed_lazy_func_t<void(int inputGroup, int control, bool disable)> DISABLE_CONTROL_ACTION;
			extern typed_lazy_func_t<void(int inputGroup, int control, bool enable)> ENABLE_CONTROL_ACTION;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_CONTROL_PRESSED;
			extern typed_lazy_func_t<float(int inputGroup, int control)> GET_CONTROL_NORMAL;
			extern typed_lazy_func_t<float(int inputGroup, int control)> _0x4F8A26A890FD62FB;
			extern typed_lazy_func_t<void(int p0, int red, int green, int blue)> _0x8290252FFF36ACB5;
			extern typed_lazy_func_t<bool(float x, float y)> _SET_CURSOR_LOCATION;
			extern typed_lazy_func_t<const char*(int inputGroup, int control, Player p2)> GET_CONTROL_INSTRUCTIONAL_BUTTON;
			extern typed_lazy_func_t<void(Any p0)> _0xCB0360EFEFB2580D;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> _0x14D29BB12D47F68C;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_CONTROL_RELEASED;
			extern typed_lazy_func_t<float(int inputGroup, int control)> _0x5B84D09CEC5209C5;
			extern typed_lazy_func_t<bool(int inputGroup, int control)> IS_DISABLED_CONTROL_JUST_PRESSED;
			extern typed_lazy_func_t<bool(int inputGroup)> _IS_INPUT_JUST_DISABLED;
			extern typed_lazy_func_t<void(Any p0)> STOP_PAD_SHAKE;
			extern typed_lazy_func_t<void(int inputGroup)> ENABLE_ALL_CONTROL_ACTIONS;
		} /* CONTROLS */
		namespace UNK {
			extern typed_lazy_func_t<void(bool p0)> _IS_IN_LOADING_SCREEN;
			extern typed_lazy_func_t<void(bool p0)> _0xC7E7181C09F33B69;
			extern typed_lazy_func_t<int()> _GET_USER_LANGUAGE_ID;
			extern typed_lazy_func_t<bool()> _IS_UI_LOADING_MULTIPLAYER;
			extern typed_lazy_func_t<void(bool p0)> _0xFA1E0E893D915215;
			extern typed_lazy_func_t<int()> _GET_CURRENT_LANGUAGE_ID;
			extern typed_lazy_func_t<int()> _0xF2CA003F167E21D2;
			extern typed_lazy_func_t<bool()> _0xEF7D17BC6C85264C;
			extern typed_lazy_func_t<void(bool p0)> _0xB0C56BD3D808D863;
			extern typed_lazy_func_t<Any()> _0x8AA464D4E0F6ACCD;
		} /* UNK */
		namespace APP {
			extern typed_lazy_func_t<bool()> APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT;
			extern typed_lazy_func_t<bool(const char* appName)> APP_HAS_SYNCED_DATA;
			extern typed_lazy_func_t<int*(ScrHandle property)> APP_GET_INT;
			extern typed_lazy_func_t<float(const char* property)> APP_GET_FLOAT;
			extern typed_lazy_func_t<const char*(const char* property)> APP_GET_STRING;
			extern typed_lazy_func_t<void(const char* blockName)> APP_SET_BLOCK;
			extern typed_lazy_func_t<void()> APP_CLEAR_BLOCK;
			extern typed_lazy_func_t<void()> APP_SAVE_DATA;
			extern typed_lazy_func_t<bool(const char* appName)> APP_DELETE_APP_DATA;
			extern typed_lazy_func_t<int()> APP_DATA_VALID;
			extern typed_lazy_func_t<void(const char* property, int value)> APP_SET_INT;
			extern typed_lazy_func_t<void(const char* property, float value)> APP_SET_FLOAT;
			extern typed_lazy_func_t<void(const char* property, const char* value)> APP_SET_STRING;
			extern typed_lazy_func_t<void(const char* appName)> APP_SET_APP;
			extern typed_lazy_func_t<void()> APP_CLOSE_APP;
			extern typed_lazy_func_t<void()> APP_CLOSE_BLOCK;
			extern typed_lazy_func_t<Any()> APP_GET_DELETED_FILE_STATUS;
		} /* APP */
		namespace NETWORK {
			extern typed_lazy_func_t<bool(Player player)> _NETWORK_PLAYER_SOMETHING;
			extern typed_lazy_func_t<void(int netID, bool toggle)> _NETWORK_SET_NETWORK_ID_DYNAMIC;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any* p3)> _0x3195F8DD0D531052;
			extern typed_lazy_func_t<int(Entity entity)> NETWORK_GET_NETWORK_ID_FROM_ENTITY;
			extern typed_lazy_func_t<Entity(int netHandle)> NET_TO_ENT;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_GAMERTAG_FROM_HANDLE_START;
			extern typed_lazy_func_t<void(Ped ped, int netScene, const char* animDict, const char* animnName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9)> NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, float p4)> _0xA7E30DE9272B6D49;
			extern typed_lazy_func_t<bool(Any p0)> _0x2D5DC831176D0114;
			extern typed_lazy_func_t<Any()> NETWORK_IS_TRANSITION_TO_GAME;
			extern typed_lazy_func_t<bool(int netId)> NETWORK_REQUEST_CONTROL_OF_NETWORK_ID;
			extern typed_lazy_func_t<bool(Entity entity)> NETWORK_HAS_CONTROL_OF_ENTITY;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING;
			extern typed_lazy_func_t<Any()> _0x883D79C4071E18B3;
			extern typed_lazy_func_t<void(int p0)> NETWORK_SESSION_HOST_SINGLE_PLAYER;
			extern typed_lazy_func_t<void(int player, bool p1)> NETWORK_DISABLE_INVINCIBLE_FLASHING;
			extern typed_lazy_func_t<bool(Any* p0)> _0x07DD29D5E22763F1;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_IS_PLAYER_A_PARTICIPANT;
			extern typed_lazy_func_t<Entity(Player player, Hash* weaponHash)> NETWORK_GET_ENTITY_KILLER_OF_PLAYER;
			extern typed_lazy_func_t<bool(int* p0, Any p1)> NETWORK_CLAN_GET_MEMBERSHIP_VALID;
			extern typed_lazy_func_t<void(bool p0)> SET_LOCAL_PLAYER_VISIBLE_LOCALLY;
			extern typed_lazy_func_t<bool(Any p0)> _0x1D610EB0FEA716D9;
			extern typed_lazy_func_t<void()> NETWORK_CLEAR_FOLLOWERS;
			extern typed_lazy_func_t<Any()> _0x5AE17C6B0134B7F1;
			extern typed_lazy_func_t<bool(const char* message, int* networkHandle)> NETWORK_SEND_TEXT_MESSAGE;
			extern typed_lazy_func_t<void()> _0x68103E2247887242;
			extern typed_lazy_func_t<int()> _GET_POSIX_TIME;
			extern typed_lazy_func_t<Any()> _0x59328EB08C5CEB2B;
			extern typed_lazy_func_t<void()> _0xA1E5E0204A6FCC70;
			extern typed_lazy_func_t<void(Any p0)> _0x5B8ED3DB018927B1;
			extern typed_lazy_func_t<bool()> NETWORK_PLAYER_IS_BADSPORT;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3)> IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE;
			extern typed_lazy_func_t<bool(int ped_amt, int vehicle_amt, int object_amt, int pickup_amt)> CAN_REGISTER_MISSION_ENTITIES;
			extern typed_lazy_func_t<bool(Any* p0, Any p1)> _0x02A8BEC6FD9AF660;
			extern typed_lazy_func_t<Any()> _0xC42DD763159F3461;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> _0x5835D9CD92E83184;
			extern typed_lazy_func_t<void(Any p0)> _0x5E3AA4CA2B6FB0EE;
			extern typed_lazy_func_t<Any(Any* p0, Any p1, Any p2, Any p3, Any* p4, bool p5)> _0x308F96458B7087CC;
			extern typed_lazy_func_t<void(int* p0, int p1)> NETWORK_ADD_FOLLOWERS;
			extern typed_lazy_func_t<bool(Entity entity)> NETWORK_REQUEST_CONTROL_OF_ENTITY;
			extern typed_lazy_func_t<void(Any p0)> NETWORK_SET_VOICE_CHANNEL;
			extern typed_lazy_func_t<bool()> NETWORK_IS_SESSION_ACTIVE;
			extern typed_lazy_func_t<void(bool p0)> _0xA2E9C1AB8A92E8CD;
			extern typed_lazy_func_t<void(bool p0, bool p1)> _0x0C978FDA19692C2C;
			extern typed_lazy_func_t<bool(float x, float y, float z)> IS_NETWORK_VEHICLE_BEEN_DAMAGED_BY_ANY_OBJECT;
			extern typed_lazy_func_t<void()> _0x17E0198B3882C2CB;
			extern typed_lazy_func_t<bool()> NETWORK_IS_HOST;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any p3)> NETWORK_SESSION_ACTIVITY_QUICKMATCH;
			extern typed_lazy_func_t<bool(Any p0, float p1, float p2, float p3)> NETWORK_FIND_MATCHED_GAMERS;
			extern typed_lazy_func_t<void()> NETWORK_CLEAR_CLOCK_TIME_OVERRIDE;
			extern typed_lazy_func_t<Any(Any p0)> _0x36391F397731595D;
			extern typed_lazy_func_t<int()> NETWORK_GET_RANDOM_INT;
			extern typed_lazy_func_t<bool(const char* name)> NETWORK_IS_FRIEND_ONLINE;
			extern typed_lazy_func_t<bool(int netId)> _NETWORK_CAN_NETWORK_ID_BE_SEEN;
			extern typed_lazy_func_t<int(float x, float y, float z, float xRot, float yRot, float zRot, int p6, int p7, int p8, float p9)> NETWORK_CREATE_SYNCHRONISED_SCENE;
			extern typed_lazy_func_t<void(int netScene)> NETWORK_STOP_SYNCHRONISED_SCENE;
			extern typed_lazy_func_t<bool(Any p0)> _0x5CAE833B0EE0C500;
			extern typed_lazy_func_t<void(Player friendIndex, int* networkHandle, int bufferSize)> NETWORK_HANDLE_FROM_FRIEND;
			extern typed_lazy_func_t<bool(int friendIndex)> NETWORK_IS_FRIEND_INDEX_ONLINE;
			extern typed_lazy_func_t<void(Entity entity, bool state)> NETWORK_FADE_IN_ENTITY;
			extern typed_lazy_func_t<int(Any* p0, Any p1, Any p2)> NETWORK_GET_NUM_SCRIPT_PARTICIPANTS;
			extern typed_lazy_func_t<void()> _0x1153FA02A659051C;
			extern typed_lazy_func_t<void()> NETWORK_BAIL_TRANSITION;
			extern typed_lazy_func_t<bool()> _NETWORK_PLAYER_IS_UNK;
			extern typed_lazy_func_t<int(Hash contentHash)> _GET_TUNABLES_CONTENT_MODIFIER_ID;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any* p3)> _0xF9E1CCAE8BA4C281;
			extern typed_lazy_func_t<bool()> _IS_ROCKSTAR_BANNED;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, int maxPlayers, Any p4, Any p5)> NETWORK_SESSION_ENTER;
			extern typed_lazy_func_t<bool(int p0, int maxPlayers)> NETWORK_SESSION_HOST_CLOSED;
			extern typed_lazy_func_t<bool()> NETWORK_SESSION_IS_CLOSED_CREW;
			extern typed_lazy_func_t<bool()> _0x855BC38818F6F684;
			extern typed_lazy_func_t<bool()> _0x5A6AA44FF8E931E6;
			extern typed_lazy_func_t<bool(int p0)> NETWORK_IS_PARTICIPANT_ACTIVE;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any* p3)> _0xA7862BC5ED1DFD7E;
			extern typed_lazy_func_t<Any()> _0x593570C289A77688;
			extern typed_lazy_func_t<int(int p0)> _NETWORK_SESSION_GET_UNK;
			extern typed_lazy_func_t<int()> _0xCF61D4B4702EE9EB;
			extern typed_lazy_func_t<Any()> NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS;
			extern typed_lazy_func_t<int(bool p0)> _0x12B6281B6C6706C0;
			extern typed_lazy_func_t<bool(int timeA, int timeB)> IS_TIME_EQUAL_TO;
			extern typed_lazy_func_t<void(bool toggle, Ped playerPed)> NETWORK_SET_IN_SPECTATOR_MODE;
			extern typed_lazy_func_t<bool(int* networkHandle, int event, int amountReceived)> BAD_SPORT_PLAYER_LEFT_DETECTED;
			extern typed_lazy_func_t<bool(Entity entity)> NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_AM_I_BLOCKED_BY_GAMER;
			extern typed_lazy_func_t<void(bool p0)> _NETWORK_CHAT_MUTE;
			extern typed_lazy_func_t<const char*(Any p0)> _GET_CONTENT_ID;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _GET_CONTENT_FILE_VERSION;
			extern typed_lazy_func_t<Any()> _0x7808619F31FF22DB;
			extern typed_lazy_func_t<Any()> _0x01ABCE5E7CBDA196;
			extern typed_lazy_func_t<bool()> NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED;
			extern typed_lazy_func_t<bool()> NETWORK_IS_IN_SPECTATOR_MODE;
			extern typed_lazy_func_t<bool(Any p0)> _0x4A2D4E8BF4265B0F;
			extern typed_lazy_func_t<void()> _DOWNLOAD_CHECK;
			extern typed_lazy_func_t<bool(Any p0)> _0x72D918C99BCACC54;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_HAS_PLAYER_STARTED_TRANSITION;
			extern typed_lazy_func_t<bool(int* networkHandle, int bufferSize)> NETWORK_IS_HANDLE_VALID;
			extern typed_lazy_func_t<bool(int netID)> NETWORK_DOES_NETWORK_ID_EXIST;
			extern typed_lazy_func_t<bool(Any p0)> _0x5A34CD9C3C5BEC44;
			extern typed_lazy_func_t<void(Player player, int* networkHandle, int bufferSize)> NETWORK_HANDLE_FROM_PLAYER;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2)> _0x58CC181719256197;
			extern typed_lazy_func_t<void()> NETWORK_REMOVE_ALL_TRANSITION_INVITE;
			extern typed_lazy_func_t<void()> NETWORK_SET_MISSION_FINISHED;
			extern typed_lazy_func_t<void(int* networkHandle, int bufferSize)> NETWORK_GET_LOCAL_HANDLE;
			extern typed_lazy_func_t<bool(Hash tunableContext, Hash tunableName)> _NETWORK_ACCESS_TUNABLE_BOOL_HASH;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x6F44CBF56D79FAC0;
			extern typed_lazy_func_t<Any(Any* p0, Any* p1, Any p2, Any p3, Any p4)> _0x7FD2990AF016795E;
			extern typed_lazy_func_t<bool()> NETWORK_HAS_FOLLOW_INVITE;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_IS_GAMER_BLOCKED_BY_ME;
			extern typed_lazy_func_t<Any(int p0, Any* p1)> _0xFB1F9381E80FA13F;
			extern typed_lazy_func_t<void()> _0x61A885D3F7CFEE9A;
			extern typed_lazy_func_t<int()> NETWORK_GET_NUM_CONNECTED_PLAYERS;
			extern typed_lazy_func_t<Any()> _0xC0D2AF00BCC234CA;
			extern typed_lazy_func_t<Any()> _0x3A17A27D75C74887;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_CLAN_DOWNLOAD_MEMBERSHIP;
			extern typed_lazy_func_t<Any(Any p0)> _0x703F12425ECA8BF5;
			extern typed_lazy_func_t<Any()> _0x6512765E3BE78C50;
			extern typed_lazy_func_t<int(Ped ped)> PED_TO_NET;
			extern typed_lazy_func_t<bool(int* netHandle1, int* netHandle2)> NETWORK_ARE_HANDLES_THE_SAME;
			extern typed_lazy_func_t<void(int p0)> _0x367EF5E2F439B4C6;
			extern typed_lazy_func_t<void(Player player)> NETWORK_SESSION_KICK_PLAYER;
			extern typed_lazy_func_t<bool(int* clanDesc, int bufferSize, int* networkHandle)> NETWORK_CLAN_PLAYER_GET_DESC;
			extern typed_lazy_func_t<int(int timeA, int timeB)> GET_TIME_OFFSET;
			extern typed_lazy_func_t<Any()> NETWORK_CLEAR_FOLLOW_INVITE;
			extern typed_lazy_func_t<const char*(int* networkHandle)> NETWORK_MEMBER_ID_FROM_GAMER_HANDLE;
			extern typed_lazy_func_t<Any(Any p0)> _0x3B39236746714134;
			extern typed_lazy_func_t<bool()> NETWORK_IS_SIGNED_IN;
			extern typed_lazy_func_t<bool()> _NETWORK_ARE_ROS_AVAILABLE;
			extern typed_lazy_func_t<bool(Any* p0)> _0x85A0EF54A500882C;
			extern typed_lazy_func_t<void(int* vars, int sizeofVars)> NETWORK_REGISTER_HOST_BROADCAST_VARIABLES;
			extern typed_lazy_func_t<void()> _0x444C4525ECE0A4B9;
			extern typed_lazy_func_t<void(bool p0, Any p1, bool p2)> _0x419594E137637120;
			extern typed_lazy_func_t<bool(Any p0)> _0xE64A3CA08DFA37A9;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_GAMER_HAS_HEADSET;
			extern typed_lazy_func_t<void(bool p0)> _0x9D7AFCBF21C51712;
			extern typed_lazy_func_t<void(bool p0)> _0x6A5D89D7769A40D8;
			extern typed_lazy_func_t<void(bool p0)> FADE_OUT_LOCAL_PLAYER;
			extern typed_lazy_func_t<int(bool p0)> GET_NUM_RESERVED_MISSION_OBJECTS;
			extern typed_lazy_func_t<int(bool p0)> _0x0CD9AB83489430EA;
			extern typed_lazy_func_t<void(int randomInt, Vector3* coordinates, float* heading)> NETWORK_GET_RESPAWN_RESULT;
			extern typed_lazy_func_t<bool()> _HAS_TUNABLES_BEEN_DOWNLOADED;
			extern typed_lazy_func_t<void(bool p0)> _0x39917E1B4CB0F911;
			extern typed_lazy_func_t<bool(Any* p0)> _0x135F9B7B7ADD2185;
			extern typed_lazy_func_t<Any()> NETWORK_GET_PRIMARY_CLAN_DATA_PENDING;
			extern typed_lazy_func_t<Any()> _0x7DB53B37A2F211A0;
			extern typed_lazy_func_t<void(Any p0, bool p1, bool p2)> SET_ENTITY_VISIBLE_IN_CUTSCENE;
			extern typed_lazy_func_t<bool(Any* p0, Any p1, bool p2, Any* p3)> _0xC7397A83F7A2A462;
			extern typed_lazy_func_t<Any()> NETWORK_SESSION_IS_VISIBLE;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_AM_I_MUTED_BY_GAMER;
			extern typed_lazy_func_t<void(float p0)> NETWORK_SET_TALKER_PROXIMITY;
			extern typed_lazy_func_t<Any(Any p0)> _0x742B58F723233ED9;
			extern typed_lazy_func_t<void(bool p0)> _0x1B857666604B1A74;
			extern typed_lazy_func_t<void(bool p0)> _0xCFEB46DCD7D8D5EB;
			extern typed_lazy_func_t<int()> NETWORK_GET_NUM_FOUND_GAMERS;
			extern typed_lazy_func_t<void(int* networkHandle)> NETWORK_SET_GAMER_INVITED_TO_TRANSITION;
			extern typed_lazy_func_t<Any(Any* p0, Any p1)> NETWORK_GET_TRANSITION_MEMBERS;
			extern typed_lazy_func_t<bool(Any* p0, Any p1, bool p2, int players, bool p4)> NETWORK_DO_TRANSITION_TO_FREEMODE;
			extern typed_lazy_func_t<bool()> _NETWORK_IS_TEXT_CHAT_ACTIVE;
			extern typed_lazy_func_t<void(int p0, Any p1, Any p2, Any p3)> NETWORK_SET_RICH_PRESENCE;
			extern typed_lazy_func_t<bool(Any p0, Any p1, bool p2)> _0x83F28CE49FBBFFBA;
			extern typed_lazy_func_t<void(bool p0)> _0x5539C3EBF104A53A;
			extern typed_lazy_func_t<bool()> NETWORK_HAS_PENDING_INVITE;
			extern typed_lazy_func_t<void(int unixEpoch, Any* timeStructure)> _GET_DATE_AND_TIME_FROM_UNIX_EPOCH;
			extern typed_lazy_func_t<void()> _0xE9B99B6853181409;
			extern typed_lazy_func_t<void(Any p0)> _0x702BC4D605522539;
			extern typed_lazy_func_t<bool()> NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT;
			extern typed_lazy_func_t<bool(const char* friendName)> NETWORK_IS_FRIEND_IN_SAME_TITLE;
			extern typed_lazy_func_t<bool()> NETWORK_CAN_BAIL;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_IS_PLAYER_ACTIVE;
			extern typed_lazy_func_t<void(const char* memberId, int* networkHandle, int bufferSize)> NETWORK_HANDLE_FROM_MEMBER_ID;
			extern typed_lazy_func_t<bool(Any p0)> _0x4C61B39930D045DA;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any* p3)> _0xD5A4B59980401588;
			extern typed_lazy_func_t<Any(Any p0)> _0xDEB2B99A1AF1A2A6;
			extern typed_lazy_func_t<Any()> _0x8B0C2964BA471961;
			extern typed_lazy_func_t<Any()> _0x24E4E51FC16305F9;
			extern typed_lazy_func_t<Any()> _0x597F8DBA9B206FC7;
			extern typed_lazy_func_t<Any()> _0x74698374C45701D2;
			extern typed_lazy_func_t<Any(Any p0)> _0x6C34F1208B8923FD;
			extern typed_lazy_func_t<Any()> _0x35F0B98A8387274D;
			extern typed_lazy_func_t<bool()> _0x5DC577201723960A;
			extern typed_lazy_func_t<void(Any* p0, Any* p1)> _0x0D77A82DC2D0DA59;
			extern typed_lazy_func_t<void()> _0x25D990F8E0E3F13C;
			extern typed_lazy_func_t<void(bool p0)> NETWORK_OVERRIDE_TRANSITION_CHAT;
			extern typed_lazy_func_t<void(bool p0)> _0xAAA553E7DD28A457;
			extern typed_lazy_func_t<Any()> _0xA0FA4EC6A05DA44E;
			extern typed_lazy_func_t<bool()> NETWORK_CAN_ENTER_MULTIPLAYER;
			extern typed_lazy_func_t<Any()> _0x0DBD5D7E3C5BEC3B;
			extern typed_lazy_func_t<bool(Hash tunableContext, Hash tunableName)> _NETWORK_DOES_TUNABLE_EXIST_HASH;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x267C78C60E806B9A;
			extern typed_lazy_func_t<Any()> NETWORK_IS_TRANSITION_MATCHMAKING;
			extern typed_lazy_func_t<void()> NETWORK_CLOSE_TRANSITION_MATCHMAKING;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> NETWORK_GET_PRESENCE_INVITE_HANDLE;
			extern typed_lazy_func_t<Any()> _0x5E24341A7F92A74B;
			extern typed_lazy_func_t<void()> _0x86E0660E4F5C956D;
			extern typed_lazy_func_t<void()> NETWORK_SESSION_VOICE_LEAVE;
			extern typed_lazy_func_t<void(Any* globalPtr)> _NETWORK_VOICE_CONNECT_TO_PLAYER;
			extern typed_lazy_func_t<bool(Entity entity)> NETWORK_GET_ENTITY_IS_LOCAL;
			extern typed_lazy_func_t<void(Entity entity)> SET_ENTITY_LOCALLY_VISIBLE;
			extern typed_lazy_func_t<bool(Any p0)> _0xA699957E60D80214;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5)> NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP;
			extern typed_lazy_func_t<int(int index)> NETWORK_GET_PARTICIPANT_INDEX;
			extern typed_lazy_func_t<void()> _0x2302C0264EA58D31;
			extern typed_lazy_func_t<Any(Any p0)> _0x8BD6C6DEA20E82C6;
			extern typed_lazy_func_t<bool(int p0, int p1, int maxPlayers, bool p3)> NETWORK_SESSION_FRIEND_MATCHMAKING;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU;
			extern typed_lazy_func_t<void()> _0x265635150FB0D82E;
			extern typed_lazy_func_t<bool(Any* p0, Any p1)> NETWORK_GET_PRIMARY_CLAN_DATA_START;
			extern typed_lazy_func_t<Any()> _0xEA14EEF5B7CD2C30;
			extern typed_lazy_func_t<Any()> _0x9614B71F8ADB982B;
			extern typed_lazy_func_t<bool(int* networkHandle, const char* message)> NETWORK_ADD_FRIEND;
			extern typed_lazy_func_t<bool(const char* animDict, const char* animName)> _NETWORK_CLAN_ANIMATION;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any p3)> _0x6D4CB481FAC835E8;
			extern typed_lazy_func_t<const char*(int p0)> TEXTURE_DOWNLOAD_GET_NAME;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_PLAYER_IS_ROCKSTAR_DEV;
			extern typed_lazy_func_t<void(Player player, bool toggle)> NETWORK_OVERRIDE_CHAT_RESTRICTIONS;
			extern typed_lazy_func_t<void(int Hours, int Minutes, int Seconds)> NETWORK_OVERRIDE_CLOCK_TIME;
			extern typed_lazy_func_t<void(bool p0)> NETWORK_SESSION_MARK_VISIBLE;
			extern typed_lazy_func_t<void(bool toggle)> NETWORK_SET_VOICE_ACTIVE;
			extern typed_lazy_func_t<bool(const char* tunableContext, const char* tunableName, float* value)> NETWORK_ACCESS_TUNABLE_FLOAT;
			extern typed_lazy_func_t<void(Any p0)> _0xB606E6CC59664972;
			extern typed_lazy_func_t<Any()> _0xFD8B834A8BA05048;
			extern typed_lazy_func_t<void()> _0xFA2888E3833C8E96;
			extern typed_lazy_func_t<bool(Player player, int index)> _NETWORK_IS_PLAYER_EQUAL_TO_INDEX;
			extern typed_lazy_func_t<void(Any p0)> _0xCA575C391FEA25CC;
			extern typed_lazy_func_t<void()> NETWORK_REQUEST_CLOUD_TUNABLES;
			extern typed_lazy_func_t<void(int maxSpectators)> NETWORK_SET_ACTIVITY_SPECTATOR_MAX;
			extern typed_lazy_func_t<void(Any p0, const char* p1, bool p2)> _0xEBEFC2E77084F599;
			extern typed_lazy_func_t<Any()> _0xD0A484CB2F829FBE;
			extern typed_lazy_func_t<void(Any p0)> _0x113E6E3E50E286B0;
			extern typed_lazy_func_t<bool(Any p0)> _0xA2F952104FC6DD4B;
			extern typed_lazy_func_t<void()> _0x72D0706CD6CCDB58;
			extern typed_lazy_func_t<Any()> _0x299EF3C576773506;
			extern typed_lazy_func_t<bool()> _FACEBOOK_SET_CREATE_CHARACTER_COMPLETE;
			extern typed_lazy_func_t<void(bool p0, Any p1)> NETWORK_SET_KEEP_FOCUSPOINT;
			extern typed_lazy_func_t<void(bool toggle)> NETWORK_SET_FRIENDLY_FIRE_OPTION;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_CLAN_PLAYER_IS_ACTIVE;
			extern typed_lazy_func_t<bool(int milestoneId)> _FACEBOOK_SET_MILESTONE_COMPLETE;
			extern typed_lazy_func_t<void()> NETWORK_OPEN_TRANSITION_MATCHMAKING;
			extern typed_lazy_func_t<void(bool toggle)> NETWORK_SET_TEAM_ONLY_CHAT;
			extern typed_lazy_func_t<Any()> _0x4D02279C83BE69FE;
			extern typed_lazy_func_t<void(int netId, Player player, bool toggle)> _SET_NETWORK_ID_SYNC_TO_PLAYER;
			extern typed_lazy_func_t<void(Entity entity, bool normal, bool slow)> NETWORK_FADE_OUT_ENTITY;
			extern typed_lazy_func_t<bool(Player player, int p1, Hash scriptHash)> _NETWORK_IS_PLAYER_IN_SCRIPT;
			extern typed_lazy_func_t<int()> _0x638A3A81733086DB;
			extern typed_lazy_func_t<void(Player p0, float* p1, float* p2)> _0xADB57E5B663CCA8B;
			extern typed_lazy_func_t<bool()> _FACEBOOK_IS_AVAILABLE;
			extern typed_lazy_func_t<bool(Any p0, Any p1)> _0xAEEF48CDF5B6CE7C;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any* p3)> _0x5324A0E3E4CE3570;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x87E5C46C187FE0AE;
			extern typed_lazy_func_t<void()> _0xF083835B70BA9BFE;
			extern typed_lazy_func_t<void()> NETWORK_CLEAR_VOICE_CHANNEL;
			extern typed_lazy_func_t<bool(Any p0, float p1, float p2, float p3, float p4)> IS_SPHERE_VISIBLE_TO_PLAYER;
			extern typed_lazy_func_t<Any(int p0, Any* p1)> _0xBAF6BABF9E7CCC13;
			extern typed_lazy_func_t<void(int* networkHandle)> NETWORK_SESSION_GET_INVITER;
			extern typed_lazy_func_t<void(Any p0)> NETWORK_SET_TRANSITION_ACTIVITY_ID;
			extern typed_lazy_func_t<void(bool p0)> _0x973D76AA760A6CB6;
			extern typed_lazy_func_t<void(Entity p0, Any p1)> _0xE66C690248F11150;
			extern typed_lazy_func_t<Hash(Player player)> _NETWORK_HASH_FROM_PLAYER_HANDLE;
			extern typed_lazy_func_t<bool(int timeA, int timeB)> IS_TIME_LESS_THAN;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_REMOVE_ENTITY_AREA;
			extern typed_lazy_func_t<bool(Any p0)> _0x162C23CA83ED0A62;
			extern typed_lazy_func_t<bool(const char* heistName, int cashEarned, int xpEarned)> _FACEBOOK_SET_HEIST_COMPLETE;
			extern typed_lazy_func_t<Any(Any* p0, Any* p1, bool p2)> _0x0B203B4AFDE53A4F;
			extern typed_lazy_func_t<void(Any p0)> _0xCAE55F48D3D7875C;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU;
			extern typed_lazy_func_t<bool(Any* p0)> _0xCCA4318E1AB03F1F;
			extern typed_lazy_func_t<void(int lobbySize, bool p1, int playerId)> NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x759299C5BB31D2A9;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> _0xB746D20B17F2A229;
			extern typed_lazy_func_t<int(int* PlayerHandle, const char* FilePath, const char* Name, bool p3)> TEXTURE_DOWNLOAD_REQUEST;
			extern typed_lazy_func_t<Any()> _0x59DF79317F85A7E0;
			extern typed_lazy_func_t<void(bool p0)> _NETWORK_SESSION_HOSTED;
			extern typed_lazy_func_t<void(int p0, bool p1)> NETWORK_SESSION_CHANGE_SLOTS;
			extern typed_lazy_func_t<void(bool p0)> _NETWORK_BLOCK_INVITES_2;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_VISIBLE_LOCALLY;
			extern typed_lazy_func_t<Any()> _0xA72835064DD63E4C;
			extern typed_lazy_func_t<void(bool p0)> _0xFC18DB55AE19E046;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xFB680D403909DC70;
			extern typed_lazy_func_t<Any()> _0xBDB6F89C729CF388;
			extern typed_lazy_func_t<Any()> _0x37A4494483B9F5C9;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_JOIN_TRANSITION;
			extern typed_lazy_func_t<void(bool p0)> _0x3C5C1E2C2FF814B1;
			extern typed_lazy_func_t<void()> _0xF03755696450470C;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any* p2)> _0x1DE0F5F50D723CAA;
			extern typed_lazy_func_t<Any()> _0x60EDD13EB3AC1FF3;
			extern typed_lazy_func_t<void(Any* p0)> NETWORK_SET_TRANSITION_CREATOR_HANDLE;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_HAS_INVITED_GAMER_TO_TRANSITION;
			extern typed_lazy_func_t<Hash(int* networkHandle)> _NETWORK_HASH_FROM_GAMER_HANDLE;
			extern typed_lazy_func_t<void(Any p0, Any* p1)> _0xCFD115B373C0DF63;
			extern typed_lazy_func_t<bool(int amount)> CAN_REGISTER_MISSION_VEHICLES;
			extern typed_lazy_func_t<int(int timeA, int timeB)> GET_TIME_DIFFERENCE;
			extern typed_lazy_func_t<void(Entity entity, int netScene, const char* animDict, const char* animName, float speed, float speedMulitiplier, int flag)> NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE;
			extern typed_lazy_func_t<bool(Hash tunableContext, Hash tunableName, bool defaultValue)> _NETWORK_ACCESS_TUNABLE_BOOL_HASH_FAIL_VAL;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_AM_I_BLOCKED_BY_PLAYER;
			extern typed_lazy_func_t<int(bool p0)> _0xCB215C4B56A7FAE7;
			extern typed_lazy_func_t<bool(const char* tunableContext, const char* tunableName)> NETWORK_ACCESS_TUNABLE_BOOL;
			extern typed_lazy_func_t<void()> _0xB7C7F6AD6424304B;
			extern typed_lazy_func_t<void(bool toggle)> NETWORK_SUPPRESS_INVITE;
			extern typed_lazy_func_t<bool(Player player)> IS_PLAYER_IN_CUTSCENE;
			extern typed_lazy_func_t<void(Any p0)> _0xC9B43A33D09CADA7;
			extern typed_lazy_func_t<bool()> NETWORK_HAS_HEADSET;
			extern typed_lazy_func_t<void(int netId, bool toggle)> SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES;
			extern typed_lazy_func_t<void(int playerType, int playerCount)> _NETWORK_SESSION_SET_MAX_PLAYERS;
			extern typed_lazy_func_t<Any()> _0x14922ED3E38761F0;
			extern typed_lazy_func_t<int()> NETWORK_GET_NUM_PARTICIPANTS;
			extern typed_lazy_func_t<bool()> NETWORK_CAN_SET_WAYPOINT;
			extern typed_lazy_func_t<void(bool p0, bool p1)> NETWORK_SET_IN_MP_CUTSCENE;
			extern typed_lazy_func_t<Any(Any p0)> _0x32DD916F3F7C9672;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, int players, bool p3, bool p4, bool p5)> NETWORK_DO_TRANSITION_TO_NEW_FREEMODE;
			extern typed_lazy_func_t<bool(Any p0)> USING_NETWORK_WEAPONTYPE;
			extern typed_lazy_func_t<bool(Entity p0)> _0xB07D3185E11657A5;
			extern typed_lazy_func_t<void(Any p0)> _0xF1B84178F8674195;
			extern typed_lazy_func_t<int(int netId, Hash* weaponHash)> NETWORK_GET_DESTROYER_OF_NETWORK_ID;
			extern typed_lazy_func_t<const char*(Player player, const char* userID)> NETWORK_PLAYER_GET_USERID;
			extern typed_lazy_func_t<bool(int* p0)> NETWORK_IS_GAMER_MUTED_BY_ME;
			extern typed_lazy_func_t<void(Any p0)> _0x600F8CB31C7AAB6E;
			extern typed_lazy_func_t<void(bool p0)> _NETWORK_BLOCK_KICKED_PLAYERS;
			extern typed_lazy_func_t<Any()> _0x53AFD64C6758F2F9;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5, float p6)> _NETWORK_ADD_ENTITY_ANGLED_AREA;
			extern typed_lazy_func_t<Any(Vehicle vehicle, bool isAudible, bool isInvisible, bool p3)> NETWORK_EXPLODE_VEHICLE;
			extern typed_lazy_func_t<Any()> _0xF2EAC213D5EA0623;
			extern typed_lazy_func_t<Any()> _0x88B588B41FF7868E;
			extern typed_lazy_func_t<bool(Any p0)> _0x993CBE59D350D225;
			extern typed_lazy_func_t<void()> _0x140E6A44870A11CE;
			extern typed_lazy_func_t<void(bool p0)> _0x7D395EA61622E116;
			extern typed_lazy_func_t<bool(int* clanDesc, int bufferSize)> _0x7543BB439F63792B;
			extern typed_lazy_func_t<Any()> _0x793FF272D5B365F4;
			extern typed_lazy_func_t<void(Entity entity)> SET_ENTITY_LOCALLY_INVISIBLE;
			extern typed_lazy_func_t<bool(Any* p0, bool p1, Any* p2)> _0xD05D1A6C74DA3498;
			extern typed_lazy_func_t<void()> _0xF814FEC6A19FD6E0;
			extern typed_lazy_func_t<void()> _0x64F62AFB081E260D;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_IS_PLAYER_CONNECTED;
			extern typed_lazy_func_t<Player(Ped ped)> NETWORK_GET_PLAYER_INDEX_FROM_PED;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_IS_PLAYER_TALKING;
			extern typed_lazy_func_t<Any(Any* p0)> _0xC64DED7EF0D2FE37;
			extern typed_lazy_func_t<bool(const char* p0, bool p1, const char* contentType)> _0x158EC424F35EC469;
			extern typed_lazy_func_t<Any()> _0xD53ACDBEF24A46E8;
			extern typed_lazy_func_t<Any()> _0xBA9775570DB788CF;
			extern typed_lazy_func_t<Any()> _0x2CC848A861D01493;
			extern typed_lazy_func_t<bool()> _0xEF0912DDF7C4CB4B;
			extern typed_lazy_func_t<const char*(Any p0)> _GET_ROOT_CONTENT_ID;
			extern typed_lazy_func_t<Any()> _0x45E816772E93A9DB;
			extern typed_lazy_func_t<Any()> _0x66B59CFFD78467AF;
			extern typed_lazy_func_t<Any()> NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR;
			extern typed_lazy_func_t<void(bool p0)> _0x77758139EC9B66C7;
			extern typed_lazy_func_t<int(int netScene)> _NETWORK_CONVERT_SYNCHRONISED_SCENE_TO_SYNCHRONIZED_SCENE;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xBBDF066252829606;
			extern typed_lazy_func_t<Any()> _0x02ADA21EA2F6918F;
			extern typed_lazy_func_t<bool(int* networkHandle, Any* p1, Any p2, Any p3)> _NETWORK_SEND_PRESENCE_INVITE;
			extern typed_lazy_func_t<void(const char* userId, int* networkHandle, int bufferSize)> NETWORK_HANDLE_FROM_USER_ID;
			extern typed_lazy_func_t<void(int* networkHandle)> NETWORK_SHOW_PROFILE_UI;
			extern typed_lazy_func_t<bool(Any p0)> _0xEBFA8D50ADDC54C4;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_IS_PLAYER_MUTED_BY_ME;
			extern typed_lazy_func_t<bool(Any p0)> _0x13518FF1C6B28938;
			extern typed_lazy_func_t<Any()> NETWORK_GET_HOST_OF_THIS_SCRIPT;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> _0x584770794D758C18;
			extern typed_lazy_func_t<bool()> NETWORK_IS_SIGNED_ONLINE;
			extern typed_lazy_func_t<bool(bool p0, bool p1)> NETWORK_SESSION_END;
			extern typed_lazy_func_t<void(int netId, int time)> SET_NETWORK_VEHICLE_RESPOT_TIMER;
			extern typed_lazy_func_t<bool()> _HAS_BG_SCRIPT_BEEN_DOWNLOADED;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x4E548C0D7AE39FF9;
			extern typed_lazy_func_t<bool()> _IS_SOCIALCLUB_BANNED;
			extern typed_lazy_func_t<Any()> _0x2FC5650B0271CB57;
			extern typed_lazy_func_t<int(Any* p0, Any p1)> _0xD66C9E72B3CC4982;
			extern typed_lazy_func_t<Any()> _0xC7BE335216B5EC7C;
			extern typed_lazy_func_t<bool(Any p0)> _0x919B3C98ED8292F9;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5)> _0x25B99872D588A101;
			extern typed_lazy_func_t<Any()> NETWORK_IS_ACTIVITY_SPECTATOR;
			extern typed_lazy_func_t<Vehicle(int netHandle)> NET_TO_VEH;
			extern typed_lazy_func_t<const char*(int time)> GET_TIME_AS_STRING;
			extern typed_lazy_func_t<Any()> NETWORK_GET_TALKER_PROXIMITY;
			extern typed_lazy_func_t<bool(int amount)> CAN_REGISTER_MISSION_OBJECTS;
			extern typed_lazy_func_t<int(bool p0)> GET_NUM_RESERVED_MISSION_VEHICLES;
			extern typed_lazy_func_t<void()> NETWORK_END_TUTORIAL_SESSION;
			extern typed_lazy_func_t<void()> NETWORK_CLEAR_PROPERTY_ID;
			extern typed_lazy_func_t<void()> NETWORK_BAIL;
			extern typed_lazy_func_t<bool()> NETWORK_IS_ACTIVITY_SESSION;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_IS_GAMER_IN_MY_SESSION;
			extern typed_lazy_func_t<Any(Any p0)> _0xCA94551B50B4932C;
			extern typed_lazy_func_t<Any()> _0xB5D3453C98456528;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any p3)> NETWORK_DO_TRANSITION_QUICKMATCH;
			extern typed_lazy_func_t<bool()> NETWORK_IS_TRANSITION_STARTED;
			extern typed_lazy_func_t<bool(const char* scriptName, Player player, bool p2, Any p3)> NETWORK_IS_SCRIPT_ACTIVE;
			extern typed_lazy_func_t<bool(Player p0, Any* p1, Any p2)> _0x1AD5B71586B94820;
			extern typed_lazy_func_t<bool()> _NETWORK_IS_PSN_AVAILABLE;
			extern typed_lazy_func_t<void(int* hours, int* minutes, int* seconds)> _NETWORK_GET_SERVER_TIME;
			extern typed_lazy_func_t<void()> NETWORK_CLEAR_FOUND_GAMERS;
			extern typed_lazy_func_t<void(bool p0)> _0xFD75DABC0957BF33;
			extern typed_lazy_func_t<void(int p0, const char* gxtLabel)> _NETWORK_SET_RICH_PRESENCE_2;
			extern typed_lazy_func_t<bool(Any p0)> _0x21D04D7BC538C146;
			extern typed_lazy_func_t<Any(Any p0)> _0x662635855957C411;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_IS_PLAYER_BLOCKED_BY_ME;
			extern typed_lazy_func_t<bool(int* memberDesc, int p1)> NETWORK_CLAN_GET_MEMBERSHIP_DESC;
			extern typed_lazy_func_t<void(int netID, bool p1)> ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID;
			extern typed_lazy_func_t<void(Any p0)> NETWORK_SET_PROPERTY_ID;
			extern typed_lazy_func_t<int(int p0)> _GET_CONTENT_CATEGORY;
			extern typed_lazy_func_t<Any()> _0x91B87C55093DE351;
			extern typed_lazy_func_t<void()> _0x45A83257ED02D9BC;
			extern typed_lazy_func_t<void()> NETWORK_SESSION_VOICE_HOST;
			extern typed_lazy_func_t<void(Entity entity)> NETWORK_REGISTER_ENTITY_AS_NETWORKED;
			extern typed_lazy_func_t<Any(Any p0)> _0xB309EBEA797E001F;
			extern typed_lazy_func_t<int()> PARTICIPANT_ID_TO_INT;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> NETWORK_GET_PRIMARY_CLAN_DATA_NEW;
			extern typed_lazy_func_t<void(int netId, bool state)> _0x3FA36981311FA4FF;
			extern typed_lazy_func_t<void(bool p0, Any p1)> _0x5C707A667DF8B9FA;
			extern typed_lazy_func_t<Any(Any p0)> _0xB4271092CA7EDF48;
			extern typed_lazy_func_t<Any()> _0xEBCAB9E5048434F4;
			extern typed_lazy_func_t<bool()> _0x1353F87E89946207;
			extern typed_lazy_func_t<void()> _0x741A3D8380319A81;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any* p3, Any* p4)> _0x678BB03C1A3BD51E;
			extern typed_lazy_func_t<bool(int* networkHandle, Any p1, Any p2)> FILLOUT_PM_PLAYER_LIST;
			extern typed_lazy_func_t<Any()> _0x2BF66D2E7414F686;
			extern typed_lazy_func_t<Entity(int netId)> NETWORK_GET_ENTITY_FROM_NETWORK_ID;
			extern typed_lazy_func_t<bool()> _NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS;
			extern typed_lazy_func_t<bool(const char* tunableContext, const char* tunableName, int* value)> NETWORK_ACCESS_TUNABLE_INT;
			extern typed_lazy_func_t<bool(Any* p0, Any p1)> NETWORK_INVITE_GAMERS_TO_TRANSITION;
			extern typed_lazy_func_t<void(int team, bool toggle)> _0x6F697A66CE78674E;
			extern typed_lazy_func_t<void(bool p0)> SET_LOCAL_PLAYER_INVISIBLE_LOCALLY;
			extern typed_lazy_func_t<void()> _0x9465E683B12D3F6B;
			extern typed_lazy_func_t<bool(Any p0)> _0x3DBF2DF0AEB7D289;
			extern typed_lazy_func_t<bool(int netID)> IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID;
			extern typed_lazy_func_t<Any()> _0x5A0A3D1A186A5508;
			extern typed_lazy_func_t<Any()> _0x10BD227A753B0D84;
			extern typed_lazy_func_t<bool(int netId)> NETWORK_HAS_CONTROL_OF_NETWORK_ID;
			extern typed_lazy_func_t<void(int netId, bool toggle)> SET_NETWORK_ID_CAN_MIGRATE;
			extern typed_lazy_func_t<bool()> NETWORK_IS_IN_MP_CUTSCENE;
			extern typed_lazy_func_t<void(Any p0)> _0x77FADDCBE3499DF7;
			extern typed_lazy_func_t<int()> NETWORK_GET_SCRIPT_STATUS;
			extern typed_lazy_func_t<void(float x, float y, float z, float heading, bool unk, bool changetime)> NETWORK_RESURRECT_LOCAL_PLAYER;
			extern typed_lazy_func_t<int(Vehicle vehicle)> VEH_TO_NET;
			extern typed_lazy_func_t<void(int* clanDesc, int bufferSize, int* networkHandle)> _0xF45352426FF3A4F0;
			extern typed_lazy_func_t<bool()> _0xBD545D44CCE70597;
			extern typed_lazy_func_t<void(Any p0, Any p1)> NETWORK_APPLY_TRANSITION_PARAMETER;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_IS_TRANSITION_HOST_FROM_HANDLE;
			extern typed_lazy_func_t<void(bool p0, bool p1)> SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE;
			extern typed_lazy_func_t<void()> _0xFB8F2A6F3DF08CBE;
			extern typed_lazy_func_t<bool(Any p0)> _0x7FCC39C46C3C03BD;
			extern typed_lazy_func_t<void(int p0)> _NETWORK_SCTV_SLOTS;
			extern typed_lazy_func_t<bool()> NETWORK_PLAYER_IS_CHEATER;
			extern typed_lazy_func_t<void(Player player, bool toggle)> NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS;
			extern typed_lazy_func_t<void(bool p0)> _0x261E97AD7BCF3D40;
			extern typed_lazy_func_t<bool(Any* p0)> _0x3F9990BF5F22759C;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_IS_CHATTING_IN_PLATFORM_PARTY;
			extern typed_lazy_func_t<bool(int doorID)> NETWORK_REQUEST_CONTROL_OF_DOOR;
			extern typed_lazy_func_t<bool(Any p0)> _0x4DF7CFFF471A7FB1;
			extern typed_lazy_func_t<bool(int* loadingState)> NETWORK_CAN_ACCESS_MULTIPLAYER;
			extern typed_lazy_func_t<bool()> NETWORK_SESSION_WAS_INVITED;
			extern typed_lazy_func_t<void(bool toggle)> NETWORK_SET_ACTIVITY_SPECTATOR;
			extern typed_lazy_func_t<bool(Any p0)> _0x3A3D5568AF297CD5;
			extern typed_lazy_func_t<Any(Any p0)> _0xBF09786A7FCAB582;
			extern typed_lazy_func_t<bool()> NETWORK_IS_HOST_OF_THIS_SCRIPT;
			extern typed_lazy_func_t<void(Entity entity)> NETWORK_UNREGISTER_NETWORKED_ENTITY;
			extern typed_lazy_func_t<bool(const char* friendName)> NETWORK_IS_FRIEND_IN_MULTIPLAYER;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> NETWORK_SET_ENTITY_CAN_BLEND;
			extern typed_lazy_func_t<Any()> _0x0AFCE529F69B21FF;
			extern typed_lazy_func_t<void(Any p0)> _0x4811BBAC21C5FCD5;
			extern typed_lazy_func_t<Any()> _0xD313DE83394AF134;
			extern typed_lazy_func_t<bool()> _0x5D10B3795F3FC886;
			extern typed_lazy_func_t<Any()> _0x9FEDF86898F100E9;
			extern typed_lazy_func_t<int(Any p0)> _GET_CONTENT_DESCRIPTION_HASH;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x40F7E66472DF3E5C;
			extern typed_lazy_func_t<bool(Any p0, Any p1, bool p2)> _0x595F028698072DD9;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Hash* weaponHash)> _NETWORK_GET_DESROYER_OF_ENTITY;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any* p3, Any* p4)> _0x9F6E2821885CAEE2;
			extern typed_lazy_func_t<Any()> NETWORK_IS_TRANSITION_HOST;
			extern typed_lazy_func_t<int()> _GET_NUM_MEMBERSHIP_DESC;
			extern typed_lazy_func_t<void(bool p0)> _0xC505036A35AFD01B;
			extern typed_lazy_func_t<Any()> NETWORK_IS_TRANSITION_BUSY;
			extern typed_lazy_func_t<int()> _0x89023FBBF9200E9F;
			extern typed_lazy_func_t<Any()> _0xD38C4A6D047C019D;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5)> _0x9BF438815F5D96EA;
			extern typed_lazy_func_t<const char*(int p0)> _GET_CONTENT_USER_ID;
			extern typed_lazy_func_t<Any()> _0x74FB3E29E6D10FA9;
			extern typed_lazy_func_t<void()> _0x83FE8D7229593017;
			extern typed_lazy_func_t<void()> NETWORK_SESSION_FORCE_CANCEL_INVITE;
			extern typed_lazy_func_t<bool()> NETWORK_IS_LOCAL_PLAYER_INVINCIBLE;
			extern typed_lazy_func_t<bool()> NETWORK_IS_ADDING_FRIEND;
			extern typed_lazy_func_t<void(int amount)> RESERVE_NETWORK_MISSION_OBJECTS;
			extern typed_lazy_func_t<void()> _0x283B6062A2C01E9B;
			extern typed_lazy_func_t<Any()> _0xFFE1E5B792D92B34;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any p2, Any p3)> _0x1171A97A3D3981B6;
			extern typed_lazy_func_t<Any()> _0x941E5306BCD7C2C7;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x171DF6A0C07FB3DC;
			extern typed_lazy_func_t<bool()> NETWORK_SESSION_IS_CLOSED_FRIENDS;
			extern typed_lazy_func_t<Any()> _0x26F07DD83A5F7F98;
			extern typed_lazy_func_t<void(bool toggle)> USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR;
			extern typed_lazy_func_t<bool()> _NETWORK_IS_CLAN_MEMBERSHIP_FINISHED_DOWNLOADING;
			extern typed_lazy_func_t<bool(int p0, const char* p1)> _0x2B51EDBEFC301339;
			extern typed_lazy_func_t<void(const char* p0, const char* p1)> _0x58C21165F6545892;
			extern typed_lazy_func_t<bool()> NETWORK_CAN_SESSION_END;
			extern typed_lazy_func_t<Any(Any* p0, Any p1)> _0x120364DE2845DAF8;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_IS_FRIEND;
			extern typed_lazy_func_t<bool(Any* p0)> _0xB57A49545BA53CE7;
			extern typed_lazy_func_t<bool()> NETWORK_SESSION_IS_SOLO;
			extern typed_lazy_func_t<void()> NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE;
			extern typed_lazy_func_t<void(Any* p0)> NETWORK_REMOVE_TRANSITION_INVITE;
			extern typed_lazy_func_t<int(bool p0)> NETWORK_GET_ACTIVITY_PLAYER_NUM;
			extern typed_lazy_func_t<bool(Hash tunableContext, Hash tunableName, int* value)> _NETWORK_ACCESS_TUNABLE_INT_HASH;
			extern typed_lazy_func_t<Any(Any p0)> _0x5E0165278F6339EE;
			extern typed_lazy_func_t<bool(Hash doorHash)> NETWORK_HAS_CONTROL_OF_DOOR;
			extern typed_lazy_func_t<void()> NETWORK_RESET_BODY_TRACKER;
			extern typed_lazy_func_t<void()> _0xBD0BE0BFC927EAC1;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2)> _0xFAE628F1E9ADB239;
			extern typed_lazy_func_t<void(Any p0)> _0xF49ABC20D8552257;
			extern typed_lazy_func_t<void()> NETWORK_SESSION_LEAVE_SINGLE_PLAYER;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_ARE_TRANSITION_DETAILS_VALID;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_IS_INACTIVE_PROFILE;
			extern typed_lazy_func_t<bool(Any p0)> _0xAEAB987727C5A8A4;
			extern typed_lazy_func_t<bool(Any p0)> _0x70EA8DA57840F9BE;
			extern typed_lazy_func_t<void(bool p0)> _0xF98DDE0A8ED09323;
			extern typed_lazy_func_t<bool(int p0, int maxPlayers, bool p2)> NETWORK_SESSION_HOST;
			extern typed_lazy_func_t<bool()> NETWORK_IS_IN_SESSION;
			extern typed_lazy_func_t<void(Any p0)> _0x524FF0AEFF9C3973;
			extern typed_lazy_func_t<bool(int* p0)> NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE;
			extern typed_lazy_func_t<Any()> _0xE0A6138401BCB837;
			extern typed_lazy_func_t<Any()> _0x0C1F7D49C39D2289;
			extern typed_lazy_func_t<void(bool toggle)> SET_STORE_ENABLED;
			extern typed_lazy_func_t<Any()> _0xC7ABAC5DE675EE3B;
			extern typed_lazy_func_t<bool(Entity entity)> NETWORK_GET_ENTITY_IS_NETWORKED;
			extern typed_lazy_func_t<const char*(Player player)> NETWORK_PLAYER_GET_NAME;
			extern typed_lazy_func_t<bool(int* player)> NETWORK_CAN_COMMUNICATE_WITH_GAMER;
			extern typed_lazy_func_t<void(bool p0)> _0x0FF2862B61A58AF9;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> _0x1ACCFBA3D8DAB2EE;
			extern typed_lazy_func_t<Any()> _0x606E4D3E3CCCF3EB;
			extern typed_lazy_func_t<void(Any p0)> _0x6BFF5F84102DF80A;
			extern typed_lazy_func_t<Any()> _0x5EA784D197556507;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_HAS_INVITED_GAMER;
			extern typed_lazy_func_t<void(int* vars, int numVars)> NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES;
			extern typed_lazy_func_t<void()> _0xEBF8284D8CADEB53;
			extern typed_lazy_func_t<bool()> _NETWORK_PLAYER_IS_IN_CLAN;
			extern typed_lazy_func_t<void()> _0xBA96394A0EECFA65;
			extern typed_lazy_func_t<bool(int* networkHandle)> _NETWORK_IS_FRIEND_ONLINE_2;
			extern typed_lazy_func_t<void(Object object, bool toggle)> _SET_NETWORK_OBJECT_NON_CONTACT;
			extern typed_lazy_func_t<bool(Player player, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, int flags)> _0x4BA92A18502BCA61;
			extern typed_lazy_func_t<Any()> _0x769951E2455E2EB5;
			extern typed_lazy_func_t<Any()> NETWORK_LAUNCH_TRANSITION;
			extern typed_lazy_func_t<Any(Any p0)> _0xD39B3FFF8FFDD5BF;
			extern typed_lazy_func_t<const char*(int friendIndex)> NETWORK_GET_FRIEND_NAME;
			extern typed_lazy_func_t<bool()> NETWORK_IS_CLOUD_AVAILABLE;
			extern typed_lazy_func_t<void()> NETWORK_SESSION_CANCEL_INVITE;
			extern typed_lazy_func_t<int()> GET_NETWORK_TIME;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2, Any* p3)> NETWORK_GET_BACKGROUND_LOADING_RECIPIENTS;
			extern typed_lazy_func_t<void(bool p0)> _0x7AC752103856FB20;
			extern typed_lazy_func_t<bool()> NETWORK_IS_SESSION_BUSY;
			extern typed_lazy_func_t<void(Any* p0)> _0x66F010A4B031A331;
			extern typed_lazy_func_t<void(int netScene, const char* animDict, const char* animName)> _NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA;
			extern typed_lazy_func_t<void(int netScene)> NETWORK_START_SYNCHRONISED_SCENE;
			extern typed_lazy_func_t<Any()> NETWORK_IS_IN_TUTORIAL_SESSION;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> _0x152D90E4C1B4738A;
			extern typed_lazy_func_t<bool(Any* p0, bool p1, Any* p2)> _0x274A1519DFC1094F;
			extern typed_lazy_func_t<bool()> _0x4237E822315D8BA9;
			extern typed_lazy_func_t<Any()> _0xF9B83B77929D8863;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> _0x44B37CDCAE765AAE;
			extern typed_lazy_func_t<Any()> _0xC87E740D9F3872CC;
			extern typed_lazy_func_t<bool(Any p0)> _0xA9240A96C74CCA13;
			extern typed_lazy_func_t<bool(Any p0)> _0xF53E48461B71EECB;
			extern typed_lazy_func_t<bool()> HAS_NETWORK_TIME_STARTED;
			extern typed_lazy_func_t<bool(const char* tunableContext, const char* tunableName)> NETWORK_DOES_TUNABLE_EXIST;
			extern typed_lazy_func_t<bool(Any p0)> _0x237D5336A9A54108;
			extern typed_lazy_func_t<bool(Any* p0)> _0x796A87B3B68D1F3D;
			extern typed_lazy_func_t<bool()> _0x67A5589628E0CFF6;
			extern typed_lazy_func_t<bool(Player player)> _NETWORK_SESSION_IS_PLAYER_VOTED_TO_KICK;
			extern typed_lazy_func_t<Any()> NETWORK_ACTION_FOLLOW_INVITE;
			extern typed_lazy_func_t<Ped(int netHandle)> NET_TO_PED;
			extern typed_lazy_func_t<void(int netId, bool p1, bool p2)> SET_NETWORK_ID_VISIBLE_IN_CUTSCENE;
			extern typed_lazy_func_t<Any()> _0xC55A0B40FFB1ED23;
			extern typed_lazy_func_t<Any()> _0x94A8394D150B013A;
			extern typed_lazy_func_t<bool(Any* p0)> NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_IS_PARTY_MEMBER;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any p2, Any p3)> FILLOUT_PM_PLAYER_LIST_WITH_NAMES;
			extern typed_lazy_func_t<Object(int netHandle)> NET_TO_OBJ;
			extern typed_lazy_func_t<Any()> _0xC32EA7A2F6CA7557;
			extern typed_lazy_func_t<void(Player player, bool toggle)> SET_PLAYER_INVISIBLE_LOCALLY;
			extern typed_lazy_func_t<Any()> _0xB37E4E6A2388CA7B;
			extern typed_lazy_func_t<Any()> _0x62A0296C1BB1CEB3;
			extern typed_lazy_func_t<void(bool p0)> NETWORK_SESSION_BLOCK_JOIN_REQUESTS;
			extern typed_lazy_func_t<Any()> NETWORK_LEAVE_TRANSITION;
			extern typed_lazy_func_t<const char*(int friendIndex)> _NETWORK_GET_FRIEND_NAME_FROM_INDEX;
			extern typed_lazy_func_t<void(int amount)> RESERVE_NETWORK_MISSION_PEDS;
			extern typed_lazy_func_t<Any(Any p0)> _0x2A7776C709904AB0;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1)> SET_BALANCE_ADD_MACHINE;
			extern typed_lazy_func_t<void(bool toggle)> NETWORK_BLOCK_INVITES;
			extern typed_lazy_func_t<bool(bool p0, int maxPlayers, bool p2)> NETWORK_DO_TRANSITION_TO_NEW_GAME;
			extern typed_lazy_func_t<int(int rangeStart, int rangeEnd)> _NETWORK_GET_RANDOM_INT_IN_RANGE;
			extern typed_lazy_func_t<Any(Any p0)> _0x722F5D28B61C5EA8;
			extern typed_lazy_func_t<bool()> _FACEBOOK_DO_UNK_CHECK;
			extern typed_lazy_func_t<int(const char* scriptName, int p1, int p2)> NETWORK_GET_HOST_OF_SCRIPT;
			extern typed_lazy_func_t<bool()> NETWORK_GAMERTAG_FROM_HANDLE_PENDING;
			extern typed_lazy_func_t<int(int* p0)> NETWORK_CLAN_GET_MEMBERSHIP_COUNT;
			extern typed_lazy_func_t<bool(Ped ped, Player player)> _0x0EDE326D47CD0F3E;
			extern typed_lazy_func_t<bool(Any p0)> _0x3054F114121C21EA;
			extern typed_lazy_func_t<bool(Any p0, bool p1, Any p2)> _NETWORK_IS_THIS_SCRIPT_MARKED;
			extern typed_lazy_func_t<void(Entity entity)> _0x715135F4B82AC90D;
			extern typed_lazy_func_t<bool(Any p0)> _0x631DC5DFF4B110E3;
			extern typed_lazy_func_t<bool()> NETWORK_IS_IN_TRANSITION;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> NETWORK_HOST_TRANSITION;
			extern typed_lazy_func_t<void()> _0xB13E88E655E5A3BC;
			extern typed_lazy_func_t<bool(bool p0, int maxPlayers)> NETWORK_DO_TRANSITION_TO_GAME;
			extern typed_lazy_func_t<bool()> NETWORK_IS_IN_PARTY;
			extern typed_lazy_func_t<void(int netScene, Entity entity, int bone)> NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY;
			extern typed_lazy_func_t<ScrHandle()> NETWORK_IS_MULTIPLAYER_DISABLED;
			extern typed_lazy_func_t<void(bool p0)> _0x3F52E880AAF6C8CA;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_X_AFFECTS_GAMERS;
			extern typed_lazy_func_t<bool(int p0, int* p1, Vector3* p2)> _0xC22912B1D85F26B1;
			extern typed_lazy_func_t<bool(Any p0)> _0x2E0BF682CC778D49;
			extern typed_lazy_func_t<void(bool p0)> _0x94538037EE44F5CF;
			extern typed_lazy_func_t<bool()> NETWORK_IS_CABLE_CONNECTED;
			extern typed_lazy_func_t<Player()> PARTICIPANT_ID;
			extern typed_lazy_func_t<void(int time)> NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> _0xA134777FF7F33331;
			extern typed_lazy_func_t<Any()> _0xEDF7F927136C224B;
			extern typed_lazy_func_t<Any()> _0xA8ACB6459542A8C8;
			extern typed_lazy_func_t<void()> NETWORK_IS_PLAYER_ANIMATION_DRAWING_SYNCHRONIZED;
			extern typed_lazy_func_t<Any()> _0xC571D0E77D8BBC29;
			extern typed_lazy_func_t<bool(Player player, float p1, float p2, float p3, float p4, float p5, float p6, float p7, int flags)> _0x5A6FFA2433E2F14C;
			extern typed_lazy_func_t<bool(Ped ped, Player player)> _NETWORK_COPY_PED_BLEND_DATA;
			extern typed_lazy_func_t<bool(int p0, int p1, int p2, int maxPlayers, bool p4)> NETWORK_SESSION_CREW_MATCHMAKING;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE;
			extern typed_lazy_func_t<bool(int* networkHandle, const char* p1, int p2, int p3, bool p4)> NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_IS_PENDING_FRIEND;
			extern typed_lazy_func_t<float(Any p0)> NETWORK_GET_PLAYER_LOUDNESS;
			extern typed_lazy_func_t<void(bool p0)> _0xF46A1E03E8755980;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5)> NETWORK_ADD_ENTITY_AREA;
			extern typed_lazy_func_t<Any()> _0xFBC5E768C7A77A6A;
			extern typed_lazy_func_t<void(bool p0)> _0xCFEB8AF24FC1D0BB;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_ACCEPT_PRESENCE_INVITE;
			extern typed_lazy_func_t<int(Player player)> NETWORK_GET_PLAYER_INDEX;
			extern typed_lazy_func_t<bool(int p0)> TEXTURE_DOWNLOAD_HAS_FAILED;
			extern typed_lazy_func_t<bool(int* networkHandle)> NETWORK_GET_TRANSITION_HOST;
			extern typed_lazy_func_t<bool(Any p0)> _0x8806CEBFABD3CE05;
			extern typed_lazy_func_t<int()> NETWORK_GET_TIMEOUT_TIME;
			extern typed_lazy_func_t<Any()> _0xA306F470D1660581;
			extern typed_lazy_func_t<bool()> NETWORK_HAVE_ONLINE_PRIVILEGES;
			extern typed_lazy_func_t<bool(Any p0)> _0x82377B65E943F72D;
			extern typed_lazy_func_t<Any(Any p0)> NETWORK_GET_PRESENCE_INVITE_ID;
			extern typed_lazy_func_t<Any(Any p0)> _0x728C4CC7920CD102;
			extern typed_lazy_func_t<bool(Pickup pickup)> NETWORK_HAS_CONTROL_OF_PICKUP;
			extern typed_lazy_func_t<int()> NETWORK_GET_FRIEND_COUNT;
			extern typed_lazy_func_t<bool(int* p0)> NETWORK_IS_GAMER_TALKING;
			extern typed_lazy_func_t<bool(Any* p0, Any p1)> NETWORK_GET_FOUND_GAMER;
			extern typed_lazy_func_t<bool()> NETWORK_IS_SESSION_STARTED;
			extern typed_lazy_func_t<bool(Any p0)> NETWORK_REMOVE_PRESENCE_INVITE;
			extern typed_lazy_func_t<void(Entity entity)> _0xCD71A4ECAB22709E;
			extern typed_lazy_func_t<Any()> _0x2EAC52B4019E2782;
			extern typed_lazy_func_t<void(int p0)> TEXTURE_DOWNLOAD_RELEASE;
			extern typed_lazy_func_t<Any()> _0x6FB7BB3607D27FA2;
			extern typed_lazy_func_t<void()> NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL;
			extern typed_lazy_func_t<void(int amount)> RESERVE_NETWORK_MISSION_VEHICLES;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_IS_PLAYER_IN_MP_CUTSCENE;
			extern typed_lazy_func_t<bool(Hash doorHash)> _NETWORK_HAS_CONTROL_OF_PAVEMENT_STATS;
			extern typed_lazy_func_t<void()> SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME;
			extern typed_lazy_func_t<void(Player player, float x, float y, float z, bool p4, bool p5)> _NETWORK_RESPAWN_COORDS;
			extern typed_lazy_func_t<bool(Any p0)> _0x422F32CC7E56ABAD;
			extern typed_lazy_func_t<void(int netID)> _0x407091CF6037118E;
			extern typed_lazy_func_t<void(Any p0)> _0xF1EEA2DDA9FFA69D;
			extern typed_lazy_func_t<Any()> NETWORK_JOIN_GROUP_ACTIVITY;
			extern typed_lazy_func_t<bool(Any* p0, Any p1, Any* p2, Any* p3)> NETWORK_INVITE_GAMERS;
			extern typed_lazy_func_t<void()> _0x966DD84FB6A46017;
			extern typed_lazy_func_t<bool(Hash tunableContext, Hash tunableName, float* value)> _NETWORK_ACCESS_TUNABLE_FLOAT_HASH;
			extern typed_lazy_func_t<bool()> _FACEBOOK_IS_SENDING_DATA;
			extern typed_lazy_func_t<bool()> NETWORK_IS_GAME_IN_PROGRESS;
			extern typed_lazy_func_t<Player(int* networkHandle)> NETWORK_GET_PLAYER_FROM_GAMER_HANDLE;
			extern typed_lazy_func_t<int()> NETWORK_GET_MAX_FRIENDS;
			extern typed_lazy_func_t<bool()> NETWORK_SESSION_IS_PRIVATE;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any* p3, Any p4, bool p5)> _0x692D58DF40657E8C;
			extern typed_lazy_func_t<bool(Any p0)> _0x8C8D2739BA44AF0F;
			extern typed_lazy_func_t<bool()> _0x422D396F80A96547;
			extern typed_lazy_func_t<Any*()> _0x76BF03FADBF154F5;
			extern typed_lazy_func_t<int()> _NETWORK_GET_NUM_PARTICIPANTS_HOST;
			extern typed_lazy_func_t<void(bool toggle)> NETWORK_SET_OVERRIDE_SPECTATOR_MODE;
			extern typed_lazy_func_t<void(Player player, bool p1)> _0xBF22E0F32968E967;
			extern typed_lazy_func_t<Any()> NETWORK_ENABLE_MOTION_DRUGGED;
			extern typed_lazy_func_t<bool()> _CAN_PLAY_ONLINE;
			extern typed_lazy_func_t<Any(Any p0)> NETWORK_GET_PRESENCE_INVITE_INVITER;
			extern typed_lazy_func_t<const char*(int* networkHandle)> NETWORK_GET_GAMERTAG_FROM_HANDLE;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_AM_I_MUTED_BY_PLAYER;
			extern typed_lazy_func_t<Any()> _0x67FC09BC554A75E5;
			extern typed_lazy_func_t<bool()> NETWORK_IS_FINDING_GAMERS;
			extern typed_lazy_func_t<int()> NETWORK_GET_NUM_PRESENCE_INVITES;
			extern typed_lazy_func_t<void(Player player, bool toggle)> _NETWORK_OVERRIDE_SEND_RESTRICTIONS;
			extern typed_lazy_func_t<bool(int clanDesc)> NETWORK_CLAN_JOIN;
			extern typed_lazy_func_t<Any()> _0x63B406D7884BFA95;
			extern typed_lazy_func_t<bool(Any* p0, Any* p1, Any p2, Any p3)> _NETWORK_SEND_PRESENCE_TRANSITION_INVITE;
			extern typed_lazy_func_t<int(Object object)> OBJ_TO_NET;
			extern typed_lazy_func_t<bool(Player player)> NETWORK_PLAYER_HAS_HEADSET;
			extern typed_lazy_func_t<Any(Any p0)> NETWORK_GET_PRESENCE_INVITE_SESSION_ID;
			extern typed_lazy_func_t<Any()> _0x1D4DC17C38FEAFF0;
			extern typed_lazy_func_t<void()> _0x17440AA15D1D3739;
			extern typed_lazy_func_t<bool(int* p0, int* clanMembership, int p2)> NETWORK_CLAN_GET_MEMBERSHIP;
			extern typed_lazy_func_t<bool(int amount)> CAN_REGISTER_MISSION_PEDS;
			extern typed_lazy_func_t<bool(int timeA, int timeB)> IS_TIME_MORE_THAN;
			extern typed_lazy_func_t<bool(Any* p0, Any p1, Any* p2)> SET_BALANCE_ADD_MACHINES;
			extern typed_lazy_func_t<bool(Any p0, bool p1)> _0x78321BEA235FD8CD;
			extern typed_lazy_func_t<bool(int p0, int maxPlayers)> NETWORK_SESSION_HOST_FRIENDS_ONLY;
			extern typed_lazy_func_t<int(bool p0)> GET_NUM_RESERVED_MISSION_PEDS;
			extern typed_lazy_func_t<void(Any p0, Any p1)> NETWORK_CHANGE_TRANSITION_SLOTS;
			extern typed_lazy_func_t<Any(Any* p0)> _0x3C891A251567DFCE;
			extern typed_lazy_func_t<void()> _0x5C497525F803486B;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any p2, Any p3)> NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC;
			extern typed_lazy_func_t<Any(Any p0)> _0x24409FC4C55CB22D;
			extern typed_lazy_func_t<bool()> NETWORK_IS_CLOCK_TIME_OVERRIDDEN;
		} /* NETWORK */
		namespace DLC1 {
			extern typed_lazy_func_t<void(int* outComponent)> INIT_SHOP_PED_COMPONENT;
			extern typed_lazy_func_t<void(int* outProp)> INIT_SHOP_PED_PROP;
			extern typed_lazy_func_t<void(int componentId, int* outComponent)> GET_SHOP_PED_QUERY_COMPONENT;
			extern typed_lazy_func_t<int(Hash componentHash)> _0xC17AD0E5752BECDA;
			extern typed_lazy_func_t<bool(Any p0, Any p1, Any* p2)> _0xA9F9C2E0FDE11CBB;
			extern typed_lazy_func_t<bool(int p0, int p1, int* outComponent)> _0xFF56381874F82086;
			extern typed_lazy_func_t<void(Hash p0, Any* p1)> GET_SHOP_PED_COMPONENT;
			extern typed_lazy_func_t<void(Any p0, Any* p1)> GET_SHOP_PED_QUERY_PROP;
			extern typed_lazy_func_t<void(Any p0, Any* outfit)> GET_SHOP_PED_QUERY_OUTFIT;
			extern typed_lazy_func_t<void(Hash componentHash, int componentId, Any* p2, Any* p3, Any* p4)> GET_FORCED_COMPONENT;
			extern typed_lazy_func_t<void(Any p0, Any* p1)> GET_SHOP_PED_OUTFIT;
			extern typed_lazy_func_t<bool(int dlcWeaponIndex, int* outData)> GET_DLC_WEAPON_DATA;
			extern typed_lazy_func_t<int(int p0, int p1, int p2, int p3)> _0x50F457823CE6EB5F;
			extern typed_lazy_func_t<int(int character, int p1, int p2, bool p3, int p4, int componentId)> _GET_NUM_PROPS_FROM_OUTFIT;
			extern typed_lazy_func_t<bool(Hash componentHash, Hash drawableSlotHash, int componentId)> _0x341DE7ED1D2A1BFD;
			extern typed_lazy_func_t<int(int character, bool p1)> _0xF3FBE2D50A6A8C28;
			extern typed_lazy_func_t<int()> GET_NUM_DLC_WEAPONS;
			extern typed_lazy_func_t<Hash(Entity entity, int componentId, int propIndex, int propTextureIndex)> GET_HASH_NAME_FOR_PROP;
			extern typed_lazy_func_t<void(Hash componentHash, int componentId, Any* p2, Any* p3, Any* p4)> GET_VARIANT_COMPONENT;
			extern typed_lazy_func_t<Any(Any p0)> GET_SHOP_PED_OUTFIT_LOCATE;
			extern typed_lazy_func_t<int(int dlcWeaponIndex)> GET_NUM_DLC_WEAPON_COMPONENTS;
			extern typed_lazy_func_t<int(int character)> _GET_NUM_DECORATIONS;
			extern typed_lazy_func_t<Hash(Entity entity, int componentId, int drawableVariant, int textureVariant)> GET_HASH_NAME_FOR_COMPONENT;
			extern typed_lazy_func_t<bool(int dlcVehicleIndex, int* outData)> GET_DLC_VEHICLE_DATA;
			extern typed_lazy_func_t<int(int dlcVehicleIndex)> GET_DLC_VEHICLE_FLAGS;
			extern typed_lazy_func_t<void(Any p0, Any* p1)> _0x5D5CAFF661DDF6FC;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any* p2, Any* p3, Any* p4)> _0xE1CA84EBF72E691D;
			extern typed_lazy_func_t<bool(Any outfit, int slot, Any* item)> _GET_PROP_FROM_OUTFIT;
			extern typed_lazy_func_t<int()> GET_NUM_DLC_VEHICLES;
			extern typed_lazy_func_t<bool(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr)> GET_DLC_WEAPON_COMPONENT_DATA;
			extern typed_lazy_func_t<bool(Any modData)> IS_DLC_VEHICLE_MOD;
			extern typed_lazy_func_t<int(Hash componentHash)> _GET_NUM_FORCED_COMPONENTS;
			extern typed_lazy_func_t<Any(Any p0)> _0x017568A8182D98A6;
			extern typed_lazy_func_t<Hash(int dlcVehicleIndex)> GET_DLC_VEHICLE_MODEL;
			extern typed_lazy_func_t<bool(Any* dlcData)> _IS_DLC_DATA_EMPTY;
			extern typed_lazy_func_t<int(int modData)> _0xC098810437312FFF;
		} /* DLC1 */
		namespace DLC2 {
			extern typed_lazy_func_t<bool()> _0xF2E07819EF1A5289;
			extern typed_lazy_func_t<Any()> _0x9489659372A81585;
			extern typed_lazy_func_t<bool(Any* variable, Any unused)> _NULLIFY;
			extern typed_lazy_func_t<void()> _LOAD_MP_DLC_MAPS;
			extern typed_lazy_func_t<bool(Hash dlcHash)> IS_DLC_PRESENT;
			extern typed_lazy_func_t<Any()> _0xA213B11DFF526300;
			extern typed_lazy_func_t<bool()> _0x8D30F648014A92B5;
			extern typed_lazy_func_t<bool()> GET_IS_LOADING_SCREEN_ACTIVE;
			extern typed_lazy_func_t<void()> _0xD7C10C4A637992C9;
		} /* DLC2 */
		namespace WEAPON {
			extern typed_lazy_func_t<bool(Object weapon, Hash addonHash)> HAS_WEAPON_GOT_WEAPON_COMPONENT;
			extern typed_lazy_func_t<void(Object weapon, int tintIndex)> SET_WEAPON_OBJECT_TINT_INDEX;
			extern typed_lazy_func_t<Entity(Ped ped, float p1)> _0xB4C8D77C80C0421E;
			extern typed_lazy_func_t<void(Hash weaponHash, bool p1)> REMOVE_ALL_PROJECTILES_OF_TYPE;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, bool equipNow)> SET_CURRENT_PED_WEAPON;
			extern typed_lazy_func_t<bool(Ped ped, int p1)> IS_PED_ARMED;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_WEAPON_READY_TO_SHOOT;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_INFINITE_AMMO_CLIP;
			extern typed_lazy_func_t<void(float p0)> _0xE620FD3512A04F18;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, int tintIndex)> SET_PED_WEAPON_TINT_INDEX;
			extern typed_lazy_func_t<int(Hash weaponHash)> GET_WEAPON_CLIP_SIZE;
			extern typed_lazy_func_t<Hash(Hash weaponHash)> GET_WEAPONTYPE_GROUP;
			extern typed_lazy_func_t<void(Ped ped)> _0xE4DCEC7FD5B739A5;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, int ammo)> ADD_AMMO_TO_PED;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, Hash componentHash)> REMOVE_WEAPON_COMPONENT_FROM_PED;
			extern typed_lazy_func_t<Hash(Hash weaponHash)> GET_WEAPONTYPE_SLOT;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, int ammoCount, bool equipNow)> GIVE_DELAYED_WEAPON_TO_PED;
			extern typed_lazy_func_t<bool(Entity entity, Hash weaponHash, int weaponType)> HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, float xOffset, float yOffset, float zOffset, int ammoCount)> SET_PED_DROPS_INVENTORY_WEAPON;
			extern typed_lazy_func_t<bool(Hash weaponHash)> HAS_WEAPON_ASSET_LOADED;
			extern typed_lazy_func_t<bool(Hash weaponHash, Any* outData)> GET_WEAPON_HUD_STATS;
			extern typed_lazy_func_t<void(Entity weaponObject)> REQUEST_WEAPON_HIGH_DETAIL_MODEL;
			extern typed_lazy_func_t<bool(Ped ped, Hash* weaponHash)> GET_CURRENT_PED_VEHICLE_WEAPON;
			extern typed_lazy_func_t<void(Ped ped, bool p1)> REMOVE_ALL_PED_WEAPONS;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash, int weaponType)> HAS_PED_BEEN_DAMAGED_BY_WEAPON;
			extern typed_lazy_func_t<int(Hash weaponHash)> GET_WEAPON_TINT_COUNT;
			extern typed_lazy_func_t<Hash(Ped ped, Hash weaponSlot)> GET_PED_WEAPONTYPE_IN_SLOT;
			extern typed_lazy_func_t<void(Ped ped, Hash gadgetHash, bool p2)> SET_PED_GADGET;
			extern typed_lazy_func_t<void(Ped ped, bool toggle, Hash weaponHash)> SET_PED_INFINITE_AMMO;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, int ammoCount, bool isHidden, bool equipNow)> GIVE_WEAPON_TO_PED;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash)> REMOVE_WEAPON_FROM_PED;
			extern typed_lazy_func_t<void(Any p0, Any p1)> SET_PED_AMMO_TO_DROP;
			extern typed_lazy_func_t<bool(Ped ped, Vector3* coords)> GET_PED_LAST_WEAPON_IMPACT_COORD;
			extern typed_lazy_func_t<bool(Hash componentHash, int* outData)> GET_WEAPON_COMPONENT_HUD_STATS;
			extern typed_lazy_func_t<void(Ped ped, float xBias, float yBias)> SET_PED_CHANCE_OF_FIRING_BLANKS;
			extern typed_lazy_func_t<bool(Ped ped)> SET_WEAPON_SMOKEGRENADE_ASSIGNED;
			extern typed_lazy_func_t<int(Ped ped, Hash weaponhash)> GET_AMMO_IN_PED_WEAPON;
			extern typed_lazy_func_t<Hash(Hash weaponHash)> GET_WEAPONTYPE_MODEL;
			extern typed_lazy_func_t<void(Entity entity)> CLEAR_ENTITY_LAST_WEAPON_DAMAGE;
			extern typed_lazy_func_t<bool(Ped ped, Hash gadgetHash)> GET_IS_PED_GADGET_EQUIPPED;
			extern typed_lazy_func_t<Hash(Ped ped)> GET_SELECTED_PED_WEAPON;
			extern typed_lazy_func_t<void(Object weaponObject, Ped ped)> GIVE_WEAPON_OBJECT_TO_PED;
			extern typed_lazy_func_t<void(bool toggle)> ENABLE_LASER_SIGHT_RENDERING;
			extern typed_lazy_func_t<Hash(Ped ped, Hash weaponHash)> GET_PED_AMMO_TYPE_FROM_WEAPON;
			extern typed_lazy_func_t<bool(Ped ped)> _PED_SKIP_NEXT_RELOADING;
			extern typed_lazy_func_t<bool(Ped ped)> MAKE_PED_RELOAD;
			extern typed_lazy_func_t<bool(Ped ped)> IS_PED_CURRENT_WEAPON_SILENCED;
			extern typed_lazy_func_t<int(Hash weaponHash)> GET_WEAPON_DAMAGE_TYPE;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash, int ammo)> SET_AMMO_IN_CLIP;
			extern typed_lazy_func_t<bool(Ped driver, Vehicle vehicle, Hash weaponHash, Any p3)> HAS_VEHICLE_GOT_PROJECTILE_ATTACHED;
			extern typed_lazy_func_t<void(Hash weaponHash)> REMOVE_WEAPON_ASSET;
			extern typed_lazy_func_t<float(Any p0, Any p1)> _0x3133B907D8B32053;
			extern typed_lazy_func_t<float(Ped ped)> _GET_LOCKON_RANGE_OF_CURRENT_PED_WEAPON;
			extern typed_lazy_func_t<Hash(Ped ped, bool p1)> GET_BEST_PED_WEAPON;
			extern typed_lazy_func_t<bool(Hash weaponHash)> IS_WEAPON_VALID;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash, bool p2)> HAS_PED_GOT_WEAPON;
			extern typed_lazy_func_t<bool(Ped ped, Hash* weaponHash, bool p2)> GET_CURRENT_PED_WEAPON;
			extern typed_lazy_func_t<Any(float distance)> SET_FLASH_LIGHT_FADE_DISTANCE;
			extern typed_lazy_func_t<void(Ped ped, Hash animStyle)> SET_WEAPON_ANIMATION_OVERRIDE;
			extern typed_lazy_func_t<bool(Hash weaponHash)> CAN_USE_WEAPON_ON_PARACHUTE;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash, int* ammo)> GET_AMMO_IN_CLIP;
			extern typed_lazy_func_t<Entity(Ped ped)> GET_CURRENT_PED_WEAPON_ENTITY_INDEX;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE;
			extern typed_lazy_func_t<void(Ped ped)> CLEAR_PED_LAST_WEAPON_DAMAGE;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash, int* ammo)> GET_MAX_AMMO;
			extern typed_lazy_func_t<bool(Hash weaponHash, Hash componentHash)> DOES_WEAPON_TAKE_WEAPON_COMPONENT;
			extern typed_lazy_func_t<Object(Ped ped, bool p1)> GET_WEAPON_OBJECT_FROM_PED;
			extern typed_lazy_func_t<int(Object weapon)> GET_WEAPON_OBJECT_TINT_INDEX;
			extern typed_lazy_func_t<Hash(Hash componentHash)> GET_WEAPON_COMPONENT_TYPE_MODEL;
			extern typed_lazy_func_t<void(Ped ped, Any ammoType, int ammo)> SET_PED_AMMO_BY_TYPE;
			extern typed_lazy_func_t<int(Ped ped, Any ammoType)> GET_PED_AMMO_BY_TYPE;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash, Hash componentHash)> IS_PED_WEAPON_COMPONENT_ACTIVE;
			extern typed_lazy_func_t<void(Any p0, Any p1)> REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash)> SET_CURRENT_PED_VEHICLE_WEAPON;
			extern typed_lazy_func_t<void(Ped ped, bool visible, bool deselectWeapon, bool p3, bool p4)> SET_PED_CURRENT_WEAPON_VISIBLE;
			extern typed_lazy_func_t<void(Ped ped)> SET_PED_DROPS_WEAPON;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, bool p2)> EXPLODE_PROJECTILES;
			extern typed_lazy_func_t<float(Ped ped)> GET_MAX_RANGE_OF_CURRENT_PED_WEAPON;
			extern typed_lazy_func_t<Object(Hash weaponHash, int ammoCount, float x, float y, float z, bool showWorldModel, float heading, Any p7)> CREATE_WEAPON_OBJECT;
			extern typed_lazy_func_t<void(Object weaponObject, Hash addonHash)> GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, int ammo)> SET_PED_AMMO;
			extern typed_lazy_func_t<int(Ped ped, Hash weaponHash, bool p2)> GET_MAX_AMMO_IN_CLIP;
			extern typed_lazy_func_t<void(Ped ped, Hash weaponHash, Hash componentHash)> GIVE_WEAPON_COMPONENT_TO_PED;
			extern typed_lazy_func_t<bool(Ped ped, Hash weaponHash, Hash componentHash)> HAS_PED_GOT_WEAPON_COMPONENT;
			extern typed_lazy_func_t<void(Hash weaponHash, int p1, int p2)> REQUEST_WEAPON_ASSET;
			extern typed_lazy_func_t<int(Ped ped, Hash weaponHash)> GET_PED_WEAPON_TINT_INDEX;
			extern typed_lazy_func_t<void(Ped ped, bool toggle)> SET_PED_DROPS_WEAPONS_WHEN_DEAD;
		} /* WEAPON */
		namespace GRAPHICS {
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int r1, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2)> DRAW_DEBUG_LINE_WITH_TWO_COLOURS;
			extern typed_lazy_func_t<int()> _0x90A78ECAA4E78453;
			extern typed_lazy_func_t<bool(int p0)> _0x3DEC726C25A11BAC;
			extern typed_lazy_func_t<int(Any p0)> _RETURN_TWO;
			extern typed_lazy_func_t<void(bool toggle)> SET_SEETHROUGH;
			extern typed_lazy_func_t<void()> _0xDE81239437E8C5A8;
			extern typed_lazy_func_t<void()> _0xE1C8709406F2C41C;
			extern typed_lazy_func_t<void(Any p0)> _0xD1C55B110E4DF534;
			extern typed_lazy_func_t<void(Entity entity)> ATTACH_TV_AUDIO_TO_ENTITY;
			extern typed_lazy_func_t<Any(Any p0)> _0x2C42340F916C5930;
			extern typed_lazy_func_t<bool(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, bool axisX, bool axisY, bool axisZ)> _START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE_2;
			extern typed_lazy_func_t<void(int ptfxHandle, float alpha)> SET_PARTICLE_FX_LOOPED_ALPHA;
			extern typed_lazy_func_t<int(const char* scaleformName)> REQUEST_SCALEFORM_MOVIE_INSTANCE;
			extern typed_lazy_func_t<void(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, Any p13)> _DRAW_SCALEFORM_MOVIE_3D_NON_ADDITIVE;
			extern typed_lazy_func_t<void(Any p0)> SET_PARTICLE_FX_SHOOTOUT_BOAT;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x3, float y1, float y2, float y3, float z1, float z2, float z3, float scale, Any p13, int alpha)> _ADD_CLAN_DECAL_TO_VEHICLE;
			extern typed_lazy_func_t<bool(bool effectName)> _GET_SCREEN_EFFECT_IS_ACTIVE;
			extern typed_lazy_func_t<void(int checkpoint, int red, int green, int blue, int alpha)> _SET_CHECKPOINT_ICON_RGBA;
			extern typed_lazy_func_t<void()> _0x3669F1B198DCAA4F;
			extern typed_lazy_func_t<bool(float transitionTime)> _TRANSITION_FROM_BLURRED;
			extern typed_lazy_func_t<void(int ptfxHandle, float range)> _SET_PARTICLE_FX_LOOPED_RANGE;
			extern typed_lazy_func_t<void(bool p0)> _0xA46B73FAA3460AE1;
			extern typed_lazy_func_t<void(float p0)> _0x99AC7F0D8B9C893D;
			extern typed_lazy_func_t<void(const char* modifierName)> SET_TIMECYCLE_MODIFIER;
			extern typed_lazy_func_t<bool(int scaleformHandle)> HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT;
			extern typed_lazy_func_t<void()> _0x346EF3ECAAAB149E;
			extern typed_lazy_func_t<void(const char* textureDict, const char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha)> DRAW_SPRITE;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0xD7D0B00177485411;
			extern typed_lazy_func_t<void(Object decal)> REMOVE_DECAL;
			extern typed_lazy_func_t<void(Vehicle vehicle, Any p1)> _0xD2300034310557E4;
			extern typed_lazy_func_t<void(const char* componentType)> BEGIN_TEXT_COMMAND_SCALEFORM_STRING;
			extern typed_lazy_func_t<void()> END_TEXT_COMMAND_SCALEFORM_STRING;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12)> _0x1C4FC5752BCD8E48;
			extern typed_lazy_func_t<void(float x, float y, float z, float size, int red, int green, int blue, int alpha)> DRAW_DEBUG_CROSS;
			extern typed_lazy_func_t<bool(const char* p0, Any* p1, Any* p2, bool p3)> _0x4862437A486F91B0;
			extern typed_lazy_func_t<void(bool p0, bool p1)> _0x1072F115DAB0717E;
			extern typed_lazy_func_t<void(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float radius, float falloff, int shadowId)> _DRAW_SPOT_LIGHT_WITH_SHADOW;
			extern typed_lazy_func_t<void(int checkpoint)> _0x615D3925E87A3B26;
			extern typed_lazy_func_t<void(int ptfxHandle, bool p1)> REMOVE_PARTICLE_FX;
			extern typed_lazy_func_t<int()> GET_TV_CHANNEL;
			extern typed_lazy_func_t<int(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, float radius, int red, int green, int blue, int alpha, int reserved)> CREATE_CHECKPOINT;
			extern typed_lazy_func_t<void()> _SCREEN_DRAW_POSITION_END;
			extern typed_lazy_func_t<void(bool toggle)> SET_NOISEOVERIDE;
			extern typed_lazy_func_t<void(float p0, float p1, float fadeIn, float duration, float fadeOut)> SET_FLASH;
			extern typed_lazy_func_t<Any()> _0x7B226C785A52A0A9;
			extern typed_lazy_func_t<void(float p0)> _0x46D1A61A21F566FC;
			extern typed_lazy_func_t<void(const char* effectName)> _STOP_SCREEN_EFFECT;
			extern typed_lazy_func_t<void(float x, float y, float z, int r, int g, int b, float range, float intensity, float shadow)> _DRAW_LIGHT_WITH_RANGE_AND_SHADOW;
			extern typed_lazy_func_t<void(float x, float y, float p2, float p3)> _SCREEN_DRAW_POSITION_RATIO;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4)> _0x9CFDD90B2B844BF7;
			extern typed_lazy_func_t<bool(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, bool axisX, bool axisY, bool axisZ)> _START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_2;
			extern typed_lazy_func_t<void(const char* name)> _RESET_PARTICLE_FX_ASSET_OLD_TO_NEW;
			extern typed_lazy_func_t<void(bool p0)> _0x0E4299C549F0D1F1;
			extern typed_lazy_func_t<void(bool enabled)> SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, int red, int green, int blue, int alpha)> DRAW_DEBUG_SPHERE;
			extern typed_lazy_func_t<bool()> _0x1DD2139A9A20DCE8;
			extern typed_lazy_func_t<void(bool p0)> _0xEF398BEEE4EF45F9;
			extern typed_lazy_func_t<void(int* scaleformHandle)> SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<void(bool toggle)> ENABLE_MOVIE_SUBTITLES;
			extern typed_lazy_func_t<void()> _0x14FC5833464340A8;
			extern typed_lazy_func_t<void(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11)> _0x12995F2E53FFA601;
			extern typed_lazy_func_t<bool(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, bool axisX, bool axisY, bool axisZ)> START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE;
			extern typed_lazy_func_t<float(int decal)> GET_DECAL_WASH_LEVEL;
			extern typed_lazy_func_t<bool(const char* functionName)> _BEGIN_SCALEFORM_MOVIE_METHOD_V;
			extern typed_lazy_func_t<void(Entity entity, int red, int green, int blue, int alpha)> SET_ENTITY_ICON_COLOR;
			extern typed_lazy_func_t<int(const char* effectName, float x, float y, float z, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis, bool p11)> START_PARTICLE_FX_LOOPED_AT_COORD;
			extern typed_lazy_func_t<void()> END_SCALEFORM_MOVIE_METHOD;
			extern typed_lazy_func_t<void(Any p0)> _0xF44A5456AC3F4F97;
			extern typed_lazy_func_t<int()> _GET_MAXIMUM_NUMBER_OF_PHOTOS_2;
			extern typed_lazy_func_t<Any()> _0x35FB78DC42B7BD21;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> WASH_DECALS_FROM_VEHICLE;
			extern typed_lazy_func_t<void(const char* p0)> _0xBF59707B3E5ED531;
			extern typed_lazy_func_t<int()> _0x5B0316762AFD4A64;
			extern typed_lazy_func_t<void(const char* p0)> _0xD7021272EB0A451E;
			extern typed_lazy_func_t<bool(const char* scaleformName)> _HAS_NAMED_SCALEFORM_MOVIE_LOADED;
			extern typed_lazy_func_t<int()> GET_MAXIMUM_NUMBER_OF_PHOTOS;
			extern typed_lazy_func_t<void(bool p0)> _0xE63D7C6EECECB66B;
			extern typed_lazy_func_t<void(int ptfxHandle, float x, float y, float z, float rotX, float rotY, float rotZ)> SET_PARTICLE_FX_LOOPED_OFFSETS;
			extern typed_lazy_func_t<void(Any p0, bool p1)> SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE;
			extern typed_lazy_func_t<void(float p0)> _0xF78B803082D4386F;
			extern typed_lazy_func_t<int(int method_return)> _GET_SCALEFORM_MOVIE_FUNCTION_RETURN_INT;
			extern typed_lazy_func_t<bool()> _0x7FA5D82B8F58EC06;
			extern typed_lazy_func_t<void(int value)> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_INT;
			extern typed_lazy_func_t<void(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, bool bobUpAndDown, bool faceCamera, int p19, bool rotate, const char* textureDict, const char* textureName, bool drawOnEnts)> DRAW_MARKER;
			extern typed_lazy_func_t<float(bool b)> _GET_ASPECT_RATIO;
			extern typed_lazy_func_t<void()> _0xC35A6D07C93802B2;
			extern typed_lazy_func_t<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, bool xAxis, bool yAxis, bool zAxis)> _START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE_2;
			extern typed_lazy_func_t<void(Vehicle vehicle)> REMOVE_DECALS_FROM_VEHICLE;
			extern typed_lazy_func_t<bool(int method_return)> _GET_SCALEFORM_MOVIE_FUNCTION_RETURN_BOOL;
			extern typed_lazy_func_t<void(float p0)> _0xE2892E7E55D7073A;
			extern typed_lazy_func_t<void()> _0x27CFB1B1E078CB2D;
			extern typed_lazy_func_t<void(int scaleform, const char* functionName, float param1, float param2, float param3, float param4, float param5)> _CALL_SCALEFORM_MOVIE_FUNCTION_FLOAT_PARAMS;
			extern typed_lazy_func_t<void(bool value)> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_BOOL;
			extern typed_lazy_func_t<int(Any p0)> _0x1670F8D05056F257;
			extern typed_lazy_func_t<int()> _0x0C0C4E81E1AC60A0;
			extern typed_lazy_func_t<Any(Entity entity, const char* icon)> ADD_ENTITY_ICON;
			extern typed_lazy_func_t<void(int movieMeshSet)> RELEASE_MOVIE_MESH_SET;
			extern typed_lazy_func_t<void(bool toggle)> SET_NIGHTVISION;
			extern typed_lazy_func_t<void(int decalType)> _0xB7ED70C49521A61D;
			extern typed_lazy_func_t<void(int scaleform1, int scaleform2, int red, int green, int blue, int alpha)> DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED;
			extern typed_lazy_func_t<void(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY, float unkZ)> _0xF51D36185993515D;
			extern typed_lazy_func_t<void(bool toggle)> SET_TV_AUDIO_FRONTEND;
			extern typed_lazy_func_t<void(float value)> SET_NOISINESSOVERIDE;
			extern typed_lazy_func_t<Any()> _0xE59343E9E96529E7;
			extern typed_lazy_func_t<void(const char* name)> _USE_PARTICLE_FX_ASSET_NEXT_CALL;
			extern typed_lazy_func_t<void(int scaleform, const char* functionName, const char* param1, const char* param2, const char* param3, const char* param4, const char* param5)> _CALL_SCALEFORM_MOVIE_FUNCTION_STRING_PARAMS;
			extern typed_lazy_func_t<bool(int p0)> _0x759650634F07B6B4;
			extern typed_lazy_func_t<void(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float hardness, float radius, float falloff)> DRAW_SPOT_LIGHT;
			extern typed_lazy_func_t<void(int* x, int* y)> GET_SCREEN_RESOLUTION;
			extern typed_lazy_func_t<bool(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, bool axisX, bool axisY, bool axisZ)> START_PARTICLE_FX_NON_LOOPED_ON_ENTITY;
			extern typed_lazy_func_t<bool(const char* functionName)> _BEGIN_SCALEFORM_MOVIE_METHOD_N;
			extern typed_lazy_func_t<void(float volume)> SET_TV_VOLUME;
			extern typed_lazy_func_t<int()> _GET_NUMBER_OF_PHOTOS;
			extern typed_lazy_func_t<void(float x, float y, float z, Any p3)> SET_DRAW_ORIGIN;
			extern typed_lazy_func_t<void(bool p0)> _0xC0416B061F2B7E5E;
			extern typed_lazy_func_t<void(float x, float y, float z, float range)> REMOVE_DECALS_IN_RANGE;
			extern typed_lazy_func_t<Object(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, float p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float opacity, float timeout, bool p17, bool p18, bool p19)> ADD_DECAL;
			extern typed_lazy_func_t<void()> PUSH_TIMECYCLE_MODIFIER;
			extern typed_lazy_func_t<void(int scaleform, int red, int green, int blue, int alpha, int unk)> DRAW_SCALEFORM_MOVIE_FULLSCREEN;
			extern typed_lazy_func_t<bool(int hudComponent, const char* functionName)> _BEGIN_SCALEFORM_MOVIE_METHOD_HUD_COMPONENT;
			extern typed_lazy_func_t<void(float posX, float posY, float posZ, int colorR, int colorG, int colorB, float range, float intensity)> DRAW_LIGHT_WITH_RANGE;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0xDBAA5EC848BA2D46;
			extern typed_lazy_func_t<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis)> _START_PARTICLE_FX_LOOPED_ON_ENTITY_2;
			extern typed_lazy_func_t<void(float p0)> _0x27E32866E9A5C416;
			extern typed_lazy_func_t<void()> POP_TIMECYCLE_MODIFIER;
			extern typed_lazy_func_t<bool(int scaleformHandle)> HAS_SCALEFORM_MOVIE_LOADED;
			extern typed_lazy_func_t<void()> _0xD801CC02177FA3F1;
			extern typed_lazy_func_t<void(bool p0)> _0xDC459CFA0CCE245B;
			extern typed_lazy_func_t<void(const char* p0)> _0xBBF327DED94E4DEB;
			extern typed_lazy_func_t<int(const char* scaleformName)> REQUEST_SCALEFORM_MOVIE;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha)> DRAW_BOX;
			extern typed_lazy_func_t<int(bool p0)> _0xF5BED327CEA362B1;
			extern typed_lazy_func_t<Any(Any p0)> _0xE791DF1F73ED2C8B;
			extern typed_lazy_func_t<void(int checkpoint)> DELETE_CHECKPOINT;
			extern typed_lazy_func_t<Any()> _0xB2EBE8CBC58B90E9;
			extern typed_lazy_func_t<bool()> GET_IS_WIDESCREEN;
			extern typed_lazy_func_t<Any()> _0xBCEDB009461DA156;
			extern typed_lazy_func_t<void(bool toggle)> ENABLE_CLOWN_BLOOD_VFX;
			extern typed_lazy_func_t<void(const char* modifierName, float transition)> SET_TRANSITION_TIMECYCLE_MODIFIER;
			extern typed_lazy_func_t<float()> GET_TV_VOLUME;
			extern typed_lazy_func_t<void(const char* oldAsset, const char* newAsset)> _SET_PARTICLE_FX_ASSET_OLD_TO_NEW;
			extern typed_lazy_func_t<void(Any* p0)> _0x5096FD9CCB49056D;
			extern typed_lazy_func_t<int(const char* scaleformName)> _REQUEST_SCALEFORM_MOVIE_INTERACTIVE;
			extern typed_lazy_func_t<void(int p0)> _0xEC52C631A1831C03;
			extern typed_lazy_func_t<int(const char* movieMeshSetName)> LOAD_MOVIE_MESH_SET;
			extern typed_lazy_func_t<void(bool enable)> _SET_BLACKOUT;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> WASH_DECALS_IN_RANGE;
			extern typed_lazy_func_t<void(bool p0)> _0x03300B57FCAC6DDB;
			extern typed_lazy_func_t<void()> _0x2BF72AD5B41AA739;
			extern typed_lazy_func_t<void()> _END_TEXT_COMMAND_SCALEFORM_STRING_2;
			extern typed_lazy_func_t<void(bool p0)> _0xC6372ECD45D73BCD;
			extern typed_lazy_func_t<void(bool p0, bool p1, float p2, float p3, float p4, float p5)> _0xBA3D65906822BED5;
			extern typed_lazy_func_t<void()> _0xD9454B5752C857DC;
			extern typed_lazy_func_t<Any(Any p0)> _0x9B6E70C5CEEF4EEB;
			extern typed_lazy_func_t<void(bool p0)> _0xD39D13C9FEBF0511;
			extern typed_lazy_func_t<Any()> _0xA4819F5E23E2FFAD;
			extern typed_lazy_func_t<void()> _0xEFB55E7C25D3B3BE;
			extern typed_lazy_func_t<void(int scaleformHandle, float x, float y, float width, float height, int red, int green, int blue, int alpha, int unk)> DRAW_SCALEFORM_MOVIE;
			extern typed_lazy_func_t<void(Any* p0)> _0x2A2A52824DB96700;
			extern typed_lazy_func_t<void(bool toggle)> _SET_FORCE_PED_FOOTSTEPS_TRACKS;
			extern typed_lazy_func_t<void(float p0)> _0x1CBA05AE7BD7EE05;
			extern typed_lazy_func_t<bool(int hudComponent)> _HAS_HUD_SCALEFORM_LOADED;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha)> DRAW_DEBUG_BOX;
			extern typed_lazy_func_t<void(int layer)> _SET_UI_LAYER;
			extern typed_lazy_func_t<void(bool p0)> _0x6DDBF9DFFC4AC080;
			extern typed_lazy_func_t<int()> CREATE_TRACKED_POINT;
			extern typed_lazy_func_t<void(float p0)> _0x5E9DAF5A20F15908;
			extern typed_lazy_func_t<void(float p0)> _0x36F6626459D91457;
			extern typed_lazy_func_t<bool(const char* textureDict, bool p1)> _0x27FEB5254759CDE3;
			extern typed_lazy_func_t<bool(float xCoord, float yCoord, float zCoord, float p3)> _0x2F09F7976C512404;
			extern typed_lazy_func_t<void(float p0)> _0x2C328AF17210F009;
			extern typed_lazy_func_t<void()> CLEAR_DRAW_ORIGIN;
			extern typed_lazy_func_t<void(float r, float g, float b)> SET_PARTICLE_FX_NON_LOOPED_COLOUR;
			extern typed_lazy_func_t<void(bool p0)> _0x8CDE909A0370BB3A;
			extern typed_lazy_func_t<bool(bool p0)> _0x2A893980E96B659A;
			extern typed_lazy_func_t<void(float x, float y, float width, float height, int r, int g, int b, int a)> DRAW_RECT;
			extern typed_lazy_func_t<void()> _0x27CB772218215325;
			extern typed_lazy_func_t<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis)> START_PARTICLE_FX_LOOPED_ON_ENTITY;
			extern typed_lazy_func_t<void(bool Toggle)> ENABLE_ALIEN_BLOOD_VFX;
			extern typed_lazy_func_t<void(bool p0)> _0x02369D5C8A51FDCF;
			extern typed_lazy_func_t<void()> _0xA44FF770DFBC5DAE;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha)> DRAW_LINE;
			extern typed_lazy_func_t<int(Any p0)> _0xA4664972A9B8F8BA;
			extern typed_lazy_func_t<bool()> _IS_SEETHROUGH_ACTIVE;
			extern typed_lazy_func_t<void(const char* textureDict)> SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<float()> GET_SAFE_ZONE_SIZE;
			extern typed_lazy_func_t<void(float p0)> _0xB3C641F3630BF6DA;
			extern typed_lazy_func_t<float()> IS_PARTICLE_FX_DELAYED_BLINK;
			extern typed_lazy_func_t<void(float p0)> _0xBB90E12CAC1DAB25;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> FADE_DECALS_IN_RANGE;
			extern typed_lazy_func_t<void(int channel)> SET_TV_CHANNEL;
			extern typed_lazy_func_t<void(const char* text, float x, float y, float z, int red, int green, int blue, int alpha)> DRAW_DEBUG_TEXT_2D;
			extern typed_lazy_func_t<int()> _0x0D6CA79EEEBD8CA3;
			extern typed_lazy_func_t<void(int checkpoint, float nearHeight, float farHeight, float radius)> SET_CHECKPOINT_CYLINDER_HEIGHT;
			extern typed_lazy_func_t<void(int unk)> _0xE3E2C1B4C59DBC77;
			extern typed_lazy_func_t<bool(bool p0)> _0x7AC24EAB6D74118D;
			extern typed_lazy_func_t<void(Object obj, float x, float y, float z)> REMOVE_DECALS_FROM_OBJECT_FACING;
			extern typed_lazy_func_t<void(float p0)> _0x1600FD8CF72EBC12;
			extern typed_lazy_func_t<void(const char* text, float x, float y, float z, int red, int green, int blue, int alpha)> DRAW_DEBUG_TEXT;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, bool p8)> _0x312342E1A4874F3F;
			extern typed_lazy_func_t<void(Entity entity)> REMOVE_PARTICLE_FX_FROM_ENTITY;
			extern typed_lazy_func_t<void()> _0x0A46AF8A78DC5E0A;
			extern typed_lazy_func_t<bool(const char* textureDict)> HAS_STREAMED_TEXTURE_DICT_LOADED;
			extern typed_lazy_func_t<bool()> GET_IS_HIDEF;
			extern typed_lazy_func_t<bool(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis)> _START_PARTICLE_FX_NON_LOOPED_AT_COORD_2;
			extern typed_lazy_func_t<void(int ptfxHandle, float r, float g, float b, bool p4)> SET_PARTICLE_FX_LOOPED_COLOUR;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha)> DRAW_POLY;
			extern typed_lazy_func_t<void(bool p0)> _0x22A249A53034450A;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_ICON_VISIBILITY;
			extern typed_lazy_func_t<bool(int point)> IS_TRACKED_POINT_VISIBLE;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3)> _0x967278682CB6967A;
			extern typed_lazy_func_t<void(const char* textureDict, bool p1)> REQUEST_STREAMED_TEXTURE_DICT;
			extern typed_lazy_func_t<bool(float worldX, float worldY, float worldZ, float* screenX, float* screenY)> GET_SCREEN_COORD_FROM_WORLD_COORD;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, float p4)> _0xAE51BC858F32BA66;
			extern typed_lazy_func_t<void(int ptfxHandle, float scale)> SET_PARTICLE_FX_LOOPED_SCALE;
			extern typed_lazy_func_t<void(bool toggle)> _SET_FORCE_VEHICLE_TRAILS;
			extern typed_lazy_func_t<const char*(int method_return)> SITTING_TV;
			extern typed_lazy_func_t<void(int hudComponent)> _REQUEST_HUD_SCALEFORM;
			extern typed_lazy_func_t<void(bool p0)> _0x74C180030FDE4B69;
			extern typed_lazy_func_t<void(Any p0)> _0x61F95E5BB3E0A8C6;
			extern typed_lazy_func_t<void()> _0x5DEBD9C4DC995692;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha)> DRAW_DEBUG_LINE;
			extern typed_lazy_func_t<Vector3(const char* textureDict, const char* textureName)> GET_TEXTURE_RESOLUTION;
			extern typed_lazy_func_t<void(int ptfxHandle, const char* propertyName, float amount, bool Id)> SET_PARTICLE_FX_LOOPED_EVOLUTION;
			extern typed_lazy_func_t<void(int scaleform, const char* method)> CALL_SCALEFORM_MOVIE_METHOD;
			extern typed_lazy_func_t<bool(int scaleform, const char* functionName)> BEGIN_SCALEFORM_MOVIE_METHOD;
			extern typed_lazy_func_t<void(const char* button)> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_BUTTON_NAME;
			extern typed_lazy_func_t<void()> _0x7A42B2E236E71415;
			extern typed_lazy_func_t<void(bool p0)> _0xA356990E161C9E65;
			extern typed_lazy_func_t<void(const char* effectName, int duration, bool looped)> _START_SCREEN_EFFECT;
			extern typed_lazy_func_t<void()> _0x03FC694AE06C5A20;
			extern typed_lazy_func_t<bool(float transitionTime)> _TRANSITION_TO_BLURRED;
			extern typed_lazy_func_t<void(bool p0)> _0x9B079E5221D984D3;
			extern typed_lazy_func_t<void(int scaleform, const char* functionName, float floatParam1, float floatParam2, float floatParam3, float floatParam4, float floatParam5, const char* stringParam1, const char* stringParam2, const char* stringParam3, const char* stringParam4, const char* stringParam5)> _CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS;
			extern typed_lazy_func_t<void(float value)> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_FLOAT;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Any p1)> _DOES_VEHICLE_HAVE_DECAL;
			extern typed_lazy_func_t<void(float p0)> _0xBDEB86F4D5809204;
			extern typed_lazy_func_t<void(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float sharpness, float p9, float scaleX, float scaleY, float scaleZ, Any p13)> DRAW_SCALEFORM_MOVIE_3D;
			extern typed_lazy_func_t<void(Any p0)> _0x649C97D52332341A;
			extern typed_lazy_func_t<void(float alpha)> SET_PARTICLE_FX_NON_LOOPED_ALPHA;
			extern typed_lazy_func_t<void(int x, int y)> _SCREEN_DRAW_POSITION_BEGIN;
			extern typed_lazy_func_t<bool()> _0xEB3DAC2C86001E5E;
			extern typed_lazy_func_t<bool(const char* p0, Ped ped, int p2, float posX, float posY, float posZ)> _DRAW_SHOWROOM;
			extern typed_lazy_func_t<int(int p0)> _0xCB82A0BF0E3E3265;
			extern typed_lazy_func_t<void(int point, float x, float y, float z, float radius)> SET_TRACKED_POINT_INFO;
			extern typed_lazy_func_t<void(bool toggle)> _SET_FAR_SHADOWS_SUPPRESSED;
			extern typed_lazy_func_t<void(float X, float Y, float Z, float radius)> REMOVE_PARTICLE_FX_IN_RANGE;
			extern typed_lazy_func_t<void(int point)> DESTROY_TRACKED_POINT;
			extern typed_lazy_func_t<void(bool p0)> SET_PARTICLE_FX_BLOOD_SCALE;
			extern typed_lazy_func_t<void()> _0x98EDF76A7271E4F2;
			extern typed_lazy_func_t<Any()> _0x459FD2C8D0AB78BC;
			extern typed_lazy_func_t<bool(int p0)> _0x5E657EF1099EDD65;
			extern typed_lazy_func_t<void(int TV_Channel, const char* VideoSequence, bool Restart)> _LOAD_TV_CHANNEL_SEQUENCE;
			extern typed_lazy_func_t<bool(Hash tvChannel)> _LOAD_TV_CHANNEL;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6)> _0x6D955F6A9E0295B1;
			extern typed_lazy_func_t<void(bool p0)> _0xCA4AE345A153D573;
			extern typed_lazy_func_t<void(Any* p0, Any* p1)> _0x1A8E2C8B9CF4549C;
			extern typed_lazy_func_t<Any()> _0xBB0527EC6341496D;
			extern typed_lazy_func_t<bool()> _0xD3A10FC7FD8D98CD;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3)> _0xBE197EAA669238F4;
			extern typed_lazy_func_t<void(bool enabled)> _SET_FROZEN_RENDERING_DISABLED;
			extern typed_lazy_func_t<void(int decalType, const char* textureDict, const char* textureName)> _ADD_DECAL_TO_MARKER;
			extern typed_lazy_func_t<void()> _0x92CCC17A7A2285DA;
			extern typed_lazy_func_t<void(Any p0)> _0xBEB3D46BB7F043C0;
			extern typed_lazy_func_t<bool()> _IS_NIGHTVISION_ACTIVE;
			extern typed_lazy_func_t<void()> _0x0218BA067D249DEA;
			extern typed_lazy_func_t<void(Any p0, bool p1, float p2, float p3, float p4, float p5, bool p6, float p7)> _0xD2936CAB8B58FCBD;
			extern typed_lazy_func_t<void(int ptfxHandle, bool p1)> STOP_PARTICLE_FX_LOOPED;
			extern typed_lazy_func_t<void(float p0)> _0x54E22EA2C1956A8D;
			extern typed_lazy_func_t<void(bool toggle)> DISABLE_VEHICLE_DISTANTLIGHTS;
			extern typed_lazy_func_t<Any(Any p0)> _0xEC72C258667BE5EA;
			extern typed_lazy_func_t<void(int checkpoint, float p0)> _SET_CHECKPOINT_SCALE;
			extern typed_lazy_func_t<void(int* x, int* y)> _GET_ACTIVE_SCREEN_RESOLUTION;
			extern typed_lazy_func_t<void()> _0x1612C45F9E3E0D44;
			extern typed_lazy_func_t<Any(float p0)> _0x02AC28F3A01FA04A;
			extern typed_lazy_func_t<void(bool p0)> _0xA51C4B86B71652AE;
			extern typed_lazy_func_t<bool(int scaleformHandle)> _0xD1C7CB175E012964;
			extern typed_lazy_func_t<void(float xPos, float yPos, float xScale, float yScale, float rotation, int red, int green, int blue, int alpha)> DRAW_TV_CHANNEL;
			extern typed_lazy_func_t<bool()> _0xA67C35C56EB1BD9D;
			extern typed_lazy_func_t<void(bool p0)> _0x06F761EA47C1D3ED;
			extern typed_lazy_func_t<Any(float x, float y, float z, float groundLvl, float width, float transparency)> ADD_PETROL_DECAL;
			extern typed_lazy_func_t<void(float p0)> _0x949F397A288B28B3;
			extern typed_lazy_func_t<bool(Object decal)> IS_DECAL_ALIVE;
			extern typed_lazy_func_t<void(int scaleform, bool toggle)> SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME;
			extern typed_lazy_func_t<bool(const char* p0)> _0xF1CEA8A4198D8E9A;
			extern typed_lazy_func_t<void(const char* graphicsName)> _0xD2209BE128B5418C;
			extern typed_lazy_func_t<void(Entity entity)> _ENTITY_DESCRIPTION_TEXT;
			extern typed_lazy_func_t<int(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis)> START_PARTICLE_FX_NON_LOOPED_AT_COORD;
			extern typed_lazy_func_t<void(float p0)> _0x5F0F3F56635809EF;
			extern typed_lazy_func_t<void(bool p0)> _0x0AE73D8DF3A762B2;
			extern typed_lazy_func_t<void()> _0x302C91AB2D477F7E;
			extern typed_lazy_func_t<void(int type, float xPos, float yPos, float zPos, float p4, int red, int green, int blue, int alpha)> _0xB1BB03742917A5D6;
			extern typed_lazy_func_t<void()> _0x851CD923176EBA7C;
			extern typed_lazy_func_t<void(bool toggle)> _0x23BA6B0C2AD7B0D3;
			extern typed_lazy_func_t<void(float p0, float p1, float p2)> _0x2485D34E50A22E84;
			extern typed_lazy_func_t<void(bool p0)> SET_PARTICLE_FX_CAM_INSIDE_VEHICLE;
			extern typed_lazy_func_t<void()> _0x4B5CFC83122DF602;
			extern typed_lazy_func_t<void(const char* value)> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_STRING;
			extern typed_lazy_func_t<void(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11)> _0x5CE62918F8D703C7;
			extern typed_lazy_func_t<void()> _0xEFABC7722293DA7C;
			extern typed_lazy_func_t<int(const char* effectName, Ped ped, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, bool xAxis, bool yAxis, bool zAxis)> START_PARTICLE_FX_LOOPED_ON_PED_BONE;
			extern typed_lazy_func_t<void(float p0, float p1, float* p2, float* p3)> _0x6DD8F5AA635EB4B2;
			extern typed_lazy_func_t<int(Vehicle vehicle, Any p1)> _0xFE26117A5841B2FF;
			extern typed_lazy_func_t<void(Any p0, const char* p1, Any p2)> _0x2201C576FACAEBE8;
			extern typed_lazy_func_t<void()> _0x6A12D88881435DCA;
			extern typed_lazy_func_t<void(float p0)> _0xC9B18B4619F48F7B;
			extern typed_lazy_func_t<void(int checkpoint, int red, int green, int blue, int alpha)> SET_CHECKPOINT_RGBA;
			extern typed_lazy_func_t<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, bool xAxis, bool yAxis, bool zAxis)> _START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE;
			extern typed_lazy_func_t<void(Any p0, Any p1)> MOVE_VEHICLE_DECALS;
			extern typed_lazy_func_t<void()> CLEAR_TIMECYCLE_MODIFIER;
			extern typed_lazy_func_t<int()> GET_TIMECYCLE_MODIFIER_INDEX;
			extern typed_lazy_func_t<int()> _END_SCALEFORM_MOVIE_METHOD_RETURN;
			extern typed_lazy_func_t<void(bool p0)> _0x25FC3E33A31AD0C9;
			extern typed_lazy_func_t<void(const char* p0)> _0xB11D94BC55F41932;
			extern typed_lazy_func_t<bool(int ptfxHandle)> DOES_PARTICLE_FX_LOOPED_EXIST;
			extern typed_lazy_func_t<void(Object obj)> REMOVE_DECALS_FROM_OBJECT;
			extern typed_lazy_func_t<void()> _0x0A123435A26C36CD;
			extern typed_lazy_func_t<void()> _STOP_ALL_SCREEN_EFFECTS;
			extern typed_lazy_func_t<void(bool p0)> _0x1BBC135A4D25EDDE;
			extern typed_lazy_func_t<void()> _0x4AF92ACD3141D96C;
			extern typed_lazy_func_t<void(float strength)> SET_TIMECYCLE_MODIFIER_STRENGTH;
			extern typed_lazy_func_t<void(Any p0)> _0x15E33297C3E8DC60;
			extern typed_lazy_func_t<void(bool p0)> _0x108BE26959A9D9BB;
		} /* GRAPHICS */
		namespace CUTSCENE {
			extern typed_lazy_func_t<void()> REMOVE_CUTSCENE;
			extern typed_lazy_func_t<bool()> HAS_CUTSCENE_LOADED;
			extern typed_lazy_func_t<void(int p0)> _0x8D9DF6ECA8768583;
			extern typed_lazy_func_t<void(int p0)> START_CUTSCENE;
			extern typed_lazy_func_t<void(float x, float y, float z, int p3)> START_CUTSCENE_AT_COORDS;
			extern typed_lazy_func_t<bool()> HAS_CUTSCENE_FINISHED;
			extern typed_lazy_func_t<Entity(const char* cutsceneEntName, Hash modelHash)> GET_ENTITY_INDEX_OF_REGISTERED_ENTITY;
			extern typed_lazy_func_t<void(bool p0)> _0x41FAA8FB2ECE8720;
			extern typed_lazy_func_t<Hash*()> _0x708BDD8CD795B043;
			extern typed_lazy_func_t<Any(Any* p0)> _0x0ABC54DE641DC0FC;
			extern typed_lazy_func_t<bool(const char* cutsceneName)> _0x4CEBC1ED31E8925E;
			extern typed_lazy_func_t<void(bool p0)> _0xE36A98D8AB3D3C66;
			extern typed_lazy_func_t<void(const char* cutsceneEntName, int p1, int p2, int p3, Hash modelHash)> SET_CUTSCENE_PED_COMPONENT_VARIATION;
			extern typed_lazy_func_t<void(const char* cutsceneEntName, int p1, int p2, int p3, Hash modelHash)> SET_CUTSCENE_PED_PROP_VARIATION;
			extern typed_lazy_func_t<bool()> _0xB56BBBCC2955D9CB;
			extern typed_lazy_func_t<void(const char* p0, Any p1, Any p2)> _0x4C61C75BEE8184C2;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5)> SET_CUTSCENE_TRIGGER_AREA;
			extern typed_lazy_func_t<void(bool p0, bool p1, bool p2, bool p3)> _0x20746F7B1032A3C7;
			extern typed_lazy_func_t<bool(bool p0)> CAN_SET_EXIT_STATE_FOR_CAMERA;
			extern typed_lazy_func_t<void()> REGISTER_SYNCHRONISED_SCRIPT_SPEECH;
			extern typed_lazy_func_t<void(const char* cutsceneName, int p1, int p2)> _REQUEST_CUTSCENE_EX;
			extern typed_lazy_func_t<void(Any* p0)> _0x06A3524161C502BA;
			extern typed_lazy_func_t<bool(Any* p0)> _0xA1C996C2A744262E;
			extern typed_lazy_func_t<void()> STOP_CUTSCENE_IMMEDIATELY;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6)> _0x011883F41211432A;
			extern typed_lazy_func_t<int()> GET_CUTSCENE_TIME;
			extern typed_lazy_func_t<bool()> IS_CUTSCENE_PLAYING;
			extern typed_lazy_func_t<void(Hash modelHash)> _0x7F96F23FA9B73327;
			extern typed_lazy_func_t<void(bool p0)> _0x06EE9048FD080382;
			extern typed_lazy_func_t<int()> _0xA0FE76168A189DDB;
			extern typed_lazy_func_t<int()> GET_CUTSCENE_SECTION_PLAYING;
			extern typed_lazy_func_t<int()> _0x583DF8E3D4AFBD98;
			extern typed_lazy_func_t<bool(const char* cutsceneEntName, Hash modelHash)> DOES_CUTSCENE_ENTITY_EXIST;
			extern typed_lazy_func_t<void(const char* cutsceneName, int p1)> REQUEST_CUTSCENE;
			extern typed_lazy_func_t<bool(int p0)> _0x71B74D2AE19338D0;
			extern typed_lazy_func_t<void(float x, float y, float z, float p3, int p4)> SET_CUTSCENE_ORIGIN;
			extern typed_lazy_func_t<int()> GET_CUTSCENE_TOTAL_DURATION;
			extern typed_lazy_func_t<bool()> WAS_CUTSCENE_SKIPPED;
			extern typed_lazy_func_t<bool()> IS_CUTSCENE_ACTIVE;
			extern typed_lazy_func_t<void(Ped cutscenePed, const char* cutsceneEntName, int p2, Hash modelHash, int p4)> REGISTER_ENTITY_FOR_CUTSCENE;
			extern typed_lazy_func_t<bool(const char* cutsceneEntName, Hash modelHash)> CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY;
			extern typed_lazy_func_t<bool(const char* cutsceneEntName, Hash modelHash)> CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY;
			extern typed_lazy_func_t<void(bool p0)> _0x2F137B508DE238F2;
			extern typed_lazy_func_t<bool()> _0x5EDEF0CF8C1DAB3C;
			extern typed_lazy_func_t<bool(const char* cutsceneName)> HAS_THIS_CUTSCENE_LOADED;
			extern typed_lazy_func_t<void(Any* p0)> _0xD00D76A7DFC9D852;
			extern typed_lazy_func_t<void(bool p0)> STOP_CUTSCENE;
			extern typed_lazy_func_t<Entity(const char* cutsceneEntName, Hash modelHash)> GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY;
			extern typed_lazy_func_t<void(bool toggle)> _0xC61B86C9F61EB404;
			extern typed_lazy_func_t<void(bool p0, bool p1, bool p2, bool p3)> SET_CUTSCENE_FADE_VALUES;
			extern typed_lazy_func_t<void(const char* cutsceneEntName, Ped ped, Hash modelHash)> _0x2A56C06EBEF2B0D9;
		} /* CUTSCENE */
		namespace PATHFIND {
			extern typed_lazy_func_t<bool(bool keepInMemory)> LOAD_ALL_PATH_NODES;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> SET_GPS_DISABLED_ZONE;
			extern typed_lazy_func_t<Any()> _0xBBB45C3CF5C8AA85;
			extern typed_lazy_func_t<bool(Any p0)> DOES_NAVMESH_BLOCKING_OBJECT_EXIST;
			extern typed_lazy_func_t<Any(float x, float y, float z, float p3, int p4, Vector3* p5, Vector3* p6, Any* p7, Any* p8, float* p9, bool p10)> GET_CLOSEST_ROAD;
			extern typed_lazy_func_t<void(bool ignore)> SET_IGNORE_NO_GPS_FLAG;
			extern typed_lazy_func_t<float(float x1, float y1, float z1, float x2, float y2, float z2)> CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS;
			extern typed_lazy_func_t<void(float x, float y, float radius)> ADD_NAVMESH_REQUIRED_REGION;
			extern typed_lazy_func_t<float(float left, float right)> _0x336511A34F2E5185;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, float angle, bool unknown1, bool unknown2, bool unknown3)> SET_ROADS_IN_ANGLED_AREA;
			extern typed_lazy_func_t<bool(float x, float y, float z, int nthClosest, Vector3* outPosition, float* heading, Any* unknown1, int unknown2, float unknown3, float unknown4)> GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3)> _0x07FB139B592FA687;
			extern typed_lazy_func_t<Any()> _0x869DAACBBE9FA006;
			extern typed_lazy_func_t<void()> REMOVE_NAVMESH_REQUIRED_REGIONS;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5)> _0x01708E8DD3FF8C65;
			extern typed_lazy_func_t<bool(float x, float y, float z, Vector3* outPosition, int nodeType, float p5, float p6)> GET_CLOSEST_VEHICLE_NODE;
			extern typed_lazy_func_t<bool(float x, float y, float z, Vector3* outPosition, float* outHeading, int nodeType, float p6, int p7)> GET_CLOSEST_VEHICLE_NODE_WITH_HEADING;
			extern typed_lazy_func_t<bool(int nodeID)> _GET_SUPPORTS_GPS_ROUTE_FLAG;
			extern typed_lazy_func_t<void(float p0)> _0x0B919E1FB47CC4E0;
			extern typed_lazy_func_t<float(float p0, float p1, float p2, float p3)> _0x8ABE8608576D9CE3;
			extern typed_lazy_func_t<float(float p0, float p1, float p2, float p3)> _0x3599D741C9AC6310;
			extern typed_lazy_func_t<void(int nodeId, Vector3* outPosition)> GET_VEHICLE_NODE_POSITION;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, float p6)> SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius, bool p4, bool p5, bool p6, Vector3* outPosition, int* nodeId)> GET_RANDOM_VEHICLE_NODE;
			extern typed_lazy_func_t<void(float x, float y, float z, Hash* streetName, Hash* crossingRoad)> GET_STREET_NAME_AT_COORD;
			extern typed_lazy_func_t<void(Any p0)> REMOVE_NAVMESH_BLOCKING_OBJECT;
			extern typed_lazy_func_t<float(float p0, float p1)> _0x29C24BFBED8AB8FB;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, bool unknown1, bool unknown2)> SET_ROADS_IN_AREA;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6)> DISABLE_NAVMESH_IN_AREA;
			extern typed_lazy_func_t<bool(float x1, float y1, float z1, float x2, float y2, float z2)> IS_NAVMESH_LOADED_IN_AREA;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5, float p6, bool p7, Any p8)> ADD_NAVMESH_BLOCKING_OBJECT;
			extern typed_lazy_func_t<Any(float x, float y, float z, int nthClosest, Vector3* outPosition, float outHeading, Any p6, float p7, float p8)> GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING;
			extern typed_lazy_func_t<bool(int vehicleNodeId)> IS_VEHICLE_NODE_ID_VALID;
			extern typed_lazy_func_t<bool()> ARE_ALL_NAVMESH_REGIONS_LOADED;
			extern typed_lazy_func_t<bool(float x, float y, float z, int nthClosest, Vector3* outPosition, Any unknown1, Any unknown2, Any unknown3)> GET_NTH_CLOSEST_VEHICLE_NODE;
			extern typed_lazy_func_t<bool(int nodeID)> _GET_IS_SLOW_ROAD_FLAG;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3, float p4, float p5)> SET_ROADS_BACK_TO_ORIGINAL;
			extern typed_lazy_func_t<int(float x, float y, float z, bool p3, float* direction, float* vehicle, float* distToNxJunction)> GENERATE_DIRECTIONS_TO_COORD;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6)> _0xD0BC1C6FB18EE154;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, bool unknown)> SET_PED_PATHS_IN_AREA;
			extern typed_lazy_func_t<bool(float x, float y, float z, int* density, int* flags)> GET_VEHICLE_NODE_PROPERTIES;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3)> _0xF7B79A50B905A30D;
			extern typed_lazy_func_t<Any(bool p0)> _0x1FC289A0C3FF470F;
			extern typed_lazy_func_t<bool(float x, float y, float z, Vehicle vehicle)> IS_POINT_ON_ROAD;
			extern typed_lazy_func_t<Any()> _0xD3A6A0EF48823A8C;
			extern typed_lazy_func_t<bool(float x, float y, float z, bool onGround, Vector3* outPosition, int flags)> GET_SAFE_COORD_FOR_PED;
			extern typed_lazy_func_t<void(bool p0)> _0x228E5C6AD4D74BFD;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3, Any p4)> _0x16F46FB18C8009E4;
			extern typed_lazy_func_t<int(float x, float y, float z, int nth, int nodetype, float p5, float p6)> GET_NTH_CLOSEST_VEHICLE_NODE_ID;
			extern typed_lazy_func_t<bool(float x, float y, float z, float desiredX, float desiredY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodetype, Any p10, Any p11)> GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8)> UPDATE_NAVMESH_BLOCKING_OBJECT;
			extern typed_lazy_func_t<bool(float x, float y, float z, Vector3* outPosition, float unknown1, int unknown2)> GET_CLOSEST_MAJOR_VEHICLE_NODE;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6)> _0xAA76052DDA9BFC3E;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> SET_PED_PATHS_BACK_TO_ORIGINAL;
			extern typed_lazy_func_t<void(Any p0)> _0x2801D0012266DF07;
		} /* PATHFIND */
		namespace FIRE {
			extern typed_lazy_func_t<void(int fireHandle)> REMOVE_SCRIPT_FIRE;
			extern typed_lazy_func_t<void(Entity entity)> STOP_ENTITY_FIRE;
			extern typed_lazy_func_t<void(float x, float y, float z, int explosionType, float damageScale, bool isAudible, bool isInvisible, float cameraShake)> ADD_EXPLOSION;
			extern typed_lazy_func_t<void(Ped ped, float x, float y, float z, int explosionType, float damageScale, bool isAudible, bool isInvisible, float cameraShake)> ADD_OWNED_EXPLOSION;
			extern typed_lazy_func_t<int(float x, float y, float z, float radius)> GET_NUMBER_OF_FIRES_IN_RANGE;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius)> STOP_FIRE_IN_RANGE;
			extern typed_lazy_func_t<void(float x, float y, float z, int explosionType, Hash explosionFx, float damageScale, bool isAudible, bool isInvisible, float cameraShake)> ADD_EXPLOSION_WITH_USER_VFX;
			extern typed_lazy_func_t<Any(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6)> _0x6070104B699B2EF4;
			extern typed_lazy_func_t<Entity(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float radius)> _GET_PED_INSIDE_EXPLOSION_AREA;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_ON_FIRE;
			extern typed_lazy_func_t<bool(Vector3* outPosition, float x, float y, float z)> GET_CLOSEST_FIRE_POS;
			extern typed_lazy_func_t<int(float X, float Y, float Z, int maxChildren, bool isGasFire)> START_SCRIPT_FIRE;
			extern typed_lazy_func_t<Any(Entity entity)> START_ENTITY_FIRE;
			extern typed_lazy_func_t<bool(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2)> IS_EXPLOSION_IN_AREA;
			extern typed_lazy_func_t<bool(int explosionType, float x, float y, float z, float radius)> IS_EXPLOSION_IN_SPHERE;
			extern typed_lazy_func_t<bool(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float angle)> IS_EXPLOSION_IN_ANGLED_AREA;
		} /* FIRE */
		namespace DECISIONEVENT {
			extern typed_lazy_func_t<void(Hash name, int type)> BLOCK_DECISION_MAKER_EVENT;
			extern typed_lazy_func_t<ScrHandle(int type, Entity entity, float duration)> ADD_SHOCKING_EVENT_FOR_ENTITY;
			extern typed_lazy_func_t<bool(int type, float x, float y, float z, float radius)> IS_SHOCKING_EVENT_IN_SPHERE;
			extern typed_lazy_func_t<void()> SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME;
			extern typed_lazy_func_t<void(Ped ped, Hash name)> SET_DECISION_MAKER;
			extern typed_lazy_func_t<void(Hash name, int type)> CLEAR_DECISION_MAKER_EVENT_RESPONSE;
			extern typed_lazy_func_t<bool(ScrHandle event)> REMOVE_SHOCKING_EVENT;
			extern typed_lazy_func_t<void(bool p0)> REMOVE_ALL_SHOCKING_EVENTS;
			extern typed_lazy_func_t<void()> REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS;
			extern typed_lazy_func_t<void(int type)> SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME;
			extern typed_lazy_func_t<void()> SUPPRESS_AGITATION_EVENTS_NEXT_FRAME;
			extern typed_lazy_func_t<void(Hash name, int type)> UNBLOCK_DECISION_MAKER_EVENT;
			extern typed_lazy_func_t<ScrHandle(int type, float x, float y, float z, float duration)> ADD_SHOCKING_EVENT_AT_POSITION;
		} /* DECISIONEVENT */
		namespace ENTITY {
			extern typed_lazy_func_t<void(Entity entity, bool toggle, bool keepPhysics)> SET_ENTITY_COLLISION;
			extern typed_lazy_func_t<void(Entity entity, float p1)> _0x5C3B791D580E0BC2;
			extern typed_lazy_func_t<Vector3(Entity entity)> GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY;
			extern typed_lazy_func_t<bool(Entity entity1, Entity entity2, bool p2)> HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY;
			extern typed_lazy_func_t<Entity(Entity entity)> GET_ENTITY_ATTACHED_TO;
			extern typed_lazy_func_t<bool(Entity entity, int syncedScene, const char* animation, const char* propName, float p4, float p5, Any p6, float p7)> PLAY_SYNCHRONIZED_ENTITY_ANIM;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_CAN_BE_DAMAGED;
			extern typed_lazy_func_t<int(Entity entity)> GET_ENTITY_LOD_DIST;
			extern typed_lazy_func_t<void(Entity entity1, Entity entity2, bool unknown)> SET_ENTITY_NO_COLLISION_ENTITY;
			extern typed_lazy_func_t<void(Entity entity, bool p1)> _0xDC6F8601FAF2E893;
			extern typed_lazy_func_t<Vector3(Entity entity, float offsetX, float offsetY, float offsetZ)> GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_RECORDS_COLLISIONS;
			extern typed_lazy_func_t<Any(Entity entity)> RESET_ENTITY_ALPHA;
			extern typed_lazy_func_t<void(Entity entity)> _0x78E8E3A640178255;
			extern typed_lazy_func_t<void(Entity entity, bool p1)> _0xA80AE305E0A3044F;
			extern typed_lazy_func_t<void(Entity entity, bool p1)> _0x1A092BB0C3808B96;
			extern typed_lazy_func_t<void(Entity entity, float* x, float* y, float* z, float* w)> GET_ENTITY_QUATERNION;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, Hash model, bool p5)> CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_FORWARD_Y;
			extern typed_lazy_func_t<Vector3(Entity entity)> GET_ENTITY_ROTATION_VELOCITY;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_SPEED;
			extern typed_lazy_func_t<void(Entity* entity)> DELETE_ENTITY;
			extern typed_lazy_func_t<bool(Entity entity, float p1, bool p2)> STOP_SYNCHRONIZED_ENTITY_ANIM;
			extern typed_lazy_func_t<void(Entity entity, float xPos, float yPos, float zPos, bool xAxis, bool yAxis, bool zAxis, bool clearArea)> _SET_ENTITY_COORDS_2;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_RENDER_SCORCHED;
			extern typed_lazy_func_t<Vector3(Entity entity)> GET_ENTITY_FORWARD_VECTOR;
			extern typed_lazy_func_t<bool(int handle)> IS_AN_ENTITY;
			extern typed_lazy_func_t<void(Vehicle* vehicle)> SET_VEHICLE_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<bool(Entity entity)> _GET_ENTITY_COLLISON_DISABLED;
			extern typed_lazy_func_t<void(Entity entity, int health)> SET_ENTITY_HEALTH;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4)> REMOVE_FORCED_OBJECT;
			extern typed_lazy_func_t<Object(Entity entity)> GET_OBJECT_INDEX_FROM_ENTITY_INDEX;
			extern typed_lazy_func_t<Player(Entity entity, int team)> GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM;
			extern typed_lazy_func_t<int(Entity entity, const char* boneName)> GET_ENTITY_BONE_INDEX_BY_NAME;
			extern typed_lazy_func_t<void(float x, float y, float z, Any p3, Hash modelHash, bool p5)> CREATE_FORCED_OBJECT;
			extern typed_lazy_func_t<bool(Object entity)> DOES_ENTITY_EXIST;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_ROLL;
			extern typed_lazy_func_t<bool(Entity entity, const char* animDict, const char* animName, int taskFlag)> IS_ENTITY_PLAYING_ANIM;
			extern typed_lazy_func_t<bool(const char* animDictionary, const char* animName, const char* p2, Any* p3, Any* p4)> FIND_ANIM_EVENT_PHASE;
			extern typed_lazy_func_t<void(Entity entity, float x, float y, float z, float w)> SET_ENTITY_QUATERNION;
			extern typed_lazy_func_t<bool(Entity entity)> HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_A_MISSION_ENTITY;
			extern typed_lazy_func_t<Any(Entity entity)> CLEAR_ENTITY_LAST_DAMAGE_ENTITY;
			extern typed_lazy_func_t<void(Entity entity, int alphaLevel, Any p0)> SET_ENTITY_ALPHA;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, Hash originalModel, Hash newModel, bool p6)> CREATE_MODEL_SWAP;
			extern typed_lazy_func_t<const char*(Entity entity, ScrHandle* script)> GET_ENTITY_SCRIPT;
			extern typed_lazy_func_t<Vector3(Entity entity, int boneIndex)> GET_WORLD_POSITION_OF_ENTITY_BONE;
			extern typed_lazy_func_t<bool(Entity entity, float originX, float originY, float originZ, float edgeX, float edgeY, float edgeZ, float angle, bool p8, bool p9, Any p10)> IS_ENTITY_IN_ANGLED_AREA;
			extern typed_lazy_func_t<void(Entity entity, bool p1)> _0x694E00132F2823ED;
			extern typed_lazy_func_t<void(Entity entity)> PROCESS_ENTITY_ATTACHMENTS;
			extern typed_lazy_func_t<Any(Entity entity, const char* animation, const char* animGroup, float p3)> STOP_ENTITY_ANIM;
			extern typed_lazy_func_t<bool(Entity entity)> DOES_ENTITY_HAVE_DRAWABLE;
			extern typed_lazy_func_t<bool(Entity entity1, Entity entity2, int traceType)> HAS_ENTITY_CLEAR_LOS_TO_ENTITY;
			extern typed_lazy_func_t<Hash(Entity entity)> GET_LAST_MATERIAL_HIT_BY_ENTITY;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_HEIGHT_ABOVE_GROUND;
			extern typed_lazy_func_t<Vehicle(Entity entity)> GET_VEHICLE_INDEX_FROM_ENTITY_INDEX;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_A_VEHICLE;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_IN_AIR;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_STATIC;
			extern typed_lazy_func_t<Player(Entity entity)> GET_NEAREST_PLAYER_TO_ENTITY;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_ON_SCREEN;
			extern typed_lazy_func_t<void(Entity entity, float xPos, float yPos, float zPos, bool xAxis, bool yAxis, bool zAxis, bool clearArea)> SET_ENTITY_COORDS;
			extern typed_lazy_func_t<void(Entity entity, float xPos, float yPos, float zPos, bool xAxis, bool yAxis, bool zAxis)> SET_ENTITY_COORDS_NO_OFFSET;
			extern typed_lazy_func_t<bool(Entity entity)> HAS_ENTITY_COLLIDED_WITH_ANYTHING;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_AN_OBJECT;
			extern typed_lazy_func_t<bool(Entity entity, float xPos, float yPos, float zPos, float xSize, float ySize, float zSize, bool p7, bool p8, int p9)> IS_ENTITY_AT_COORD;
			extern typed_lazy_func_t<bool(Entity entity, float angle)> IS_ENTITY_UPRIGHT;
			extern typed_lazy_func_t<bool(Entity entity, const char* animName, const char* animDict, float p3, bool loop, bool stayInAnim, bool p6, float delta, Any bitset)> PLAY_ENTITY_ANIM;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_ONLY_DAMAGED_BY_PLAYER;
			extern typed_lazy_func_t<void(Entity entity, bool p1, Any p2)> SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP;
			extern typed_lazy_func_t<void(Entity entity, bool bulletProof, bool fireProof, bool explosionProof, bool collisionProof, bool meleeProof, bool p6, bool p7, bool drownProof)> SET_ENTITY_PROOFS;
			extern typed_lazy_func_t<bool(Entity entity, bool p1)> DOES_ENTITY_BELONG_TO_THIS_SCRIPT;
			extern typed_lazy_func_t<bool(Entity entity)> HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED;
			extern typed_lazy_func_t<Hash(Entity entity)> GET_ENTITY_MODEL;
			extern typed_lazy_func_t<void(Entity entity, bool p1)> _0x2C2E3DC128F44309;
			extern typed_lazy_func_t<bool(Entity entity)> HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT;
			extern typed_lazy_func_t<float(const char* animDict, const char* animName)> _GET_ANIM_DURATION;
			extern typed_lazy_func_t<void(Ped* ped)> SET_PED_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<void(Entity entity, float pitch, float roll, float yaw, int rotationOrder, bool p5)> SET_ENTITY_ROTATION;
			extern typed_lazy_func_t<Vector3(Entity entity, bool alive)> GET_ENTITY_COORDS;
			extern typed_lazy_func_t<Vector3(Entity entity)> GET_ENTITY_VELOCITY;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_ATTACHED_TO_ANY_PED;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_HEADING;
			extern typed_lazy_func_t<bool(Entity entity1, Entity entity2, float xSize, float ySize, float zSize, bool p5, bool p6, int p7)> IS_ENTITY_AT_ENTITY;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_DEAD;
			extern typed_lazy_func_t<void(Entity entity, int forceFlags, float x, float y, float z, float offX, float offY, float offZ, int boneIndex, bool isDirectionRel, bool ignoreUpVec, bool isForceRel, bool p12, bool p13)> APPLY_FORCE_TO_ENTITY;
			extern typed_lazy_func_t<bool(Entity entity1, Entity entity2)> HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT;
			extern typed_lazy_func_t<int(Entity entity)> GET_ENTITY_MAX_HEALTH;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_SUBMERGED_LEVEL;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> FREEZE_ENTITY_POSITION;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, Any p4, float p5)> STOP_SYNCHRONIZED_MAP_ENTITY_ANIM;
			extern typed_lazy_func_t<void(Entity* entity)> SET_ENTITY_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<void(Entity entity, bool p1, float p2)> SET_ENTITY_IS_TARGET_PRIORITY;
			extern typed_lazy_func_t<void(Entity entity, int value)> SET_ENTITY_LOD_DIST;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5)> REMOVE_MODEL_HIDE;
			extern typed_lazy_func_t<void(Entity entity, Vector3* rightVector, Vector3* forwardVector, Vector3* upVector, Vector3* position)> GET_ENTITY_MATRIX;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_UPSIDEDOWN;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_VISIBLE;
			extern typed_lazy_func_t<bool(Hash entityModelHash, float x, float y, float z, bool p4)> WOULD_ENTITY_BE_OCCLUDED;
			extern typed_lazy_func_t<void(Entity entity, float heading)> SET_ENTITY_HEADING;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_INVINCIBLE;
			extern typed_lazy_func_t<float(Entity entity, const char* animDict, const char* animName)> GET_ENTITY_ANIM_TOTAL_TIME;
			extern typed_lazy_func_t<float(Entity entity, float X, float Y, float Z, bool atTop, bool inWorldCoords)> GET_ENTITY_HEIGHT;
			extern typed_lazy_func_t<Vector3(Entity entity, float posX, float posY, float posZ)> GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS;
			extern typed_lazy_func_t<bool(Entity from, Entity to)> IS_ENTITY_ATTACHED_TO_ENTITY;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS;
			extern typed_lazy_func_t<bool(Entity entity)> HAS_COLLISION_LOADED_AROUND_ENTITY;
			extern typed_lazy_func_t<void(Entity entity, float x, float y, float z)> SET_ENTITY_VELOCITY;
			extern typed_lazy_func_t<bool(Entity entity, const char* animDict, const char* animName, int p3)> HAS_ENTITY_ANIM_FINISHED;
			extern typed_lazy_func_t<bool(Entity entity, const char* zone)> IS_ENTITY_IN_ZONE;
			extern typed_lazy_func_t<bool(Entity entity, Hash modelHash)> IS_ENTITY_TOUCHING_MODEL;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> _SET_ENTITY_SOMETHING;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_DYNAMIC;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_A_PED;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_ATTACHED;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_LIGHTS;
			extern typed_lazy_func_t<void(Entity entity, bool toggle, bool unk)> SET_ENTITY_VISIBLE;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_MOTION_BLUR;
			extern typed_lazy_func_t<Ped(Entity entity)> GET_PED_INDEX_FROM_ENTITY_INDEX;
			extern typed_lazy_func_t<void(Entity entity1, Entity entity2, int boneIndex, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, bool p9, bool useSoftPinning, bool collision, bool isPed, int vertexIndex, bool fixedRot)> ATTACH_ENTITY_TO_ENTITY;
			extern typed_lazy_func_t<void(Entity entity)> FORCE_ENTITY_AI_AND_ANIMATION_UPDATE;
			extern typed_lazy_func_t<float(Entity entity, const char* animDict, const char* animName)> GET_ENTITY_ANIM_CURRENT_TIME;
			extern typed_lazy_func_t<int(Entity entity)> GET_ENTITY_TYPE;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_IN_WATER;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_OCCLUDED;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_HAS_GRAVITY;
			extern typed_lazy_func_t<void(Entity entity, bool p1)> _0xE12ABE5E3A389A6C;
			extern typed_lazy_func_t<void(Entity entity, int value)> SET_ENTITY_MAX_HEALTH;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_PITCH;
			extern typed_lazy_func_t<void(Entity entity, int forceType, float x, float y, float z, bool p5, bool isDirectionRel, bool isForceRel, bool p8)> APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS;
			extern typed_lazy_func_t<void(Object* object)> SET_OBJECT_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<float(Entity entity)> _GET_ENTITY_PHYSICS_HEADING;
			extern typed_lazy_func_t<Vector3(Entity entity, bool relative)> GET_ENTITY_SPEED_VECTOR;
			extern typed_lazy_func_t<bool(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, bool p7, bool p8, Any p9)> IS_ENTITY_IN_AREA;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_VISIBLE_TO_SCRIPT;
			extern typed_lazy_func_t<void(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, float xPos1, float yPos1, float zPos1, float xPos2, float yPos2, float zPos2, float xRot, float yRot, float zRot, float breakForce, bool fixedRot, bool p15, bool collision, bool p17, int p18)> ATTACH_ENTITY_TO_ENTITY_PHYSICALLY;
			extern typed_lazy_func_t<void(Entity entity, bool p1, bool p2)> _SET_ENTITY_COLLISION_2;
			extern typed_lazy_func_t<Vector3(Entity entity, int rotationOrder)> GET_ENTITY_ROTATION;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_UPRIGHT_VALUE;
			extern typed_lazy_func_t<void(Entity entity, bool p1, bool collision)> DETACH_ENTITY;
			extern typed_lazy_func_t<bool(Entity entity, Hash actionHash)> HAS_ANIM_EVENT_FIRED;
			extern typed_lazy_func_t<void(Entity entity, bool bCanBeDamaged, int relGroup)> SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP;
			extern typed_lazy_func_t<void(Entity entity, float speed)> SET_ENTITY_MAX_SPEED;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_ALWAYS_PRERENDER;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_ATTACHED_TO_ANY_OBJECT;
			extern typed_lazy_func_t<int(Entity entity)> GET_ENTITY_ALPHA;
			extern typed_lazy_func_t<void(Entity entity, int state)> SET_ENTITY_TRAFFICLIGHT_OVERRIDE;
			extern typed_lazy_func_t<bool(Entity entity)> DOES_ENTITY_HAVE_PHYSICS;
			extern typed_lazy_func_t<float(Entity entity)> GET_ENTITY_FORWARD_X;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_ATTACHED_TO_ANY_VEHICLE;
			extern typed_lazy_func_t<void(Entity entity, bool p1, bool p2)> SET_ENTITY_AS_MISSION_ENTITY;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, Hash model, bool p5)> CREATE_MODEL_HIDE;
			extern typed_lazy_func_t<int(Entity entity)> _GET_ENTITY_POPULATION_TYPE;
			extern typed_lazy_func_t<bool(float p0, float p1, float p2, float p3, Any p4, Any p5, Any* p6, Any* p7, float p8, float p9, Any p10, float p11)> PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM;
			extern typed_lazy_func_t<void(Entity entity, bool toggle)> SET_ENTITY_LOAD_COLLISION_FLAG;
			extern typed_lazy_func_t<int(Entity entity)> GET_ENTITY_HEALTH;
			extern typed_lazy_func_t<bool(Entity entity, Entity targetEntity)> IS_ENTITY_TOUCHING_ENTITY;
			extern typed_lazy_func_t<bool(Entity entity)> IS_ENTITY_WAITING_FOR_WORLD_COLLISION;
			extern typed_lazy_func_t<void(Entity entity, const char* animDictionary, const char* animName, float time)> SET_ENTITY_ANIM_CURRENT_TIME;
			extern typed_lazy_func_t<void(Entity entity, const char* animDictionary, const char* animName, float speedMultiplier)> SET_ENTITY_ANIM_SPEED;
			extern typed_lazy_func_t<void(float x, float y, float z, float radius, Hash originalModel, Hash newModel, bool p6)> REMOVE_MODEL_SWAP;
		} /* ENTITY */
		namespace VEHICLE {
			extern typed_lazy_func_t<void(Vehicle vehicle, int flag)> SET_PLAYBACK_TO_USE_AI;
			extern typed_lazy_func_t<void(Vehicle towTruck, float height)> _SET_TOW_TRUCK_CRANE_HEIGHT;
			extern typed_lazy_func_t<void(Vehicle vehicle, int modType)> REMOVE_VEHICLE_MOD;
			extern typed_lazy_func_t<Vector3(Any p0, float p1)> _0xF0F2103EFAF8CBA7;
			extern typed_lazy_func_t<void()> STOP_ALL_GARAGE_ACTIVITY;
			extern typed_lazy_func_t<void(Vehicle vehicle, Entity entity)> _0x6A98C2ECF57FA5D4;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_DISABLE_VEHICLE_PETROL_TANK_FIRES;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int windowIndex)> IS_VEHICLE_WINDOW_INTACT;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool state)> SET_VEHICLE_CAN_BE_TARGETTED;
			extern typed_lazy_func_t<bool(Vehicle vehicle, bool front)> IS_VEHICLE_BUMPER_BROKEN_OFF;
			extern typed_lazy_func_t<float(int vehicleClass)> GET_VEHICLE_CLASS_MAX_TRACTION;
			extern typed_lazy_func_t<void(Vehicle vehicle, int modType, bool toggle)> TOGGLE_VEHICLE_MOD;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x1F9FB66F3A3842D2;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _0x9737A37136F07E75;
			extern typed_lazy_func_t<void(Vehicle* train, bool p1)> SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_HELI;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x192547247864DFDD;
			extern typed_lazy_func_t<void(Vehicle vehicle)> REQUEST_VEHICLE_HIGH_DETAIL_MODEL;
			extern typed_lazy_func_t<Vehicle(Vehicle vehicle, Vehicle wheel_rf, bool completely)> IS_VEHICLE_TYRE_BURST;
			extern typed_lazy_func_t<void(Vehicle vehicle, float seconds)> _SET_VEHICLE_ROCKET_BOOST_REFILL_TIME;
			extern typed_lazy_func_t<void(Vehicle cargobob, float p1)> _0xA17BAD153B51547E;
			extern typed_lazy_func_t<Any(Vehicle p0, bool p1, bool p2, bool p3)> SET_ALL_VEHICLES_SPAWN;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x8AA9180DE2FEDD45;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Any p1)> WAS_COUNTER_ACTIVATED;
			extern typed_lazy_func_t<void(float p0, float p1, float p2, float p3)> _0x9A75585FB2E54FAD;
			extern typed_lazy_func_t<bool(Any p0, bool p1)> _0xF78F94D60248C737;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _0x5E569EC46EC21CAE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> SET_CONVERTIBLE_ROOF;
			extern typed_lazy_func_t<Any(int intersectionId, bool state)> SWITCH_TRAIN_TRACK;
			extern typed_lazy_func_t<void(Vehicle vehicle)> REMOVE_VEHICLE_HIGH_DETAIL_MODEL;
			extern typed_lazy_func_t<float(int vehicleClass)> GET_VEHICLE_CLASS_MAX_AGILITY;
			extern typed_lazy_func_t<void(Any p0, Player p1)> _0xCF1182F682F65307;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool active)> _SET_VEHICLE_PARACHUTE_ACTIVE;
			extern typed_lazy_func_t<bool(const char* garageName, Vehicle vehicle)> IS_VEHICLE_IN_GARAGE_AREA;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_NEEDS_TO_BE_HOTWIRED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_HANDBRAKE;
			extern typed_lazy_func_t<int(float x, float y, float z, float radius, float speed, bool p5)> _ADD_SPEED_ZONE_FOR_COORD;
			extern typed_lazy_func_t<int(Vehicle elegy)> GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX;
			extern typed_lazy_func_t<void(Vehicle vehicle, float health)> SET_VEHICLE_PETROL_TANK_HEALTH;
			extern typed_lazy_func_t<void(Vehicle cargobob, float p1)> _0x66979ACF5102FD2F;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xA7DCDF4DED40A8F4;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* pearlescentColor, int* wheelColor)> GET_VEHICLE_EXTRA_COLOURS;
			extern typed_lazy_func_t<Any(Vehicle train, float speed)> SET_TRAIN_CRUISE_SPEED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_IS_CONSIDERED_BY_PLAYER;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_HAS_STRONG_AXLES;
			extern typed_lazy_func_t<void(Vehicle plane, int height)> _SET_PLANE_MIN_HEIGHT_ABOVE_TERRAIN;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x428BACCDF5E26EAD;
			extern typed_lazy_func_t<void(bool p0)> _0x35E0654F4BAD7971;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* r, int* g, int* b)> GET_VEHICLE_CUSTOM_SECONDARY_COLOUR;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _SET_VEHICLE_ST;
			extern typed_lazy_func_t<void(Any p0)> _0xF87D9F2301F7D206;
			extern typed_lazy_func_t<void(Vehicle cargobob, int state)> CREATE_PICK_UP_ROPE_FOR_CARGOBOB;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_BOAT;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xDBC631F109350B8C;
			extern typed_lazy_func_t<void(Vehicle vehicle, int colorCombination)> SET_VEHICLE_COLOUR_COMBINATION;
			extern typed_lazy_func_t<bool(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8)> _0xA4822F1CF23F4810;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> SET_VEHICLE_RUDDER_BROKEN;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_FORCE_HD_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool isAudible, bool isInvisible)> EXPLODE_VEHICLE;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Player player)> GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> GET_IS_VEHICLE_ENGINE_RUNNING;
			extern typed_lazy_func_t<void(bool disabled, Hash weaponHash, Vehicle vehicle, Ped owner)> DISABLE_VEHICLE_WEAPON;
			extern typed_lazy_func_t<int(Hash modelHash)> GET_VEHICLE_MODEL_NUMBER_OF_SEATS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x2311DD7159F00582;
			extern typed_lazy_func_t<float(Hash modelHash)> _GET_VEHICLE_MODEL_MOVE_RESISTANCE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_SIREN;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM;
			extern typed_lazy_func_t<void(Vehicle x)> _0x7C0043FDFF6436BC;
			extern typed_lazy_func_t<Any(Any p0)> GET_CURRENT_PLAYBACK_FOR_VEHICLE;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int doorIndex)> IS_VEHICLE_DOOR_FULLY_OPEN;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xE05DD0E9707003A3;
			extern typed_lazy_func_t<void(int vehicleGenerator, bool enabled)> SET_SCRIPT_VEHICLE_GENERATOR;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_TAXI_LIGHT_ON;
			extern typed_lazy_func_t<void(Vehicle vehicle, float height)> _0x37EBBF3117BD6A25;
			extern typed_lazy_func_t<void()> _0xE01903C47C7AC89E;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_STOPPED;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorIndex, bool deleteDoor)> SET_VEHICLE_DOOR_BROKEN;
			extern typed_lazy_func_t<float(Vehicle vehicle)> _GET_VEHICLE_SUSPENSION_HEIGHT;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xC361AA040D6637A8;
			extern typed_lazy_func_t<void(Any p0)> PAUSE_PLAYBACK_RECORDED_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _SET_VEHICLE_SILENT;
			extern typed_lazy_func_t<bool(Vehicle vehicle, bool p1, bool p2, bool p3)> IS_HELI_PART_BROKEN;
			extern typed_lazy_func_t<void(Vehicle vehicle, int WheelType)> SET_VEHICLE_WHEEL_TYPE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool owned)> SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_BURNOUT;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_ACCELERATION;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xAB04325045427AAE;
			extern typed_lazy_func_t<void(Vehicle vehicle)> SET_VEHICLE_FIXED;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_WHEEL_TYPE;
			extern typed_lazy_func_t<void(float p0)> _0xBC3CCA5844452B06;
			extern typed_lazy_func_t<void(Vehicle vehicle, int r, int g, int b)> SET_VEHICLE_CUSTOM_SECONDARY_COLOUR;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any p2, bool p3)> SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xC50CE861B55EAB8B;
			extern typed_lazy_func_t<Any(Vehicle vehicle, bool enabled)> SET_VEHICLE_WHEELS_CAN_BREAK;
			extern typed_lazy_func_t<void(Any p0, float p1, Any p2, bool p3, bool p4, bool p5, Any p6)> ADD_VEHICLE_STUCK_CHECK_WITH_WARP;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x51BB2D88D31A914B;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int extraId)> IS_VEHICLE_EXTRA_TURNED_ON;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x4E74E62E0A97E901;
			extern typed_lazy_func_t<Vector3(Vehicle vehicle, float offsetX, float offsetY, float offsetZ)> GET_VEHICLE_DEFORMATION_AT_POS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool active)> _SET_VEHICLE_HUD_SPECIAL_ABILITY_BAR_ACTIVE;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> SET_VEHICLE_ON_GROUND_PROPERLY;
			extern typed_lazy_func_t<void(bool p0)> _0xE6C0C80B8C867537;
			extern typed_lazy_func_t<bool(float x, float y, float z, float radius)> IS_ANY_VEHICLE_NEAR_POINT;
			extern typed_lazy_func_t<bool(Ped ped, Vehicle vehicle, bool p2, bool p3, bool p4)> _0x639431E895B9AA57;
			extern typed_lazy_func_t<void(Any p0, int modType, Any p2)> PRELOAD_VEHICLE_MOD;
			extern typed_lazy_func_t<void(Vehicle vehicle)> RELEASE_PRELOAD_MODS;
			extern typed_lazy_func_t<bool(float x1, float x2, float y1, float y2, float z1, float z2)> IS_COP_VEHICLE_IN_AREA_3D;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _GET_BOAT_ANCHOR;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_GRAVITY;
			extern typed_lazy_func_t<void(Vehicle vehicle, int r, int g, int b)> _SET_VEHICLE_NEON_LIGHTS_COLOUR;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, bool p6, bool p7)> SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorLockStatus)> SET_VEHICLE_DOORS_LOCKED;
			extern typed_lazy_func_t<void(Vehicle vehicle, int colorPrimary, int colorSecondary)> SET_VEHICLE_COLOURS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x0A6A279F3AA4FD70;
			extern typed_lazy_func_t<void(bool active)> SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE;
			extern typed_lazy_func_t<void(Vehicle vehicle)> SET_HELI_BLADES_FULL_SPEED;
			extern typed_lazy_func_t<void(Any p0)> SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle)> SET_LAST_DRIVEN_VEHICLE;
			extern typed_lazy_func_t<void()> _0xF25E02CB9C5818F8;
			extern typed_lazy_func_t<Any(Vehicle vehicle)> CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _0x99AD4CCCB128CBC9;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Entity entity)> SET_PED_ENABLED_BIKE_RINGTONE;
			extern typed_lazy_func_t<void(Vehicle veh, bool toggle)> SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON;
			extern typed_lazy_func_t<void(Vehicle vehicle)> TRACK_VEHICLE_VISIBILITY;
			extern typed_lazy_func_t<void(Any p0, Any* p1)> REMOVE_VEHICLE_RECORDING;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xC1F981A6F74F0C23;
			extern typed_lazy_func_t<float(Vehicle vehicle)> _0x6636C535F6CC2725;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x0CDDA42F9E360CA6;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_STOLEN;
			extern typed_lazy_func_t<void(Vehicle cargobob, float strength)> _SET_CARGOBOB_PICKUP_MAGNET_STRENGTH;
			extern typed_lazy_func_t<void(float multiplier)> SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME;
			extern typed_lazy_func_t<void(Any p0, float p1, bool p2)> _0xF8EBCCC96ADB9FB7;
			extern typed_lazy_func_t<void(Vehicle vehicle)> OPEN_BOMB_BAY_DOORS;
			extern typed_lazy_func_t<float(Vehicle vehicle, int modType, int modIndex)> GET_VEHICLE_MOD_MODIFIER_VALUE;
			extern typed_lazy_func_t<int()> GET_NUM_VEHICLE_WINDOW_TINTS;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, int state)> _SET_CARGOBOB_HOOK_POSITION;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xE3EBAAE484798530;
			extern typed_lazy_func_t<void()> _REQUEST_VEHICLE_PHONE_EXPLOSION;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool value, bool instantly, bool otherwise)> SET_VEHICLE_ENGINE_ON;
			extern typed_lazy_func_t<void(float multiplier)> SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME;
			extern typed_lazy_func_t<const char*(Vehicle vehicle, int modType, int modValue)> GET_MOD_TEXT_LABEL;
			extern typed_lazy_func_t<void(Vehicle vehicle)> REMOVE_VEHICLE_STUCK_CHECK;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x21973BBF8D17EDFA;
			extern typed_lazy_func_t<float(Any p0)> GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool state)> SET_VEHICLE_IS_WANTED;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> DOES_VEHICLE_HAVE_WEAPONS;
			extern typed_lazy_func_t<void(float multiplier)> SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME;
			extern typed_lazy_func_t<void(Vehicle vehicle, int modKit)> SET_VEHICLE_MOD_KIT;
			extern typed_lazy_func_t<Any(Vehicle vehicle, int modType, int modIndex)> _GET_VEHICLE_MOD_DATA;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_WINDOW_TINT;
			extern typed_lazy_func_t<Any(Vehicle vehicle, bool p1)> _0x2B6747FAA9DB9D6B;
			extern typed_lazy_func_t<int(int p0, bool p1)> GET_NUM_MOD_COLORS;
			extern typed_lazy_func_t<void(Vehicle vehicle, float value)> _SET_VEHICLE_ENGINE_POWER_MULTIPLIER;
			extern typed_lazy_func_t<void(Vehicle vehicle, int index, bool toggle)> _SET_VEHICLE_NEON_LIGHT_ENABLED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x206BC5DC9D1AC70A;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> STEER_UNLOCK_BIAS;
			extern typed_lazy_func_t<void(Vehicle vehicle, int state)> CONTROL_LANDING_GEAR;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vehicle vehicle2)> _0xE44A982368A4AF23;
			extern typed_lazy_func_t<void(Vehicle cargobob, bool isActive)> _SET_CARGOBOB_PICKUP_MAGNET_ACTIVE;
			extern typed_lazy_func_t<void(bool toggle)> _DISPLAY_DISTANT_VEHICLES;
			extern typed_lazy_func_t<bool(Vehicle vehicle, bool flag)> _0xF7F203E31F96F6A1;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0xF488C566413B4232;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _0xB264C4D2F2B0A78B;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool active)> _SET_VEHICLE_ROCKET_BOOST_ACTIVE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* paintType, int* color)> GET_VEHICLE_MOD_COLOR_2;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK;
			extern typed_lazy_func_t<Vector3(int p0, float p1, const char* p2)> GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME;
			extern typed_lazy_func_t<void(Vehicle vehicle, const char* name)> SET_VEHICLE_NAME_DEBUG;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* paintType, int* color, int* pearlescentColor)> GET_VEHICLE_MOD_COLOR_1;
			extern typed_lazy_func_t<void(Vehicle cargobob, bool p1)> _0x571FEB383F629926;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> _0xE5810AC70602F2F5;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xB055A34527CB8FD7;
			extern typed_lazy_func_t<void(float value)> _SET_SOME_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME;
			extern typed_lazy_func_t<void(Vehicle vehicle, int index, bool onRim, float p3)> SET_VEHICLE_TYRE_BURST;
			extern typed_lazy_func_t<void(Vehicle vehicle, float multiplier)> SET_VEHICLE_LIGHT_MULTIPLIER;
			extern typed_lazy_func_t<void(bool toggle)> SET_RANDOM_TRAINS;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int modType)> IS_TOGGLE_MOD_ON;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x2C4A1590ABF43E8B;
			extern typed_lazy_func_t<Vehicle(Hash modelHash, float x, float y, float z, float heading, bool isNetwork, bool thisScriptCheck)> CREATE_VEHICLE;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_PLANE;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Entity* entity)> _GET_VEHICLE_OWNER;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_BODY_HEALTH;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> GET_VEHICLE_TYRES_CAN_BURST;
			extern typed_lazy_func_t<Any(float p0, float p1, float p2, float p3, float p4, float p5, float p6)> _0x54B0F614960F4A5F;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _VEHICLE_HAS_LANDING_GEAR;
			extern typed_lazy_func_t<void(Vehicle vehicle, float value)> SET_VEHICLE_BODY_HEALTH;
			extern typed_lazy_func_t<void(Vehicle vehicle)> CLOSE_BOMB_BAY_DOORS;
			extern typed_lazy_func_t<void(float x1, float y1, float z1, float x2, float y2, float z2, Any unk)> REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x9F3F689B814F2599;
			extern typed_lazy_func_t<void(Any p0, float p1, bool p2)> _0x56B94C6D7127DFBA;
			extern typed_lazy_func_t<float(Hash modelHash)> _GET_VEHICLE_MODEL_HAND_BRAKE;
			extern typed_lazy_func_t<Any(Any p0)> _0x42A4BEB35D372407;
			extern typed_lazy_func_t<bool(const char* decorator)> DOES_VEHICLE_EXIST_WITH_DECORATOR;
			extern typed_lazy_func_t<int(Any p0, float p1)> _0x92523B76657A517D;
			extern typed_lazy_func_t<Ped(Vehicle vehicle, int index)> GET_PED_IN_VEHICLE_SEAT;
			extern typed_lazy_func_t<bool(Vehicle vehicle, bool isOnFireCheck)> IS_VEHICLE_DRIVEABLE;
			extern typed_lazy_func_t<Any(int value)> SET_NUMBER_OF_PARKED_VEHICLES;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _HAS_VEHICLE_JUMPING_ABILITY;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x0F3B4D4E43177236;
			extern typed_lazy_func_t<void(Vehicle vehicle, int tint)> SET_VEHICLE_WINDOW_TINT;
			extern typed_lazy_func_t<Ped(Vehicle vehicle, int seatIndex)> GET_LAST_PED_IN_VEHICLE_SEAT;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorIndex, bool loose, bool openInstantly)> SET_VEHICLE_DOOR_OPEN;
			extern typed_lazy_func_t<Any(bool toggle)> SET_GARBAGE_TRUCKS;
			extern typed_lazy_func_t<void(Vehicle vehicle, int duration, Hash mode, bool forever)> START_VEHICLE_HORN;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x25367DE49D64CF16;
			extern typed_lazy_func_t<float(Hash modelHash)> GET_VEHICLE_MODEL_MAX_BRAKING;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_CAN_BREAK;
			extern typed_lazy_func_t<void(Vehicle* vehicle)> DELETE_VEHICLE;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> DOES_VEHICLE_HAVE_ROOF;
			extern typed_lazy_func_t<bool(int vehicleAsset)> HAS_VEHICLE_ASSET_LOADED;
			extern typed_lazy_func_t<void(Vehicle towTruck, Vehicle vehicle, bool rear, float hookOffsetX, float hookOffsetY, float hookOffsetZ)> ATTACH_VEHICLE_TO_TOW_TRUCK;
			extern typed_lazy_func_t<void(Any p0, float p1)> SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, float speed)> SET_HELI_BLADES_SPEED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool instantlyRaise)> RAISE_CONVERTIBLE_ROOF;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_CONVERTIBLE_ROOF_STATE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int tyreIndex)> SET_VEHICLE_TYRE_FIXED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xB28B1FE5BFADD7F5;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vehicle cargobob)> _0xE301BD63E9E13CF0;
			extern typed_lazy_func_t<void(Vehicle vehicle, int team, bool toggle)> SET_VEHICLE_DOORS_LOCKED_FOR_TEAM;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_TRAIN;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorIndex, int speed, float angle)> SET_VEHICLE_DOOR_CONTROL;
			extern typed_lazy_func_t<Vehicle()> GET_LAST_DRIVEN_VEHICLE;
			extern typed_lazy_func_t<Vector3(Vehicle cargobob)> _GET_CARGOBOB_HOOK_POSITION;
			extern typed_lazy_func_t<void(Vehicle vehicle, Entity p1, float p2)> _0x374706271354CB18;
			extern typed_lazy_func_t<void(Vehicle vehicle, int paintType, int color)> SET_VEHICLE_MOD_COLOR_2;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_BIG_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int nullAttributes)> RESET_VEHICLE_STUCK_TIMER;
			extern typed_lazy_func_t<void(Vehicle vehicle, int liveryIndex)> SET_VEHICLE_LIVERY;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> DETACH_VEHICLE_FROM_ANY_TOW_TRUCK;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_DOOR_LOCK_STATUS;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int modType)> GET_VEHICLE_MOD_VARIATION;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _SET_VEHICLE_CREATES_MONEY_PICKUPS_WHEN_EXPLODED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xC45C27EF50F36ADC;
			extern typed_lazy_func_t<void(Vehicle vehicle, int plateIndex)> SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX;
			extern typed_lazy_func_t<void(Vehicle vehicle, int extraId, bool disable)> SET_VEHICLE_EXTRA;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1, bool p2)> DISABLE_PLANE_AILERON;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_STRONG;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool state)> SET_VEHICLE_ALARM;
			extern typed_lazy_func_t<int(Vehicle vehicle, int modType)> GET_VEHICLE_MOD;
			extern typed_lazy_func_t<Any(Vehicle vehicle, bool isStolen)> SET_VEHICLE_IS_STOLEN;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> _0xE6F13851780394DA;
			extern typed_lazy_func_t<Ped(Vehicle vehicle, int doorIndex)> _GET_PED_USING_VEHICLE_DOOR;
			extern typed_lazy_func_t<Any(Vehicle vehicle, int p1)> _0xA01BC64DD4BFBBAC;
			extern typed_lazy_func_t<Any(Vehicle vehicle, bool p1, Any p2)> SET_VEHICLE_AUTOMATICALLY_ATTACHES;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x279D50DE5652D935;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xB088E9A47AE6EDD5;
			extern typed_lazy_func_t<Any(bool toggle)> SET_RANDOM_BOATS;
			extern typed_lazy_func_t<void(Vehicle vehicle, int r, int g, int b)> SET_VEHICLE_TYRE_SMOKE_COLOR;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vehicle cargobob, int p2, float x, float y, float z)> ATTACH_VEHICLE_TO_CARGOBOB;
			extern typed_lazy_func_t<const char*(Vehicle vehicle, int liveryIndex)> GET_LIVERY_NAME;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_LIVERY_COUNT;
			extern typed_lazy_func_t<bool(int speedzone)> _REMOVE_SPEED_ZONE;
			extern typed_lazy_func_t<void(Vehicle vehicle, float x, float y, float z, Any p4)> _0x5845066D8A1EA7F7;
			extern typed_lazy_func_t<bool()> _0x91D6DD290888CBAB;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_LANDING_GEAR_STATE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int p1, const char* playback, bool p3)> START_PLAYBACK_RECORDED_VEHICLE;
			extern typed_lazy_func_t<void()> DELETE_ALL_TRAINS;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_PETROL_TANK_HEALTH;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> DETACH_VEHICLE_FROM_ANY_CARGOBOB;
			extern typed_lazy_func_t<int(float x, float y, float z, float heading, float p4, float p5, Hash modelHash, int p7, int p8, int p9, int p10, bool p11, bool p12, bool p13, bool p14, bool p15, int p16)> CREATE_SCRIPT_VEHICLE_GENERATOR;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_BOAT_ANCHOR;
			extern typed_lazy_func_t<void(Vehicle vehicle, float friction)> SET_VEHICLE_FRICTION_OVERRIDE;
			extern typed_lazy_func_t<void(float multiplier)> _SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _IS_VEHICLE_ROCKET_BOOST_ACTIVE;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_STUCK_ON_ROOF;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_QUADBIKE;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> ARE_ALL_VEHICLE_WINDOWS_INTACT;
			extern typed_lazy_func_t<void(Vehicle vehicle, float x, float y)> _SET_BIKE_LEAN_ANGLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_INTERIORLIGHT;
			extern typed_lazy_func_t<void(Vehicle vehicle, float angle)> _SET_VERTICAL_FLIGHT_PHASE;
			extern typed_lazy_func_t<void(Vehicle vehicle, Ped ped)> SET_VEHICLE_EXCLUSIVE_DRIVER;
			extern typed_lazy_func_t<void(Vehicle vehicle, Player player, bool toggle)> SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_PROVIDES_COVER;
			extern typed_lazy_func_t<void(int vehicleAsset)> REMOVE_VEHICLE_ASSET;
			extern typed_lazy_func_t<float(Vehicle vehicle)> _GET_VEHICLE_BODY_HEALTH_2;
			extern typed_lazy_func_t<void(Vehicle vehicle, const char* plateText)> SET_VEHICLE_NUMBER_PLATE_TEXT;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_ENVEFF_SCALE;
			extern typed_lazy_func_t<void(Ped driver, Entity entity, float xTarget, float yTarget, float zTarget)> SET_VEHICLE_SHOOT_AT_TARGET;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* r, int* g, int* b)> GET_VEHICLE_CUSTOM_PRIMARY_COLOUR;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_BICYCLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xE851E480B814D4BA;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Entity entity)> _0x89D630CF5EA96D23;
			extern typed_lazy_func_t<void(const char* vehicle, bool p1)> _0xCAC66558B944DA67;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x06582AFF74894C75;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_CLASS;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vehicle trailer, float radius)> ATTACH_VEHICLE_TO_TRAILER;
			extern typed_lazy_func_t<void(bool toggle)> _SET_SOMETHING_MULTIPLIER_THIS_FRAME;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool closeInstantly)> SET_VEHICLE_DOORS_SHUT;
			extern typed_lazy_func_t<bool(Any p0, Any* p1)> HAS_VEHICLE_RECORDING_BEEN_LOADED;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x6EBFB22D646FFC18;
			extern typed_lazy_func_t<void(int vehicleGenerator)> DELETE_SCRIPT_VEHICLE_GENERATOR;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorIndex, bool closeInstantly)> SET_VEHICLE_DOOR_SHUT;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x9BECD4B9FEF3F8A6;
			extern typed_lazy_func_t<void(Vehicle vehicle)> SET_VEHICLE_DEFORMATION_FIXED;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> ARE_ANY_VEHICLE_SEATS_FREE;
			extern typed_lazy_func_t<bool(Any p0)> HAS_PRELOAD_MODS_FINISHED;
			extern typed_lazy_func_t<void(Vehicle cargobob, float p1)> _0xED8286F71A819BAA;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vehicle trailer, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11)> _0x16B5E274BDE402F8;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _DETACH_VEHICLE_WINDSCREEN;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Hash model)> IS_VEHICLE_MODEL;
			extern typed_lazy_func_t<float(int vehicleClass)> GET_VEHICLE_CLASS_MAX_BRAKING;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _ARE_VEHICLE_WINGS_INTACT;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP;
			extern typed_lazy_func_t<void(Any p0, Any p1, Any* p2, float p3, Any p4)> START_PLAYBACK_RECORDED_VEHICLE_USING_AI;
			extern typed_lazy_func_t<const char*(Vehicle vehicle, int modType)> GET_MOD_SLOT_NAME;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_DIRT_LEVEL;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_COLOUR_COMBINATION;
			extern typed_lazy_func_t<float(Vehicle vehicle)> _GET_HELI_ENGINE_HEALTH;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_BRAKE_LIGHTS;
			extern typed_lazy_func_t<bool(Any p0)> IS_PLAYBACK_GOING_ON_FOR_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int windowIndex)> REMOVE_VEHICLE_WINDOW;
			extern typed_lazy_func_t<int()> GET_NUMBER_OF_VEHICLE_NUMBER_PLATES;
			extern typed_lazy_func_t<const char*(Vehicle vehicle)> GET_VEHICLE_MOD_COLOR_2_NAME;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vehicle p1)> _0x8F719973E1445BA2;
			extern typed_lazy_func_t<bool(Hash model)> _IS_THIS_MODEL_AN_AMPHIBIOUS_CAR;
			extern typed_lazy_func_t<void(Vehicle towTruck, Vehicle vehicle)> DETACH_VEHICLE_FROM_TOW_TRUCK;
			extern typed_lazy_func_t<float(Hash modelHash)> _GET_VEHICLE_MODEL_DOWN_FORCE;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x10655FAB9915623D;
			extern typed_lazy_func_t<Vehicle(int variation, float x, float y, float z, bool direction)> CREATE_MISSION_TRAIN;
			extern typed_lazy_func_t<void(Vehicle vehicle, int state)> SET_VEHICLE_LIGHTS;
			extern typed_lazy_func_t<void(Vehicle vehicle, float angleRatio)> _SET_DESIRED_VERTICAL_FLIGHT_PHASE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_REDUCE_GRIP;
			extern typed_lazy_func_t<void(Vehicle heli, bool toggle, bool canBeUsedByAI)> SET_VEHICLE_SEARCHLIGHT;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _CAN_VEHICLE_PARACHUTE_BE_ACTIVATED;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int seatIndex)> IS_VEHICLE_SEAT_FREE;
			extern typed_lazy_func_t<void(Vehicle vehicle, float value)> SET_VEHICLE_STEER_BIAS;
			extern typed_lazy_func_t<void(Vehicle helicopter, float multiplier)> _SET_HELICOPTER_ROLL_PITCH_YAW_MULT;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _HAS_VEHICLE_PARACHUTE;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_BIKE;
			extern typed_lazy_func_t<Any(Vehicle vehicle)> START_VEHICLE_ALARM;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_ALARM_ACTIVATED;
			extern typed_lazy_func_t<Any(Any p0)> _0x36492C2F0D134C56;
			extern typed_lazy_func_t<void(Vehicle vehicle, float value)> _0xAD2D28A1AFDFF131;
			extern typed_lazy_func_t<void(Vehicle vehicle, float fade)> SET_VEHICLE_ENVEFF_SCALE;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _IS_VEHICLE_DAMAGED;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> _0x182F266C2D9E2BEB;
			extern typed_lazy_func_t<Any(Vehicle vehicle)> SET_PLAYERS_LAST_VEHICLE;
			extern typed_lazy_func_t<bool(Any p0)> IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_ATTACHED_TO_TRAILER;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> EXPLODE_VEHICLE_IN_CUTSCENE;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> _0x685D5561680D088B;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _SET_VEHICLE_JET_ENGINE_ON;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_NUMBER_OF_PASSENGERS;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vector3* out1, Vector3* out2)> _0xDF7E3EEB29642C38;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _ARE_PROPELLERS_UNDAMAGED;
			extern typed_lazy_func_t<void(bool toggle)> SET_FAR_DRAW_VEHICLES;
			extern typed_lazy_func_t<const char*(Vehicle vehicle, bool p1)> GET_VEHICLE_MOD_COLOR_1_NAME;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0xDFFCEF48E511DB48;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_SEARCHLIGHT_ON;
			extern typed_lazy_func_t<void(Vehicle vehicle, Vehicle cargobob)> DETACH_VEHICLE_FROM_CARGOBOB;
			extern typed_lazy_func_t<int(Hash modelHash)> GET_VEHICLE_CLASS_FROM_NAME;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _0xDBA3C090E3D74690;
			extern typed_lazy_func_t<void(bool p0)> _0x51DB102F4A3BA5E0;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _IS_VEHICLE_SIREN_SOUND_ON;
			extern typed_lazy_func_t<float(Vehicle vehicle, int door)> GET_VEHICLE_DOOR_ANGLE_RATIO;
			extern typed_lazy_func_t<Hash(Vehicle vehicle)> GET_VEHICLE_LAYOUT_HASH;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool state)> SET_CAN_RESPRAY_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* r, int* g, int* b)> GET_VEHICLE_COLOR;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _0xCFD778E7904C255E;
			extern typed_lazy_func_t<Entity(Vehicle towTruck)> GET_ENTITY_ATTACHED_TO_TOW_TRUCK;
			extern typed_lazy_func_t<void(Any p0)> UNPAUSE_PLAYBACK_RECORDED_VEHICLE;
			extern typed_lazy_func_t<Vehicle(float p0, float p1, float p2, float p3, int p4, int p5, int p6)> GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE;
			extern typed_lazy_func_t<void()> _0x48ADC8A773564670;
			extern typed_lazy_func_t<void(Vehicle cargobob, float p1)> _0x6D8EAC07506291FB;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Any p1)> _0xE33FFA906CE74880;
			extern typed_lazy_func_t<void(Vehicle vehicle)> REMOVE_VEHICLE_UPSIDEDOWN_CHECK;
			extern typed_lazy_func_t<void(Vehicle vehicle, int r, int g, int b)> SET_VEHICLE_CUSTOM_PRIMARY_COLOUR;
			extern typed_lazy_func_t<bool(Vehicle vehicle, bool* lightsOn, bool* highbeamsOn)> GET_VEHICLE_LIGHTS_STATE;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> _0x2A8F319B392E7B3F;
			extern typed_lazy_func_t<float(Any p0)> GET_TIME_POSITION_IN_RECORDING;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3)> _0xFAF2A78061FD9EF4;
			extern typed_lazy_func_t<bool(Vehicle veh, int doorID)> IS_VEHICLE_DOOR_DAMAGED;
			extern typed_lazy_func_t<void(Vehicle vehicle)> ADD_VEHICLE_UPSIDEDOWN_CHECK;
			extern typed_lazy_func_t<bool(Vehicle cargobob)> _DOES_CARGOBOB_HAVE_PICKUP_MAGNET;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorIndex, bool isBreakable)> _SET_VEHICLE_DOOR_CAN_BREAK;
			extern typed_lazy_func_t<float(int vehicleClass)> _GET_VEHICLE_CLASS_MAX_SPEED;
			extern typed_lazy_func_t<int(Vehicle trailers2)> GET_VEHICLE_LIVERY;
			extern typed_lazy_func_t<void(Any p0, Any p1)> _0x79DF7E806202CE01;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int index)> _IS_VEHICLE_NEON_LIGHT_ENABLED;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _0xD4C4642CB7F50B5D;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorIndex, bool forceClose, bool lock, bool p4)> SET_VEHICLE_DOOR_LATCHED;
			extern typed_lazy_func_t<void(Any p0, float p1, float p2, float p3)> _0x796A877E459B99EA;
			extern typed_lazy_func_t<bool(Vehicle towTruck, Vehicle vehicle)> IS_VEHICLE_ATTACHED_TO_TOW_TRUCK;
			extern typed_lazy_func_t<void(Vehicle vehicle, int modType, int modIndex, bool customTires)> SET_VEHICLE_MOD;
			extern typed_lazy_func_t<void(Any p0)> STOP_PLAYBACK_RECORDED_VEHICLE;
			extern typed_lazy_func_t<Any(Vehicle vehicle, int windowIndex)> ROLL_DOWN_WINDOW;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0x1093408B4B9D1146;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Any p1)> CAN_SHUFFLE_SEAT;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0xE16142B94664DEFD;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> _0xE842A9398079BD82;
			extern typed_lazy_func_t<float(Vehicle vehicle)> _GET_VEHICLE_MAX_SPEED;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x4D9D109F63FEE1D4;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> DISABLE_VEHICLE_IMPACT_EXPLOSION_ACTIVATION;
			extern typed_lazy_func_t<Any(Any p0, Any p1)> GET_TOTAL_DURATION_OF_VEHICLE_RECORDING;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x1AA8A837D2169D94;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> _0xBE5C1255A1830FF5;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_HIGH_DETAIL;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_MAX_TRACTION;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _ANY_PASSENGERS_RAPPELING;
			extern typed_lazy_func_t<void(Vehicle cargobob)> REMOVE_PICK_UP_ROPE_FOR_CARGOBOB;
			extern typed_lazy_func_t<Vehicle(Vehicle object)> _GET_VEHICLE_ATTACHED_TO_ENTITY;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool instantlyLower)> LOWER_CONVERTIBLE_ROOF;
			extern typed_lazy_func_t<const char*(Hash modelHash)> GET_DISPLAY_NAME_FROM_VEHICLE_MODEL;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_NUM_MOD_KITS;
			extern typed_lazy_func_t<Any(Any p0)> _0x2C8CBFE1EA5FC631;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_PLATE_TYPE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* r, int* g, int* b)> _GET_VEHICLE_NEON_LIGHTS_COLOUR;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _0x62CA17B74C435651;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_SIREN_ON;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x88BC673CA9E0AE99;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_ENGINE_HEALTH;
			extern typed_lazy_func_t<void(Vehicle vehicle, float value)> _SET_VEHICLE_ENGINE_TORQUE_MULTIPLIER;
			extern typed_lazy_func_t<bool(Vehicle cargobob)> DOES_CARGOBOB_HAVE_PICK_UP_ROPE;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1)> SET_VEHICLE_CEILING_HEIGHT;
			extern typed_lazy_func_t<void()> SET_ALL_VEHICLE_GENERATORS_ACTIVE;
			extern typed_lazy_func_t<Vehicle(float x, float y, float z, float radius, Hash modelHash, int flags)> GET_CLOSEST_VEHICLE;
			extern typed_lazy_func_t<bool(Hash model)> _IS_THIS_MODEL_A_JETSKI;
			extern typed_lazy_func_t<void(Vehicle vehicle, int p1, int p2)> _0xF0E4BA16D1DB546C;
			extern typed_lazy_func_t<void(Vehicle vehicle, float speed)> SET_VEHICLE_FORWARD_SPEED;
			extern typed_lazy_func_t<void(Vehicle vehicle, Ped ped, bool toggle)> SET_VEHICLE_TIMED_EXPLOSION;
			extern typed_lazy_func_t<void(Vehicle train, float x, float y, float z)> SET_MISSION_TRAIN_COORDS;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _HAS_VEHICLE_ROCKET_BOOST;
			extern typed_lazy_func_t<int(Vehicle vehicle)> _0xE6B0E8CFC3633BF0;
			extern typed_lazy_func_t<Vehicle(float x, float y, float z, float radius, Hash modelHash, int flags)> GET_RANDOM_VEHICLE_IN_SPHERE;
			extern typed_lazy_func_t<void(Vehicle* train)> DELETE_MISSION_TRAIN;
			extern typed_lazy_func_t<bool(Hash model)> IS_THIS_MODEL_A_CAR;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_UNDRIVEABLE;
			extern typed_lazy_func_t<bool(Vehicle vehicle, bool p1)> IS_VEHICLE_A_CONVERTIBLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, float multiplier)> SET_VEHICLE_LOD_MULTIPLIER;
			extern typed_lazy_func_t<void(Vehicle vehicle, Ped ped, int p2)> _SET_VEHICLE_EXCLUSIVE_DRIVER_2;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x063AE2B2CC273588;
			extern typed_lazy_func_t<int(Any p0, float p1, Any* p2)> GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_MOD_KIT;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_VISIBLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x56EB5E94318D3FB6;
			extern typed_lazy_func_t<Any(Vehicle vehicle, int windowIndex)> ROLL_UP_WINDOW;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x33506883545AC0DF;
			extern typed_lazy_func_t<void(Vehicle vehicle, float p1, float p2)> _0x99CAD8E7AFDB60FA;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _IS_VEHICLE_SHOP_RESPRAY_ALLOWED;
			extern typed_lazy_func_t<void(Vehicle vehicle, Any p1)> _0x500873A45724C863;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool killDriver, bool explodeOnImpact)> SET_VEHICLE_OUT_OF_CONTROL;
			extern typed_lazy_func_t<Hash(Vehicle vehicle)> GET_VEHICLE_CAUSE_OF_DESTRUCTION;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x0AD9E8F87FF7C16F;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_FULLBEAM;
			extern typed_lazy_func_t<void(Vehicle vehicle, float speed)> SET_PLAYBACK_SPEED;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_NUMBER_OF_VEHICLE_COLOURS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x3441CAD2F2231923;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_IN_BURNOUT;
			extern typed_lazy_func_t<float(Hash modelHash)> _GET_VEHICLE_MODEL_MAX_SPEED;
			extern typed_lazy_func_t<void(Vehicle vehicle, int paintType, int color, int p3)> SET_VEHICLE_MOD_COLOR_1;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_ENGINE_CAN_DEGRADE;
			extern typed_lazy_func_t<float(Any p0)> GET_POSITION_IN_RECORDING;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1, bool p2)> _0x9BDDC73CC6A115D4;
			extern typed_lazy_func_t<float(int vehicleClass)> GET_VEHICLE_CLASS_MAX_ACCELERATION;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _0x634148744F385576;
			extern typed_lazy_func_t<void(int i, const char* name)> REQUEST_VEHICLE_RECORDING;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool state)> SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED;
			extern typed_lazy_func_t<float(Vehicle vehicle)> _GET_HELI_TAIL_ROTOR_HEALTH;
			extern typed_lazy_func_t<int(Vehicle vehicle)> _0xEEBFC7A7EFDC35B4;
			extern typed_lazy_func_t<void(Any p0, float p1)> _0x9007A2F21DC108D4;
			extern typed_lazy_func_t<Any()> _0x6ADAABD3068C5235;
			extern typed_lazy_func_t<void(Vehicle vehicle, float health)> SET_VEHICLE_ENGINE_HEALTH;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _0x6D6AF961B72728AE;
			extern typed_lazy_func_t<Any(Vehicle train, float speed)> SET_TRAIN_SPEED;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* colorPrimary, int* colorSecondary)> GET_VEHICLE_COLOURS;
			extern typed_lazy_func_t<void(Vehicle vehicle, float distance, int killEngine, bool unknown)> _SET_VEHICLE_HALT;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x1F2E4E06DEA8992B;
			extern typed_lazy_func_t<void(Vehicle vehicle, float xOffset, float yOffset, float zOffset, float damage, float radius, bool p6)> SET_VEHICLE_DAMAGE;
			extern typed_lazy_func_t<int(Vehicle vehicle, int modType)> GET_NUM_VEHICLE_MODS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1, bool p2)> _0x7D6F9A3EF26136A0;
			extern typed_lazy_func_t<void(Vehicle vehicle)> DETACH_VEHICLE_FROM_TRAILER;
			extern typed_lazy_func_t<void(Vehicle vehicle)> _0x95CF53B3D687F9FA;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x1D97D1E3A70A649F;
			extern typed_lazy_func_t<void(Vehicle vehicle, float x, float y, float z)> _EJECT_JB700_ROOF;
			extern typed_lazy_func_t<bool(Vehicle vehicle, Vehicle* trailer)> GET_VEHICLE_TRAILER_VEHICLE;
			extern typed_lazy_func_t<Vehicle(Vehicle cargobob)> GET_VEHICLE_ATTACHED_TO_CARGOBOB;
			extern typed_lazy_func_t<void(Any p0, bool p1)> _0x21115BCD6E44656A;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> RESET_VEHICLE_WHEELS;
			extern typed_lazy_func_t<void(Vehicle vehicle, float dirtLevel)> SET_VEHICLE_DIRT_LEVEL;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> IS_VEHICLE_ON_ALL_WHEELS;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _IS_VEHICLE_MOD_LOAD_DONE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int doorIndex, int destroyType)> SET_PED_TARGETTABLE_VEHICLE_DESTROY;
			extern typed_lazy_func_t<Any(Vehicle vehicle)> CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1, float yaw, float pitch, float roll)> _JITTER_VEHICLE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int p1)> _SET_VEHICLE_LIGHTS_MODE;
			extern typed_lazy_func_t<Vehicle(float p0, float p1, float p2, float p3, int p4, int p5, int p6)> GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE;
			extern typed_lazy_func_t<void(Hash vehicleHash, int vehicleAsset)> REQUEST_VEHICLE_ASSET;
			extern typed_lazy_func_t<bool(int v)> DOES_SCRIPT_VEHICLE_GENERATOR_EXIST;
			extern typed_lazy_func_t<Any(Vehicle vehicle, int index)> SMASH_VEHICLE_WINDOW;
			extern typed_lazy_func_t<void(Vehicle train, bool toggle)> SET_RENDER_TRAIN_AS_DERAILED;
			extern typed_lazy_func_t<void(Vehicle vehicle)> ROLL_DOWN_WINDOWS;
			extern typed_lazy_func_t<float(Hash modelHash)> _GET_VEHICLE_MODEL_MAX_KNOTS;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int p1, int p2)> IS_VEHICLE_STUCK_TIMER_UP;
			extern typed_lazy_func_t<float(Hash modelHash)> GET_VEHICLE_MODEL_ACCELERATION;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool toggle)> SET_VEHICLE_TYRES_CAN_BURST;
			extern typed_lazy_func_t<void(bool p0, Hash* modelHash, int* p2)> GET_RANDOM_VEHICLE_MODEL_IN_MEMORY;
			extern typed_lazy_func_t<float(Vehicle vehicle)> _GET_HELI_MAIN_ROTOR_HEALTH;
			extern typed_lazy_func_t<const char*(Vehicle vehicle)> GET_VEHICLE_NUMBER_PLATE_TEXT;
			extern typed_lazy_func_t<void(Vehicle vehicle, int pearlescentColor, int wheelColor)> SET_VEHICLE_EXTRA_COLOURS;
			extern typed_lazy_func_t<bool(Vehicle cargobob, Vehicle vehicleAttached)> IS_VEHICLE_ATTACHED_TO_CARGOBOB;
			extern typed_lazy_func_t<void(Hash model, bool suppressed)> SET_VEHICLE_MODEL_IS_SUPPRESSED;
			extern typed_lazy_func_t<Any(Vehicle vehicle, int index)> FIX_VEHICLE_WINDOW;
			extern typed_lazy_func_t<void(Vehicle vehicle, int turnSignal, bool toggle)> SET_VEHICLE_INDICATOR_LIGHTS;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x1A78AD3D8240536F;
			extern typed_lazy_func_t<float(Vehicle vehicle)> GET_VEHICLE_MAX_BRAKING;
			extern typed_lazy_func_t<float(Hash modelHash)> GET_VEHICLE_MODEL_MAX_TRACTION;
			extern typed_lazy_func_t<void(Vehicle p0, bool p1)> _0x02398B627547189C;
			extern typed_lazy_func_t<void()> _0x0A436B8643716D14;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool state)> SET_TAXI_LIGHTS;
			extern typed_lazy_func_t<void(Vehicle vehicle, Any p1, const char* playback, Any p3, Any p4, Any p5)> START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS;
			extern typed_lazy_func_t<bool(Vehicle vehicle)> _0xAE3FEE8709B39DCB;
			extern typed_lazy_func_t<Entity(Vehicle train, int trailerNumber)> GET_TRAIN_CARRIAGE;
			extern typed_lazy_func_t<bool(Vehicle vehicle, bool frontBumper)> _0x27B926779DEB502D;
			extern typed_lazy_func_t<void(Vehicle vehicle, bool p1)> _0x91A0BD635321F145;
			extern typed_lazy_func_t<bool(Vehicle vehicle, int extraId)> DOES_EXTRA_EXIST;
			extern typed_lazy_func_t<int(Vehicle vehicle)> GET_VEHICLE_MOD_KIT_TYPE;
			extern typed_lazy_func_t<void(Vehicle vehicle, int* r, int* g, int* b)> GET_VEHICLE_TYRE_SMOKE_COLOR;
			extern typed_lazy_func_t<void(Any p0)> _0xE30524E1871F481D;
			extern typed_lazy_func_t<int(int p0, const char* p1)> GET_VEHICLE_RECORDING_ID;
		} /* VEHICLE */
	} /* ntv */
} /* nob */
