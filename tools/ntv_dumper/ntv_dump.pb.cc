// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ntv_dump.proto

#include "ntv_dump.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace nob {
class ntv_dump_funcsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ntv_dump_funcs>
      _instance;
} _ntv_dump_funcs_default_instance_;
class ntv_dump_FuncTableEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ntv_dump_FuncTableEntry_DoNotUse>
      _instance;
} _ntv_dump_FuncTableEntry_DoNotUse_default_instance_;
class ntv_dump_ScriptFuncsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ntv_dump_ScriptFuncsEntry_DoNotUse>
      _instance;
} _ntv_dump_ScriptFuncsEntry_DoNotUse_default_instance_;
class ntv_dumpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ntv_dump>
      _instance;
} _ntv_dump_default_instance_;
}  // namespace nob
namespace protobuf_ntv_5fdump_2eproto {
void InitDefaultsntv_dump_funcsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::nob::_ntv_dump_funcs_default_instance_;
    new (ptr) ::nob::ntv_dump_funcs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nob::ntv_dump_funcs::InitAsDefaultInstance();
}

void InitDefaultsntv_dump_funcs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsntv_dump_funcsImpl);
}

void InitDefaultsntv_dump_FuncTableEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::nob::_ntv_dump_FuncTableEntry_DoNotUse_default_instance_;
    new (ptr) ::nob::ntv_dump_FuncTableEntry_DoNotUse();
  }
  ::nob::ntv_dump_FuncTableEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsntv_dump_FuncTableEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsntv_dump_FuncTableEntry_DoNotUseImpl);
}

void InitDefaultsntv_dump_ScriptFuncsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ntv_5fdump_2eproto::InitDefaultsntv_dump_funcs();
  {
    void* ptr = &::nob::_ntv_dump_ScriptFuncsEntry_DoNotUse_default_instance_;
    new (ptr) ::nob::ntv_dump_ScriptFuncsEntry_DoNotUse();
  }
  ::nob::ntv_dump_ScriptFuncsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsntv_dump_ScriptFuncsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsntv_dump_ScriptFuncsEntry_DoNotUseImpl);
}

void InitDefaultsntv_dumpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ntv_5fdump_2eproto::InitDefaultsntv_dump_FuncTableEntry_DoNotUse();
  protobuf_ntv_5fdump_2eproto::InitDefaultsntv_dump_ScriptFuncsEntry_DoNotUse();
  {
    void* ptr = &::nob::_ntv_dump_default_instance_;
    new (ptr) ::nob::ntv_dump();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nob::ntv_dump::InitAsDefaultInstance();
}

void InitDefaultsntv_dump() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsntv_dumpImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_funcs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_funcs, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_FuncTableEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_FuncTableEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_FuncTableEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_FuncTableEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_ScriptFuncsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_ScriptFuncsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_ScriptFuncsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump_ScriptFuncsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump, func_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nob::ntv_dump, script_funcs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nob::ntv_dump_funcs)},
  { 6, 13, sizeof(::nob::ntv_dump_FuncTableEntry_DoNotUse)},
  { 15, 22, sizeof(::nob::ntv_dump_ScriptFuncsEntry_DoNotUse)},
  { 24, -1, sizeof(::nob::ntv_dump)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::nob::_ntv_dump_funcs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nob::_ntv_dump_FuncTableEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nob::_ntv_dump_ScriptFuncsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nob::_ntv_dump_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ntv_dump.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016ntv_dump.proto\022\003nob\"\204\002\n\010ntv_dump\0220\n\nfu"
      "nc_table\030\001 \003(\0132\034.nob.ntv_dump.FuncTableE"
      "ntry\0224\n\014script_funcs\030\002 \003(\0132\036.nob.ntv_dum"
      "p.ScriptFuncsEntry\032\025\n\005funcs\022\014\n\004addr\030\001 \003("
      "\004\0320\n\016FuncTableEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005valu"
      "e\030\002 \001(\004:\0028\001\032G\n\020ScriptFuncsEntry\022\013\n\003key\030\001"
      " \001(\t\022\"\n\005value\030\002 \001(\0132\023.nob.ntv_dump.funcs"
      ":\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 292);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ntv_dump.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ntv_5fdump_2eproto
namespace nob {

// ===================================================================

void ntv_dump_funcs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ntv_dump_funcs::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ntv_dump_funcs::ntv_dump_funcs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ntv_5fdump_2eproto::InitDefaultsntv_dump_funcs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nob.ntv_dump.funcs)
}
ntv_dump_funcs::ntv_dump_funcs(const ntv_dump_funcs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      addr_(from.addr_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nob.ntv_dump.funcs)
}

void ntv_dump_funcs::SharedCtor() {
  _cached_size_ = 0;
}

ntv_dump_funcs::~ntv_dump_funcs() {
  // @@protoc_insertion_point(destructor:nob.ntv_dump.funcs)
  SharedDtor();
}

void ntv_dump_funcs::SharedDtor() {
}

void ntv_dump_funcs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ntv_dump_funcs::descriptor() {
  ::protobuf_ntv_5fdump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ntv_5fdump_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ntv_dump_funcs& ntv_dump_funcs::default_instance() {
  ::protobuf_ntv_5fdump_2eproto::InitDefaultsntv_dump_funcs();
  return *internal_default_instance();
}

ntv_dump_funcs* ntv_dump_funcs::New(::google::protobuf::Arena* arena) const {
  ntv_dump_funcs* n = new ntv_dump_funcs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ntv_dump_funcs::Clear() {
// @@protoc_insertion_point(message_clear_start:nob.ntv_dump.funcs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addr_.Clear();
  _internal_metadata_.Clear();
}

bool ntv_dump_funcs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nob.ntv_dump.funcs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_addr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_addr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nob.ntv_dump.funcs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nob.ntv_dump.funcs)
  return false;
#undef DO_
}

void ntv_dump_funcs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nob.ntv_dump.funcs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 addr = 1;
  if (this->addr_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _addr_cached_byte_size_));
  }
  for (int i = 0, n = this->addr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->addr(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nob.ntv_dump.funcs)
}

::google::protobuf::uint8* ntv_dump_funcs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nob.ntv_dump.funcs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 addr = 1;
  if (this->addr_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _addr_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->addr_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nob.ntv_dump.funcs)
  return target;
}

size_t ntv_dump_funcs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nob.ntv_dump.funcs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 addr = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->addr_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _addr_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ntv_dump_funcs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nob.ntv_dump.funcs)
  GOOGLE_DCHECK_NE(&from, this);
  const ntv_dump_funcs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ntv_dump_funcs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nob.ntv_dump.funcs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nob.ntv_dump.funcs)
    MergeFrom(*source);
  }
}

void ntv_dump_funcs::MergeFrom(const ntv_dump_funcs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nob.ntv_dump.funcs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addr_.MergeFrom(from.addr_);
}

void ntv_dump_funcs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nob.ntv_dump.funcs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ntv_dump_funcs::CopyFrom(const ntv_dump_funcs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nob.ntv_dump.funcs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ntv_dump_funcs::IsInitialized() const {
  return true;
}

void ntv_dump_funcs::Swap(ntv_dump_funcs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ntv_dump_funcs::InternalSwap(ntv_dump_funcs* other) {
  using std::swap;
  addr_.InternalSwap(&other->addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ntv_dump_funcs::GetMetadata() const {
  protobuf_ntv_5fdump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ntv_5fdump_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ntv_dump_FuncTableEntry_DoNotUse::ntv_dump_FuncTableEntry_DoNotUse() {}
ntv_dump_FuncTableEntry_DoNotUse::ntv_dump_FuncTableEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ntv_dump_FuncTableEntry_DoNotUse::MergeFrom(const ntv_dump_FuncTableEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ntv_dump_FuncTableEntry_DoNotUse::GetMetadata() const {
  ::protobuf_ntv_5fdump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ntv_5fdump_2eproto::file_level_metadata[1];
}
void ntv_dump_FuncTableEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ntv_dump_ScriptFuncsEntry_DoNotUse::ntv_dump_ScriptFuncsEntry_DoNotUse() {}
ntv_dump_ScriptFuncsEntry_DoNotUse::ntv_dump_ScriptFuncsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ntv_dump_ScriptFuncsEntry_DoNotUse::MergeFrom(const ntv_dump_ScriptFuncsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ntv_dump_ScriptFuncsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_ntv_5fdump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ntv_5fdump_2eproto::file_level_metadata[2];
}
void ntv_dump_ScriptFuncsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ntv_dump::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ntv_dump::kFuncTableFieldNumber;
const int ntv_dump::kScriptFuncsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ntv_dump::ntv_dump()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ntv_5fdump_2eproto::InitDefaultsntv_dump();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nob.ntv_dump)
}
ntv_dump::ntv_dump(const ntv_dump& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  func_table_.MergeFrom(from.func_table_);
  script_funcs_.MergeFrom(from.script_funcs_);
  // @@protoc_insertion_point(copy_constructor:nob.ntv_dump)
}

void ntv_dump::SharedCtor() {
  _cached_size_ = 0;
}

ntv_dump::~ntv_dump() {
  // @@protoc_insertion_point(destructor:nob.ntv_dump)
  SharedDtor();
}

void ntv_dump::SharedDtor() {
}

void ntv_dump::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ntv_dump::descriptor() {
  ::protobuf_ntv_5fdump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ntv_5fdump_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ntv_dump& ntv_dump::default_instance() {
  ::protobuf_ntv_5fdump_2eproto::InitDefaultsntv_dump();
  return *internal_default_instance();
}

ntv_dump* ntv_dump::New(::google::protobuf::Arena* arena) const {
  ntv_dump* n = new ntv_dump;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ntv_dump::Clear() {
// @@protoc_insertion_point(message_clear_start:nob.ntv_dump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  func_table_.Clear();
  script_funcs_.Clear();
  _internal_metadata_.Clear();
}

bool ntv_dump::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nob.ntv_dump)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, uint64> func_table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ntv_dump_FuncTableEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ntv_dump_FuncTableEntry_DoNotUse,
              ::google::protobuf::uint64, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 > > parser(&func_table_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .nob.ntv_dump.funcs> script_funcs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ntv_dump_ScriptFuncsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ntv_dump_ScriptFuncsEntry_DoNotUse,
              ::std::string, ::nob::ntv_dump_funcs,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs > > parser(&script_funcs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nob.ntv_dump.ScriptFuncsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nob.ntv_dump)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nob.ntv_dump)
  return false;
#undef DO_
}

void ntv_dump::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nob.ntv_dump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, uint64> func_table = 1;
  if (!this->func_table().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->func_table().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->func_table().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->func_table().begin();
          it != this->func_table().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ntv_dump_FuncTableEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(func_table_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ntv_dump_FuncTableEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->func_table().begin();
          it != this->func_table().end(); ++it) {
        entry.reset(func_table_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<string, .nob.ntv_dump.funcs> script_funcs = 2;
  if (!this->script_funcs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "nob.ntv_dump.ScriptFuncsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->script_funcs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_funcs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::const_iterator
          it = this->script_funcs().begin();
          it != this->script_funcs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ntv_dump_ScriptFuncsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_funcs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ntv_dump_ScriptFuncsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::const_iterator
          it = this->script_funcs().begin();
          it != this->script_funcs().end(); ++it) {
        entry.reset(script_funcs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nob.ntv_dump)
}

::google::protobuf::uint8* ntv_dump::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nob.ntv_dump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, uint64> func_table = 1;
  if (!this->func_table().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->func_table().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->func_table().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->func_table().begin();
          it != this->func_table().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ntv_dump_FuncTableEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(func_table_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ntv_dump_FuncTableEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->func_table().begin();
          it != this->func_table().end(); ++it) {
        entry.reset(func_table_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<string, .nob.ntv_dump.funcs> script_funcs = 2;
  if (!this->script_funcs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "nob.ntv_dump.ScriptFuncsEntry.key");
      }
    };

    if (deterministic &&
        this->script_funcs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->script_funcs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::const_iterator
          it = this->script_funcs().begin();
          it != this->script_funcs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ntv_dump_ScriptFuncsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(script_funcs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ntv_dump_ScriptFuncsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::const_iterator
          it = this->script_funcs().begin();
          it != this->script_funcs().end(); ++it) {
        entry.reset(script_funcs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nob.ntv_dump)
  return target;
}

size_t ntv_dump::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nob.ntv_dump)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, uint64> func_table = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->func_table_size());
  {
    ::google::protobuf::scoped_ptr<ntv_dump_FuncTableEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
        it = this->func_table().begin();
        it != this->func_table().end(); ++it) {
      entry.reset(func_table_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .nob.ntv_dump.funcs> script_funcs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->script_funcs_size());
  {
    ::google::protobuf::scoped_ptr<ntv_dump_ScriptFuncsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::nob::ntv_dump_funcs >::const_iterator
        it = this->script_funcs().begin();
        it != this->script_funcs().end(); ++it) {
      entry.reset(script_funcs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ntv_dump::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nob.ntv_dump)
  GOOGLE_DCHECK_NE(&from, this);
  const ntv_dump* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ntv_dump>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nob.ntv_dump)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nob.ntv_dump)
    MergeFrom(*source);
  }
}

void ntv_dump::MergeFrom(const ntv_dump& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nob.ntv_dump)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  func_table_.MergeFrom(from.func_table_);
  script_funcs_.MergeFrom(from.script_funcs_);
}

void ntv_dump::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nob.ntv_dump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ntv_dump::CopyFrom(const ntv_dump& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nob.ntv_dump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ntv_dump::IsInitialized() const {
  return true;
}

void ntv_dump::Swap(ntv_dump* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ntv_dump::InternalSwap(ntv_dump* other) {
  using std::swap;
  func_table_.Swap(&other->func_table_);
  script_funcs_.Swap(&other->script_funcs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ntv_dump::GetMetadata() const {
  protobuf_ntv_5fdump_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ntv_5fdump_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nob

// @@protoc_insertion_point(global_scope)
